/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// CompuscanIncomePredictorResponse
    /// </summary>
    [DataContract]
    public partial class CompuscanIncomePredictorResponse :  IEquatable<CompuscanIncomePredictorResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompuscanIncomePredictorResponse" /> class.
        /// </summary>
        /// <param name="gmipBand">gmipBand.</param>
        /// <param name="gmipConfidenceLevel">gmipConfidenceLevel.</param>
        /// <param name="gmipValue">gmipValue.</param>
        /// <param name="idnumber">idnumber.</param>
        /// <param name="transactionResponse">transactionResponse.</param>
        public CompuscanIncomePredictorResponse(string gmipBand = default(string), string gmipConfidenceLevel = default(string), string gmipValue = default(string), string idnumber = default(string), CompuscanTransactionResponse transactionResponse = default(CompuscanTransactionResponse))
        {
            this.GmipBand = gmipBand;
            this.GmipConfidenceLevel = gmipConfidenceLevel;
            this.GmipValue = gmipValue;
            this.Idnumber = idnumber;
            this.GmipBand = gmipBand;
            this.GmipConfidenceLevel = gmipConfidenceLevel;
            this.GmipValue = gmipValue;
            this.Idnumber = idnumber;
            this.TransactionResponse = transactionResponse;
        }

        /// <summary>
        /// Gets or Sets GmipBand
        /// </summary>
        [DataMember(Name="gmipBand", EmitDefaultValue=true)]
        public string GmipBand { get; set; }

        /// <summary>
        /// Gets or Sets GmipConfidenceLevel
        /// </summary>
        [DataMember(Name="gmipConfidenceLevel", EmitDefaultValue=true)]
        public string GmipConfidenceLevel { get; set; }

        /// <summary>
        /// Gets or Sets GmipValue
        /// </summary>
        [DataMember(Name="gmipValue", EmitDefaultValue=true)]
        public string GmipValue { get; set; }

        /// <summary>
        /// Gets or Sets Idnumber
        /// </summary>
        [DataMember(Name="idnumber", EmitDefaultValue=true)]
        public string Idnumber { get; set; }

        /// <summary>
        /// Gets or Sets TransactionResponse
        /// </summary>
        [DataMember(Name="transactionResponse", EmitDefaultValue=false)]
        public CompuscanTransactionResponse TransactionResponse { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompuscanIncomePredictorResponse {\n");
            sb.Append("  GmipBand: ").Append(GmipBand).Append("\n");
            sb.Append("  GmipConfidenceLevel: ").Append(GmipConfidenceLevel).Append("\n");
            sb.Append("  GmipValue: ").Append(GmipValue).Append("\n");
            sb.Append("  Idnumber: ").Append(Idnumber).Append("\n");
            sb.Append("  TransactionResponse: ").Append(TransactionResponse).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompuscanIncomePredictorResponse);
        }

        /// <summary>
        /// Returns true if CompuscanIncomePredictorResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of CompuscanIncomePredictorResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompuscanIncomePredictorResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.GmipBand == input.GmipBand ||
                    (this.GmipBand != null &&
                    this.GmipBand.Equals(input.GmipBand))
                ) && 
                (
                    this.GmipConfidenceLevel == input.GmipConfidenceLevel ||
                    (this.GmipConfidenceLevel != null &&
                    this.GmipConfidenceLevel.Equals(input.GmipConfidenceLevel))
                ) && 
                (
                    this.GmipValue == input.GmipValue ||
                    (this.GmipValue != null &&
                    this.GmipValue.Equals(input.GmipValue))
                ) && 
                (
                    this.Idnumber == input.Idnumber ||
                    (this.Idnumber != null &&
                    this.Idnumber.Equals(input.Idnumber))
                ) && 
                (
                    this.TransactionResponse == input.TransactionResponse ||
                    (this.TransactionResponse != null &&
                    this.TransactionResponse.Equals(input.TransactionResponse))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.GmipBand != null)
                    hashCode = hashCode * 59 + this.GmipBand.GetHashCode();
                if (this.GmipConfidenceLevel != null)
                    hashCode = hashCode * 59 + this.GmipConfidenceLevel.GetHashCode();
                if (this.GmipValue != null)
                    hashCode = hashCode * 59 + this.GmipValue.GetHashCode();
                if (this.Idnumber != null)
                    hashCode = hashCode * 59 + this.Idnumber.GetHashCode();
                if (this.TransactionResponse != null)
                    hashCode = hashCode * 59 + this.TransactionResponse.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
