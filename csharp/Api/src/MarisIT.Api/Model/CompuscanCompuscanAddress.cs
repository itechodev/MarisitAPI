/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// CompuscanCompuscanAddress
    /// </summary>
    [DataContract]
    public partial class CompuscanCompuscanAddress :  IEquatable<CompuscanCompuscanAddress>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompuscanCompuscanAddress" /> class.
        /// </summary>
        /// <param name="adrsLine1">adrsLine1.</param>
        /// <param name="adrsLine2">adrsLine2.</param>
        /// <param name="adrsLine3">adrsLine3.</param>
        /// <param name="adrsLine4">adrsLine4.</param>
        /// <param name="postalCode">postalCode.</param>
        /// <param name="adrsType">adrsType.</param>
        /// <param name="lastUpdated">lastUpdated.</param>
        /// <param name="createdDate">createdDate.</param>
        public CompuscanCompuscanAddress(string adrsLine1 = default(string), string adrsLine2 = default(string), string adrsLine3 = default(string), string adrsLine4 = default(string), string postalCode = default(string), string adrsType = default(string), string lastUpdated = default(string), string createdDate = default(string))
        {
            this.AdrsLine1 = adrsLine1;
            this.AdrsLine2 = adrsLine2;
            this.AdrsLine3 = adrsLine3;
            this.AdrsLine4 = adrsLine4;
            this.PostalCode = postalCode;
            this.AdrsType = adrsType;
            this.LastUpdated = lastUpdated;
            this.CreatedDate = createdDate;
            this.AdrsLine1 = adrsLine1;
            this.AdrsLine2 = adrsLine2;
            this.AdrsLine3 = adrsLine3;
            this.AdrsLine4 = adrsLine4;
            this.PostalCode = postalCode;
            this.AdrsType = adrsType;
            this.LastUpdated = lastUpdated;
            this.CreatedDate = createdDate;
        }

        /// <summary>
        /// Gets or Sets AdrsLine1
        /// </summary>
        [DataMember(Name="adrsLine1", EmitDefaultValue=true)]
        public string AdrsLine1 { get; set; }

        /// <summary>
        /// Gets or Sets AdrsLine2
        /// </summary>
        [DataMember(Name="adrsLine2", EmitDefaultValue=true)]
        public string AdrsLine2 { get; set; }

        /// <summary>
        /// Gets or Sets AdrsLine3
        /// </summary>
        [DataMember(Name="adrsLine3", EmitDefaultValue=true)]
        public string AdrsLine3 { get; set; }

        /// <summary>
        /// Gets or Sets AdrsLine4
        /// </summary>
        [DataMember(Name="adrsLine4", EmitDefaultValue=true)]
        public string AdrsLine4 { get; set; }

        /// <summary>
        /// Gets or Sets PostalCode
        /// </summary>
        [DataMember(Name="postalCode", EmitDefaultValue=true)]
        public string PostalCode { get; set; }

        /// <summary>
        /// Gets or Sets AdrsType
        /// </summary>
        [DataMember(Name="adrsType", EmitDefaultValue=true)]
        public string AdrsType { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdated
        /// </summary>
        [DataMember(Name="lastUpdated", EmitDefaultValue=true)]
        public string LastUpdated { get; set; }

        /// <summary>
        /// Gets or Sets CreatedDate
        /// </summary>
        [DataMember(Name="createdDate", EmitDefaultValue=true)]
        public string CreatedDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompuscanCompuscanAddress {\n");
            sb.Append("  AdrsLine1: ").Append(AdrsLine1).Append("\n");
            sb.Append("  AdrsLine2: ").Append(AdrsLine2).Append("\n");
            sb.Append("  AdrsLine3: ").Append(AdrsLine3).Append("\n");
            sb.Append("  AdrsLine4: ").Append(AdrsLine4).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("  AdrsType: ").Append(AdrsType).Append("\n");
            sb.Append("  LastUpdated: ").Append(LastUpdated).Append("\n");
            sb.Append("  CreatedDate: ").Append(CreatedDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompuscanCompuscanAddress);
        }

        /// <summary>
        /// Returns true if CompuscanCompuscanAddress instances are equal
        /// </summary>
        /// <param name="input">Instance of CompuscanCompuscanAddress to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompuscanCompuscanAddress input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AdrsLine1 == input.AdrsLine1 ||
                    (this.AdrsLine1 != null &&
                    this.AdrsLine1.Equals(input.AdrsLine1))
                ) && 
                (
                    this.AdrsLine2 == input.AdrsLine2 ||
                    (this.AdrsLine2 != null &&
                    this.AdrsLine2.Equals(input.AdrsLine2))
                ) && 
                (
                    this.AdrsLine3 == input.AdrsLine3 ||
                    (this.AdrsLine3 != null &&
                    this.AdrsLine3.Equals(input.AdrsLine3))
                ) && 
                (
                    this.AdrsLine4 == input.AdrsLine4 ||
                    (this.AdrsLine4 != null &&
                    this.AdrsLine4.Equals(input.AdrsLine4))
                ) && 
                (
                    this.PostalCode == input.PostalCode ||
                    (this.PostalCode != null &&
                    this.PostalCode.Equals(input.PostalCode))
                ) && 
                (
                    this.AdrsType == input.AdrsType ||
                    (this.AdrsType != null &&
                    this.AdrsType.Equals(input.AdrsType))
                ) && 
                (
                    this.LastUpdated == input.LastUpdated ||
                    (this.LastUpdated != null &&
                    this.LastUpdated.Equals(input.LastUpdated))
                ) && 
                (
                    this.CreatedDate == input.CreatedDate ||
                    (this.CreatedDate != null &&
                    this.CreatedDate.Equals(input.CreatedDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AdrsLine1 != null)
                    hashCode = hashCode * 59 + this.AdrsLine1.GetHashCode();
                if (this.AdrsLine2 != null)
                    hashCode = hashCode * 59 + this.AdrsLine2.GetHashCode();
                if (this.AdrsLine3 != null)
                    hashCode = hashCode * 59 + this.AdrsLine3.GetHashCode();
                if (this.AdrsLine4 != null)
                    hashCode = hashCode * 59 + this.AdrsLine4.GetHashCode();
                if (this.PostalCode != null)
                    hashCode = hashCode * 59 + this.PostalCode.GetHashCode();
                if (this.AdrsType != null)
                    hashCode = hashCode * 59 + this.AdrsType.GetHashCode();
                if (this.LastUpdated != null)
                    hashCode = hashCode * 59 + this.LastUpdated.GetHashCode();
                if (this.CreatedDate != null)
                    hashCode = hashCode * 59 + this.CreatedDate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
