/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118HawkAlertHA
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118HawkAlertHA :  IEquatable<TransunionConsumer118HawkAlertHA>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118HawkAlertHA" /> class.
        /// </summary>
        /// <param name="alertDate">alertDate.</param>
        /// <param name="hawkType">hawkType.</param>
        /// <param name="hawkfoundFor">hawkfoundFor.</param>
        /// <param name="hawkNumber">hawkNumber.</param>
        /// <param name="code">code.</param>
        /// <param name="description">description.</param>
        /// <param name="deceasedDate">deceasedDate.</param>
        /// <param name="name">name.</param>
        /// <param name="contactName">contactName.</param>
        /// <param name="contactTelephoneCode">contactTelephoneCode.</param>
        /// <param name="contactTelephoneNo">contactTelephoneNo.</param>
        /// <param name="supplierReferenceNo">supplierReferenceNo.</param>
        /// <param name="referenceNo">referenceNo.</param>
        /// <param name="victimContactTelephoneCode">victimContactTelephoneCode.</param>
        /// <param name="victimContactTelephoneNo">victimContactTelephoneNo.</param>
        public TransunionConsumer118HawkAlertHA(string alertDate = default(string), string hawkType = default(string), string hawkfoundFor = default(string), string hawkNumber = default(string), string code = default(string), string description = default(string), string deceasedDate = default(string), string name = default(string), string contactName = default(string), string contactTelephoneCode = default(string), string contactTelephoneNo = default(string), string supplierReferenceNo = default(string), string referenceNo = default(string), string victimContactTelephoneCode = default(string), string victimContactTelephoneNo = default(string))
        {
            this.AlertDate = alertDate;
            this.HawkType = hawkType;
            this.HawkfoundFor = hawkfoundFor;
            this.HawkNumber = hawkNumber;
            this.Code = code;
            this.Description = description;
            this.DeceasedDate = deceasedDate;
            this.Name = name;
            this.ContactName = contactName;
            this.ContactTelephoneCode = contactTelephoneCode;
            this.ContactTelephoneNo = contactTelephoneNo;
            this.SupplierReferenceNo = supplierReferenceNo;
            this.ReferenceNo = referenceNo;
            this.VictimContactTelephoneCode = victimContactTelephoneCode;
            this.VictimContactTelephoneNo = victimContactTelephoneNo;
            this.AlertDate = alertDate;
            this.HawkType = hawkType;
            this.HawkfoundFor = hawkfoundFor;
            this.HawkNumber = hawkNumber;
            this.Code = code;
            this.Description = description;
            this.DeceasedDate = deceasedDate;
            this.Name = name;
            this.ContactName = contactName;
            this.ContactTelephoneCode = contactTelephoneCode;
            this.ContactTelephoneNo = contactTelephoneNo;
            this.SupplierReferenceNo = supplierReferenceNo;
            this.ReferenceNo = referenceNo;
            this.VictimContactTelephoneCode = victimContactTelephoneCode;
            this.VictimContactTelephoneNo = victimContactTelephoneNo;
        }

        /// <summary>
        /// Gets or Sets AlertDate
        /// </summary>
        [DataMember(Name="alertDate", EmitDefaultValue=true)]
        public string AlertDate { get; set; }

        /// <summary>
        /// Gets or Sets HawkType
        /// </summary>
        [DataMember(Name="hawkType", EmitDefaultValue=true)]
        public string HawkType { get; set; }

        /// <summary>
        /// Gets or Sets HawkfoundFor
        /// </summary>
        [DataMember(Name="hawkfoundFor", EmitDefaultValue=true)]
        public string HawkfoundFor { get; set; }

        /// <summary>
        /// Gets or Sets HawkNumber
        /// </summary>
        [DataMember(Name="hawkNumber", EmitDefaultValue=true)]
        public string HawkNumber { get; set; }

        /// <summary>
        /// Gets or Sets Code
        /// </summary>
        [DataMember(Name="code", EmitDefaultValue=true)]
        public string Code { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets DeceasedDate
        /// </summary>
        [DataMember(Name="deceasedDate", EmitDefaultValue=true)]
        public string DeceasedDate { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets ContactName
        /// </summary>
        [DataMember(Name="contactName", EmitDefaultValue=true)]
        public string ContactName { get; set; }

        /// <summary>
        /// Gets or Sets ContactTelephoneCode
        /// </summary>
        [DataMember(Name="contactTelephoneCode", EmitDefaultValue=true)]
        public string ContactTelephoneCode { get; set; }

        /// <summary>
        /// Gets or Sets ContactTelephoneNo
        /// </summary>
        [DataMember(Name="contactTelephoneNo", EmitDefaultValue=true)]
        public string ContactTelephoneNo { get; set; }

        /// <summary>
        /// Gets or Sets SupplierReferenceNo
        /// </summary>
        [DataMember(Name="supplierReferenceNo", EmitDefaultValue=true)]
        public string SupplierReferenceNo { get; set; }

        /// <summary>
        /// Gets or Sets ReferenceNo
        /// </summary>
        [DataMember(Name="referenceNo", EmitDefaultValue=true)]
        public string ReferenceNo { get; set; }

        /// <summary>
        /// Gets or Sets VictimContactTelephoneCode
        /// </summary>
        [DataMember(Name="victimContactTelephoneCode", EmitDefaultValue=true)]
        public string VictimContactTelephoneCode { get; set; }

        /// <summary>
        /// Gets or Sets VictimContactTelephoneNo
        /// </summary>
        [DataMember(Name="victimContactTelephoneNo", EmitDefaultValue=true)]
        public string VictimContactTelephoneNo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118HawkAlertHA {\n");
            sb.Append("  AlertDate: ").Append(AlertDate).Append("\n");
            sb.Append("  HawkType: ").Append(HawkType).Append("\n");
            sb.Append("  HawkfoundFor: ").Append(HawkfoundFor).Append("\n");
            sb.Append("  HawkNumber: ").Append(HawkNumber).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  DeceasedDate: ").Append(DeceasedDate).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ContactName: ").Append(ContactName).Append("\n");
            sb.Append("  ContactTelephoneCode: ").Append(ContactTelephoneCode).Append("\n");
            sb.Append("  ContactTelephoneNo: ").Append(ContactTelephoneNo).Append("\n");
            sb.Append("  SupplierReferenceNo: ").Append(SupplierReferenceNo).Append("\n");
            sb.Append("  ReferenceNo: ").Append(ReferenceNo).Append("\n");
            sb.Append("  VictimContactTelephoneCode: ").Append(VictimContactTelephoneCode).Append("\n");
            sb.Append("  VictimContactTelephoneNo: ").Append(VictimContactTelephoneNo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118HawkAlertHA);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118HawkAlertHA instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118HawkAlertHA to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118HawkAlertHA input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AlertDate == input.AlertDate ||
                    (this.AlertDate != null &&
                    this.AlertDate.Equals(input.AlertDate))
                ) && 
                (
                    this.HawkType == input.HawkType ||
                    (this.HawkType != null &&
                    this.HawkType.Equals(input.HawkType))
                ) && 
                (
                    this.HawkfoundFor == input.HawkfoundFor ||
                    (this.HawkfoundFor != null &&
                    this.HawkfoundFor.Equals(input.HawkfoundFor))
                ) && 
                (
                    this.HawkNumber == input.HawkNumber ||
                    (this.HawkNumber != null &&
                    this.HawkNumber.Equals(input.HawkNumber))
                ) && 
                (
                    this.Code == input.Code ||
                    (this.Code != null &&
                    this.Code.Equals(input.Code))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.DeceasedDate == input.DeceasedDate ||
                    (this.DeceasedDate != null &&
                    this.DeceasedDate.Equals(input.DeceasedDate))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.ContactName == input.ContactName ||
                    (this.ContactName != null &&
                    this.ContactName.Equals(input.ContactName))
                ) && 
                (
                    this.ContactTelephoneCode == input.ContactTelephoneCode ||
                    (this.ContactTelephoneCode != null &&
                    this.ContactTelephoneCode.Equals(input.ContactTelephoneCode))
                ) && 
                (
                    this.ContactTelephoneNo == input.ContactTelephoneNo ||
                    (this.ContactTelephoneNo != null &&
                    this.ContactTelephoneNo.Equals(input.ContactTelephoneNo))
                ) && 
                (
                    this.SupplierReferenceNo == input.SupplierReferenceNo ||
                    (this.SupplierReferenceNo != null &&
                    this.SupplierReferenceNo.Equals(input.SupplierReferenceNo))
                ) && 
                (
                    this.ReferenceNo == input.ReferenceNo ||
                    (this.ReferenceNo != null &&
                    this.ReferenceNo.Equals(input.ReferenceNo))
                ) && 
                (
                    this.VictimContactTelephoneCode == input.VictimContactTelephoneCode ||
                    (this.VictimContactTelephoneCode != null &&
                    this.VictimContactTelephoneCode.Equals(input.VictimContactTelephoneCode))
                ) && 
                (
                    this.VictimContactTelephoneNo == input.VictimContactTelephoneNo ||
                    (this.VictimContactTelephoneNo != null &&
                    this.VictimContactTelephoneNo.Equals(input.VictimContactTelephoneNo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AlertDate != null)
                    hashCode = hashCode * 59 + this.AlertDate.GetHashCode();
                if (this.HawkType != null)
                    hashCode = hashCode * 59 + this.HawkType.GetHashCode();
                if (this.HawkfoundFor != null)
                    hashCode = hashCode * 59 + this.HawkfoundFor.GetHashCode();
                if (this.HawkNumber != null)
                    hashCode = hashCode * 59 + this.HawkNumber.GetHashCode();
                if (this.Code != null)
                    hashCode = hashCode * 59 + this.Code.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.DeceasedDate != null)
                    hashCode = hashCode * 59 + this.DeceasedDate.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.ContactName != null)
                    hashCode = hashCode * 59 + this.ContactName.GetHashCode();
                if (this.ContactTelephoneCode != null)
                    hashCode = hashCode * 59 + this.ContactTelephoneCode.GetHashCode();
                if (this.ContactTelephoneNo != null)
                    hashCode = hashCode * 59 + this.ContactTelephoneNo.GetHashCode();
                if (this.SupplierReferenceNo != null)
                    hashCode = hashCode * 59 + this.SupplierReferenceNo.GetHashCode();
                if (this.ReferenceNo != null)
                    hashCode = hashCode * 59 + this.ReferenceNo.GetHashCode();
                if (this.VictimContactTelephoneCode != null)
                    hashCode = hashCode * 59 + this.VictimContactTelephoneCode.GetHashCode();
                if (this.VictimContactTelephoneNo != null)
                    hashCode = hashCode * 59 + this.VictimContactTelephoneNo.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
