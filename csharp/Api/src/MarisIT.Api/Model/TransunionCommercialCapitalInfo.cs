/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialCapitalInfo
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialCapitalInfo :  IEquatable<TransunionCommercialCapitalInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialCapitalInfo" /> class.
        /// </summary>
        /// <param name="capitalChangedFrom">capitalChangedFrom.</param>
        /// <param name="capitalChangedTo">capitalChangedTo.</param>
        /// <param name="capitalChangedDate">capitalChangedDate.</param>
        public TransunionCommercialCapitalInfo(string capitalChangedFrom = default(string), string capitalChangedTo = default(string), string capitalChangedDate = default(string))
        {
            this.CapitalChangedFrom = capitalChangedFrom;
            this.CapitalChangedTo = capitalChangedTo;
            this.CapitalChangedDate = capitalChangedDate;
            this.CapitalChangedFrom = capitalChangedFrom;
            this.CapitalChangedTo = capitalChangedTo;
            this.CapitalChangedDate = capitalChangedDate;
        }

        /// <summary>
        /// Gets or Sets CapitalChangedFrom
        /// </summary>
        [DataMember(Name="capitalChangedFrom", EmitDefaultValue=true)]
        public string CapitalChangedFrom { get; set; }

        /// <summary>
        /// Gets or Sets CapitalChangedTo
        /// </summary>
        [DataMember(Name="capitalChangedTo", EmitDefaultValue=true)]
        public string CapitalChangedTo { get; set; }

        /// <summary>
        /// Gets or Sets CapitalChangedDate
        /// </summary>
        [DataMember(Name="capitalChangedDate", EmitDefaultValue=true)]
        public string CapitalChangedDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialCapitalInfo {\n");
            sb.Append("  CapitalChangedFrom: ").Append(CapitalChangedFrom).Append("\n");
            sb.Append("  CapitalChangedTo: ").Append(CapitalChangedTo).Append("\n");
            sb.Append("  CapitalChangedDate: ").Append(CapitalChangedDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialCapitalInfo);
        }

        /// <summary>
        /// Returns true if TransunionCommercialCapitalInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialCapitalInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialCapitalInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CapitalChangedFrom == input.CapitalChangedFrom ||
                    (this.CapitalChangedFrom != null &&
                    this.CapitalChangedFrom.Equals(input.CapitalChangedFrom))
                ) && 
                (
                    this.CapitalChangedTo == input.CapitalChangedTo ||
                    (this.CapitalChangedTo != null &&
                    this.CapitalChangedTo.Equals(input.CapitalChangedTo))
                ) && 
                (
                    this.CapitalChangedDate == input.CapitalChangedDate ||
                    (this.CapitalChangedDate != null &&
                    this.CapitalChangedDate.Equals(input.CapitalChangedDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CapitalChangedFrom != null)
                    hashCode = hashCode * 59 + this.CapitalChangedFrom.GetHashCode();
                if (this.CapitalChangedTo != null)
                    hashCode = hashCode * 59 + this.CapitalChangedTo.GetHashCode();
                if (this.CapitalChangedDate != null)
                    hashCode = hashCode * 59 + this.CapitalChangedDate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
