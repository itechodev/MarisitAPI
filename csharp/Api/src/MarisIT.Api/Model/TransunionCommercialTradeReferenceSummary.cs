/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialTradeReferenceSummary
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialTradeReferenceSummary :  IEquatable<TransunionCommercialTradeReferenceSummary>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialTradeReferenceSummary" /> class.
        /// </summary>
        /// <param name="majorProduct">majorProduct.</param>
        /// <param name="threeMonthTotal">threeMonthTotal.</param>
        /// <param name="sixMonthTotal">sixMonthTotal.</param>
        /// <param name="twelveMonthTotal">twelveMonthTotal.</param>
        /// <param name="twentyFourMonthTotal">twentyFourMonthTotal.</param>
        /// <param name="threeMonthAverage">threeMonthAverage.</param>
        /// <param name="sixMonthAverage">sixMonthAverage.</param>
        /// <param name="twelveMonthAverage">twelveMonthAverage.</param>
        /// <param name="twentyFourMonthAverage">twentyFourMonthAverage.</param>
        /// <param name="threeMonthNumberWithinTerms">threeMonthNumberWithinTerms.</param>
        /// <param name="sixMonthNumberWithinTerms">sixMonthNumberWithinTerms.</param>
        /// <param name="twelveMonthNumberWithinTerms">twelveMonthNumberWithinTerms.</param>
        /// <param name="twentyFourMonthNumberWithinTerms">twentyFourMonthNumberWithinTerms.</param>
        /// <param name="threeMonthNumberOutsideTerms">threeMonthNumberOutsideTerms.</param>
        /// <param name="sixMonthNumberOutsideTerms">sixMonthNumberOutsideTerms.</param>
        /// <param name="twelveMonthNumberOutsideTerms">twelveMonthNumberOutsideTerms.</param>
        /// <param name="twentyFourMonthNumberOutsideTerms">twentyFourMonthNumberOutsideTerms.</param>
        /// <param name="threeMonthWeightedAverage">threeMonthWeightedAverage.</param>
        /// <param name="sixMonthWeightedAverage">sixMonthWeightedAverage.</param>
        /// <param name="twelveMonthWeightedAverage">twelveMonthWeightedAverage.</param>
        /// <param name="twentyFourMonthWeightedAverage">twentyFourMonthWeightedAverage.</param>
        public TransunionCommercialTradeReferenceSummary(string majorProduct = default(string), string threeMonthTotal = default(string), string sixMonthTotal = default(string), string twelveMonthTotal = default(string), string twentyFourMonthTotal = default(string), string threeMonthAverage = default(string), string sixMonthAverage = default(string), string twelveMonthAverage = default(string), string twentyFourMonthAverage = default(string), string threeMonthNumberWithinTerms = default(string), string sixMonthNumberWithinTerms = default(string), string twelveMonthNumberWithinTerms = default(string), string twentyFourMonthNumberWithinTerms = default(string), string threeMonthNumberOutsideTerms = default(string), string sixMonthNumberOutsideTerms = default(string), string twelveMonthNumberOutsideTerms = default(string), string twentyFourMonthNumberOutsideTerms = default(string), string threeMonthWeightedAverage = default(string), string sixMonthWeightedAverage = default(string), string twelveMonthWeightedAverage = default(string), string twentyFourMonthWeightedAverage = default(string))
        {
            this.MajorProduct = majorProduct;
            this.ThreeMonthTotal = threeMonthTotal;
            this.SixMonthTotal = sixMonthTotal;
            this.TwelveMonthTotal = twelveMonthTotal;
            this.TwentyFourMonthTotal = twentyFourMonthTotal;
            this.ThreeMonthAverage = threeMonthAverage;
            this.SixMonthAverage = sixMonthAverage;
            this.TwelveMonthAverage = twelveMonthAverage;
            this.TwentyFourMonthAverage = twentyFourMonthAverage;
            this.ThreeMonthNumberWithinTerms = threeMonthNumberWithinTerms;
            this.SixMonthNumberWithinTerms = sixMonthNumberWithinTerms;
            this.TwelveMonthNumberWithinTerms = twelveMonthNumberWithinTerms;
            this.TwentyFourMonthNumberWithinTerms = twentyFourMonthNumberWithinTerms;
            this.ThreeMonthNumberOutsideTerms = threeMonthNumberOutsideTerms;
            this.SixMonthNumberOutsideTerms = sixMonthNumberOutsideTerms;
            this.TwelveMonthNumberOutsideTerms = twelveMonthNumberOutsideTerms;
            this.TwentyFourMonthNumberOutsideTerms = twentyFourMonthNumberOutsideTerms;
            this.ThreeMonthWeightedAverage = threeMonthWeightedAverage;
            this.SixMonthWeightedAverage = sixMonthWeightedAverage;
            this.TwelveMonthWeightedAverage = twelveMonthWeightedAverage;
            this.TwentyFourMonthWeightedAverage = twentyFourMonthWeightedAverage;
            this.MajorProduct = majorProduct;
            this.ThreeMonthTotal = threeMonthTotal;
            this.SixMonthTotal = sixMonthTotal;
            this.TwelveMonthTotal = twelveMonthTotal;
            this.TwentyFourMonthTotal = twentyFourMonthTotal;
            this.ThreeMonthAverage = threeMonthAverage;
            this.SixMonthAverage = sixMonthAverage;
            this.TwelveMonthAverage = twelveMonthAverage;
            this.TwentyFourMonthAverage = twentyFourMonthAverage;
            this.ThreeMonthNumberWithinTerms = threeMonthNumberWithinTerms;
            this.SixMonthNumberWithinTerms = sixMonthNumberWithinTerms;
            this.TwelveMonthNumberWithinTerms = twelveMonthNumberWithinTerms;
            this.TwentyFourMonthNumberWithinTerms = twentyFourMonthNumberWithinTerms;
            this.ThreeMonthNumberOutsideTerms = threeMonthNumberOutsideTerms;
            this.SixMonthNumberOutsideTerms = sixMonthNumberOutsideTerms;
            this.TwelveMonthNumberOutsideTerms = twelveMonthNumberOutsideTerms;
            this.TwentyFourMonthNumberOutsideTerms = twentyFourMonthNumberOutsideTerms;
            this.ThreeMonthWeightedAverage = threeMonthWeightedAverage;
            this.SixMonthWeightedAverage = sixMonthWeightedAverage;
            this.TwelveMonthWeightedAverage = twelveMonthWeightedAverage;
            this.TwentyFourMonthWeightedAverage = twentyFourMonthWeightedAverage;
        }

        /// <summary>
        /// Gets or Sets MajorProduct
        /// </summary>
        [DataMember(Name="majorProduct", EmitDefaultValue=true)]
        public string MajorProduct { get; set; }

        /// <summary>
        /// Gets or Sets ThreeMonthTotal
        /// </summary>
        [DataMember(Name="threeMonthTotal", EmitDefaultValue=true)]
        public string ThreeMonthTotal { get; set; }

        /// <summary>
        /// Gets or Sets SixMonthTotal
        /// </summary>
        [DataMember(Name="sixMonthTotal", EmitDefaultValue=true)]
        public string SixMonthTotal { get; set; }

        /// <summary>
        /// Gets or Sets TwelveMonthTotal
        /// </summary>
        [DataMember(Name="twelveMonthTotal", EmitDefaultValue=true)]
        public string TwelveMonthTotal { get; set; }

        /// <summary>
        /// Gets or Sets TwentyFourMonthTotal
        /// </summary>
        [DataMember(Name="twentyFourMonthTotal", EmitDefaultValue=true)]
        public string TwentyFourMonthTotal { get; set; }

        /// <summary>
        /// Gets or Sets ThreeMonthAverage
        /// </summary>
        [DataMember(Name="threeMonthAverage", EmitDefaultValue=true)]
        public string ThreeMonthAverage { get; set; }

        /// <summary>
        /// Gets or Sets SixMonthAverage
        /// </summary>
        [DataMember(Name="sixMonthAverage", EmitDefaultValue=true)]
        public string SixMonthAverage { get; set; }

        /// <summary>
        /// Gets or Sets TwelveMonthAverage
        /// </summary>
        [DataMember(Name="twelveMonthAverage", EmitDefaultValue=true)]
        public string TwelveMonthAverage { get; set; }

        /// <summary>
        /// Gets or Sets TwentyFourMonthAverage
        /// </summary>
        [DataMember(Name="twentyFourMonthAverage", EmitDefaultValue=true)]
        public string TwentyFourMonthAverage { get; set; }

        /// <summary>
        /// Gets or Sets ThreeMonthNumberWithinTerms
        /// </summary>
        [DataMember(Name="threeMonthNumberWithinTerms", EmitDefaultValue=true)]
        public string ThreeMonthNumberWithinTerms { get; set; }

        /// <summary>
        /// Gets or Sets SixMonthNumberWithinTerms
        /// </summary>
        [DataMember(Name="sixMonthNumberWithinTerms", EmitDefaultValue=true)]
        public string SixMonthNumberWithinTerms { get; set; }

        /// <summary>
        /// Gets or Sets TwelveMonthNumberWithinTerms
        /// </summary>
        [DataMember(Name="twelveMonthNumberWithinTerms", EmitDefaultValue=true)]
        public string TwelveMonthNumberWithinTerms { get; set; }

        /// <summary>
        /// Gets or Sets TwentyFourMonthNumberWithinTerms
        /// </summary>
        [DataMember(Name="twentyFourMonthNumberWithinTerms", EmitDefaultValue=true)]
        public string TwentyFourMonthNumberWithinTerms { get; set; }

        /// <summary>
        /// Gets or Sets ThreeMonthNumberOutsideTerms
        /// </summary>
        [DataMember(Name="threeMonthNumberOutsideTerms", EmitDefaultValue=true)]
        public string ThreeMonthNumberOutsideTerms { get; set; }

        /// <summary>
        /// Gets or Sets SixMonthNumberOutsideTerms
        /// </summary>
        [DataMember(Name="sixMonthNumberOutsideTerms", EmitDefaultValue=true)]
        public string SixMonthNumberOutsideTerms { get; set; }

        /// <summary>
        /// Gets or Sets TwelveMonthNumberOutsideTerms
        /// </summary>
        [DataMember(Name="twelveMonthNumberOutsideTerms", EmitDefaultValue=true)]
        public string TwelveMonthNumberOutsideTerms { get; set; }

        /// <summary>
        /// Gets or Sets TwentyFourMonthNumberOutsideTerms
        /// </summary>
        [DataMember(Name="twentyFourMonthNumberOutsideTerms", EmitDefaultValue=true)]
        public string TwentyFourMonthNumberOutsideTerms { get; set; }

        /// <summary>
        /// Gets or Sets ThreeMonthWeightedAverage
        /// </summary>
        [DataMember(Name="threeMonthWeightedAverage", EmitDefaultValue=true)]
        public string ThreeMonthWeightedAverage { get; set; }

        /// <summary>
        /// Gets or Sets SixMonthWeightedAverage
        /// </summary>
        [DataMember(Name="sixMonthWeightedAverage", EmitDefaultValue=true)]
        public string SixMonthWeightedAverage { get; set; }

        /// <summary>
        /// Gets or Sets TwelveMonthWeightedAverage
        /// </summary>
        [DataMember(Name="twelveMonthWeightedAverage", EmitDefaultValue=true)]
        public string TwelveMonthWeightedAverage { get; set; }

        /// <summary>
        /// Gets or Sets TwentyFourMonthWeightedAverage
        /// </summary>
        [DataMember(Name="twentyFourMonthWeightedAverage", EmitDefaultValue=true)]
        public string TwentyFourMonthWeightedAverage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialTradeReferenceSummary {\n");
            sb.Append("  MajorProduct: ").Append(MajorProduct).Append("\n");
            sb.Append("  ThreeMonthTotal: ").Append(ThreeMonthTotal).Append("\n");
            sb.Append("  SixMonthTotal: ").Append(SixMonthTotal).Append("\n");
            sb.Append("  TwelveMonthTotal: ").Append(TwelveMonthTotal).Append("\n");
            sb.Append("  TwentyFourMonthTotal: ").Append(TwentyFourMonthTotal).Append("\n");
            sb.Append("  ThreeMonthAverage: ").Append(ThreeMonthAverage).Append("\n");
            sb.Append("  SixMonthAverage: ").Append(SixMonthAverage).Append("\n");
            sb.Append("  TwelveMonthAverage: ").Append(TwelveMonthAverage).Append("\n");
            sb.Append("  TwentyFourMonthAverage: ").Append(TwentyFourMonthAverage).Append("\n");
            sb.Append("  ThreeMonthNumberWithinTerms: ").Append(ThreeMonthNumberWithinTerms).Append("\n");
            sb.Append("  SixMonthNumberWithinTerms: ").Append(SixMonthNumberWithinTerms).Append("\n");
            sb.Append("  TwelveMonthNumberWithinTerms: ").Append(TwelveMonthNumberWithinTerms).Append("\n");
            sb.Append("  TwentyFourMonthNumberWithinTerms: ").Append(TwentyFourMonthNumberWithinTerms).Append("\n");
            sb.Append("  ThreeMonthNumberOutsideTerms: ").Append(ThreeMonthNumberOutsideTerms).Append("\n");
            sb.Append("  SixMonthNumberOutsideTerms: ").Append(SixMonthNumberOutsideTerms).Append("\n");
            sb.Append("  TwelveMonthNumberOutsideTerms: ").Append(TwelveMonthNumberOutsideTerms).Append("\n");
            sb.Append("  TwentyFourMonthNumberOutsideTerms: ").Append(TwentyFourMonthNumberOutsideTerms).Append("\n");
            sb.Append("  ThreeMonthWeightedAverage: ").Append(ThreeMonthWeightedAverage).Append("\n");
            sb.Append("  SixMonthWeightedAverage: ").Append(SixMonthWeightedAverage).Append("\n");
            sb.Append("  TwelveMonthWeightedAverage: ").Append(TwelveMonthWeightedAverage).Append("\n");
            sb.Append("  TwentyFourMonthWeightedAverage: ").Append(TwentyFourMonthWeightedAverage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialTradeReferenceSummary);
        }

        /// <summary>
        /// Returns true if TransunionCommercialTradeReferenceSummary instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialTradeReferenceSummary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialTradeReferenceSummary input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MajorProduct == input.MajorProduct ||
                    (this.MajorProduct != null &&
                    this.MajorProduct.Equals(input.MajorProduct))
                ) && 
                (
                    this.ThreeMonthTotal == input.ThreeMonthTotal ||
                    (this.ThreeMonthTotal != null &&
                    this.ThreeMonthTotal.Equals(input.ThreeMonthTotal))
                ) && 
                (
                    this.SixMonthTotal == input.SixMonthTotal ||
                    (this.SixMonthTotal != null &&
                    this.SixMonthTotal.Equals(input.SixMonthTotal))
                ) && 
                (
                    this.TwelveMonthTotal == input.TwelveMonthTotal ||
                    (this.TwelveMonthTotal != null &&
                    this.TwelveMonthTotal.Equals(input.TwelveMonthTotal))
                ) && 
                (
                    this.TwentyFourMonthTotal == input.TwentyFourMonthTotal ||
                    (this.TwentyFourMonthTotal != null &&
                    this.TwentyFourMonthTotal.Equals(input.TwentyFourMonthTotal))
                ) && 
                (
                    this.ThreeMonthAverage == input.ThreeMonthAverage ||
                    (this.ThreeMonthAverage != null &&
                    this.ThreeMonthAverage.Equals(input.ThreeMonthAverage))
                ) && 
                (
                    this.SixMonthAverage == input.SixMonthAverage ||
                    (this.SixMonthAverage != null &&
                    this.SixMonthAverage.Equals(input.SixMonthAverage))
                ) && 
                (
                    this.TwelveMonthAverage == input.TwelveMonthAverage ||
                    (this.TwelveMonthAverage != null &&
                    this.TwelveMonthAverage.Equals(input.TwelveMonthAverage))
                ) && 
                (
                    this.TwentyFourMonthAverage == input.TwentyFourMonthAverage ||
                    (this.TwentyFourMonthAverage != null &&
                    this.TwentyFourMonthAverage.Equals(input.TwentyFourMonthAverage))
                ) && 
                (
                    this.ThreeMonthNumberWithinTerms == input.ThreeMonthNumberWithinTerms ||
                    (this.ThreeMonthNumberWithinTerms != null &&
                    this.ThreeMonthNumberWithinTerms.Equals(input.ThreeMonthNumberWithinTerms))
                ) && 
                (
                    this.SixMonthNumberWithinTerms == input.SixMonthNumberWithinTerms ||
                    (this.SixMonthNumberWithinTerms != null &&
                    this.SixMonthNumberWithinTerms.Equals(input.SixMonthNumberWithinTerms))
                ) && 
                (
                    this.TwelveMonthNumberWithinTerms == input.TwelveMonthNumberWithinTerms ||
                    (this.TwelveMonthNumberWithinTerms != null &&
                    this.TwelveMonthNumberWithinTerms.Equals(input.TwelveMonthNumberWithinTerms))
                ) && 
                (
                    this.TwentyFourMonthNumberWithinTerms == input.TwentyFourMonthNumberWithinTerms ||
                    (this.TwentyFourMonthNumberWithinTerms != null &&
                    this.TwentyFourMonthNumberWithinTerms.Equals(input.TwentyFourMonthNumberWithinTerms))
                ) && 
                (
                    this.ThreeMonthNumberOutsideTerms == input.ThreeMonthNumberOutsideTerms ||
                    (this.ThreeMonthNumberOutsideTerms != null &&
                    this.ThreeMonthNumberOutsideTerms.Equals(input.ThreeMonthNumberOutsideTerms))
                ) && 
                (
                    this.SixMonthNumberOutsideTerms == input.SixMonthNumberOutsideTerms ||
                    (this.SixMonthNumberOutsideTerms != null &&
                    this.SixMonthNumberOutsideTerms.Equals(input.SixMonthNumberOutsideTerms))
                ) && 
                (
                    this.TwelveMonthNumberOutsideTerms == input.TwelveMonthNumberOutsideTerms ||
                    (this.TwelveMonthNumberOutsideTerms != null &&
                    this.TwelveMonthNumberOutsideTerms.Equals(input.TwelveMonthNumberOutsideTerms))
                ) && 
                (
                    this.TwentyFourMonthNumberOutsideTerms == input.TwentyFourMonthNumberOutsideTerms ||
                    (this.TwentyFourMonthNumberOutsideTerms != null &&
                    this.TwentyFourMonthNumberOutsideTerms.Equals(input.TwentyFourMonthNumberOutsideTerms))
                ) && 
                (
                    this.ThreeMonthWeightedAverage == input.ThreeMonthWeightedAverage ||
                    (this.ThreeMonthWeightedAverage != null &&
                    this.ThreeMonthWeightedAverage.Equals(input.ThreeMonthWeightedAverage))
                ) && 
                (
                    this.SixMonthWeightedAverage == input.SixMonthWeightedAverage ||
                    (this.SixMonthWeightedAverage != null &&
                    this.SixMonthWeightedAverage.Equals(input.SixMonthWeightedAverage))
                ) && 
                (
                    this.TwelveMonthWeightedAverage == input.TwelveMonthWeightedAverage ||
                    (this.TwelveMonthWeightedAverage != null &&
                    this.TwelveMonthWeightedAverage.Equals(input.TwelveMonthWeightedAverage))
                ) && 
                (
                    this.TwentyFourMonthWeightedAverage == input.TwentyFourMonthWeightedAverage ||
                    (this.TwentyFourMonthWeightedAverage != null &&
                    this.TwentyFourMonthWeightedAverage.Equals(input.TwentyFourMonthWeightedAverage))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MajorProduct != null)
                    hashCode = hashCode * 59 + this.MajorProduct.GetHashCode();
                if (this.ThreeMonthTotal != null)
                    hashCode = hashCode * 59 + this.ThreeMonthTotal.GetHashCode();
                if (this.SixMonthTotal != null)
                    hashCode = hashCode * 59 + this.SixMonthTotal.GetHashCode();
                if (this.TwelveMonthTotal != null)
                    hashCode = hashCode * 59 + this.TwelveMonthTotal.GetHashCode();
                if (this.TwentyFourMonthTotal != null)
                    hashCode = hashCode * 59 + this.TwentyFourMonthTotal.GetHashCode();
                if (this.ThreeMonthAverage != null)
                    hashCode = hashCode * 59 + this.ThreeMonthAverage.GetHashCode();
                if (this.SixMonthAverage != null)
                    hashCode = hashCode * 59 + this.SixMonthAverage.GetHashCode();
                if (this.TwelveMonthAverage != null)
                    hashCode = hashCode * 59 + this.TwelveMonthAverage.GetHashCode();
                if (this.TwentyFourMonthAverage != null)
                    hashCode = hashCode * 59 + this.TwentyFourMonthAverage.GetHashCode();
                if (this.ThreeMonthNumberWithinTerms != null)
                    hashCode = hashCode * 59 + this.ThreeMonthNumberWithinTerms.GetHashCode();
                if (this.SixMonthNumberWithinTerms != null)
                    hashCode = hashCode * 59 + this.SixMonthNumberWithinTerms.GetHashCode();
                if (this.TwelveMonthNumberWithinTerms != null)
                    hashCode = hashCode * 59 + this.TwelveMonthNumberWithinTerms.GetHashCode();
                if (this.TwentyFourMonthNumberWithinTerms != null)
                    hashCode = hashCode * 59 + this.TwentyFourMonthNumberWithinTerms.GetHashCode();
                if (this.ThreeMonthNumberOutsideTerms != null)
                    hashCode = hashCode * 59 + this.ThreeMonthNumberOutsideTerms.GetHashCode();
                if (this.SixMonthNumberOutsideTerms != null)
                    hashCode = hashCode * 59 + this.SixMonthNumberOutsideTerms.GetHashCode();
                if (this.TwelveMonthNumberOutsideTerms != null)
                    hashCode = hashCode * 59 + this.TwelveMonthNumberOutsideTerms.GetHashCode();
                if (this.TwentyFourMonthNumberOutsideTerms != null)
                    hashCode = hashCode * 59 + this.TwentyFourMonthNumberOutsideTerms.GetHashCode();
                if (this.ThreeMonthWeightedAverage != null)
                    hashCode = hashCode * 59 + this.ThreeMonthWeightedAverage.GetHashCode();
                if (this.SixMonthWeightedAverage != null)
                    hashCode = hashCode * 59 + this.SixMonthWeightedAverage.GetHashCode();
                if (this.TwelveMonthWeightedAverage != null)
                    hashCode = hashCode * 59 + this.TwelveMonthWeightedAverage.GetHashCode();
                if (this.TwentyFourMonthWeightedAverage != null)
                    hashCode = hashCode * 59 + this.TwentyFourMonthWeightedAverage.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
