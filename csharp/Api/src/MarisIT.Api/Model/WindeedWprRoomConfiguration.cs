/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// WindeedWprRoomConfiguration
    /// </summary>
    [DataContract]
    public partial class WindeedWprRoomConfiguration :  IEquatable<WindeedWprRoomConfiguration>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets InternalFinishes
        /// </summary>
        [DataMember(Name="internalFinishes", EmitDefaultValue=false)]
        public WindeedWprInternalFinishes? InternalFinishes { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="WindeedWprRoomConfiguration" /> class.
        /// </summary>
        /// <param name="bedrooms">bedrooms.</param>
        /// <param name="bathrooms">bathrooms.</param>
        /// <param name="receptionAreas">receptionAreas.</param>
        /// <param name="kitchen">kitchen.</param>
        /// <param name="studies">studies.</param>
        /// <param name="internalFinishes">internalFinishes.</param>
        public WindeedWprRoomConfiguration(double? bedrooms = default(double?), double? bathrooms = default(double?), int? receptionAreas = default(int?), int? kitchen = default(int?), int? studies = default(int?), WindeedWprInternalFinishes? internalFinishes = default(WindeedWprInternalFinishes?))
        {
            this.Bedrooms = bedrooms;
            this.Bathrooms = bathrooms;
            this.ReceptionAreas = receptionAreas;
            this.Kitchen = kitchen;
            this.Studies = studies;
            this.Bedrooms = bedrooms;
            this.Bathrooms = bathrooms;
            this.ReceptionAreas = receptionAreas;
            this.Kitchen = kitchen;
            this.Studies = studies;
            this.InternalFinishes = internalFinishes;
        }

        /// <summary>
        /// Gets or Sets Bedrooms
        /// </summary>
        [DataMember(Name="bedrooms", EmitDefaultValue=true)]
        public double? Bedrooms { get; set; }

        /// <summary>
        /// Gets or Sets Bathrooms
        /// </summary>
        [DataMember(Name="bathrooms", EmitDefaultValue=true)]
        public double? Bathrooms { get; set; }

        /// <summary>
        /// Gets or Sets ReceptionAreas
        /// </summary>
        [DataMember(Name="receptionAreas", EmitDefaultValue=true)]
        public int? ReceptionAreas { get; set; }

        /// <summary>
        /// Gets or Sets Kitchen
        /// </summary>
        [DataMember(Name="kitchen", EmitDefaultValue=true)]
        public int? Kitchen { get; set; }

        /// <summary>
        /// Gets or Sets Studies
        /// </summary>
        [DataMember(Name="studies", EmitDefaultValue=true)]
        public int? Studies { get; set; }


        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WindeedWprRoomConfiguration {\n");
            sb.Append("  Bedrooms: ").Append(Bedrooms).Append("\n");
            sb.Append("  Bathrooms: ").Append(Bathrooms).Append("\n");
            sb.Append("  ReceptionAreas: ").Append(ReceptionAreas).Append("\n");
            sb.Append("  Kitchen: ").Append(Kitchen).Append("\n");
            sb.Append("  Studies: ").Append(Studies).Append("\n");
            sb.Append("  InternalFinishes: ").Append(InternalFinishes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WindeedWprRoomConfiguration);
        }

        /// <summary>
        /// Returns true if WindeedWprRoomConfiguration instances are equal
        /// </summary>
        /// <param name="input">Instance of WindeedWprRoomConfiguration to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WindeedWprRoomConfiguration input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Bedrooms == input.Bedrooms ||
                    (this.Bedrooms != null &&
                    this.Bedrooms.Equals(input.Bedrooms))
                ) && 
                (
                    this.Bathrooms == input.Bathrooms ||
                    (this.Bathrooms != null &&
                    this.Bathrooms.Equals(input.Bathrooms))
                ) && 
                (
                    this.ReceptionAreas == input.ReceptionAreas ||
                    (this.ReceptionAreas != null &&
                    this.ReceptionAreas.Equals(input.ReceptionAreas))
                ) && 
                (
                    this.Kitchen == input.Kitchen ||
                    (this.Kitchen != null &&
                    this.Kitchen.Equals(input.Kitchen))
                ) && 
                (
                    this.Studies == input.Studies ||
                    (this.Studies != null &&
                    this.Studies.Equals(input.Studies))
                ) && 
                (
                    this.InternalFinishes == input.InternalFinishes ||
                    (this.InternalFinishes != null &&
                    this.InternalFinishes.Equals(input.InternalFinishes))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Bedrooms != null)
                    hashCode = hashCode * 59 + this.Bedrooms.GetHashCode();
                if (this.Bathrooms != null)
                    hashCode = hashCode * 59 + this.Bathrooms.GetHashCode();
                if (this.ReceptionAreas != null)
                    hashCode = hashCode * 59 + this.ReceptionAreas.GetHashCode();
                if (this.Kitchen != null)
                    hashCode = hashCode * 59 + this.Kitchen.GetHashCode();
                if (this.Studies != null)
                    hashCode = hashCode * 59 + this.Studies.GetHashCode();
                if (this.InternalFinishes != null)
                    hashCode = hashCode * 59 + this.InternalFinishes.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
