/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialCommercialResponse
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialCommercialResponse :  IEquatable<TransunionCommercialCommercialResponse>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets ResponseStatus
        /// </summary>
        [DataMember(Name="responseStatus", EmitDefaultValue=false)]
        public TransunionCommercialResponseStatus? ResponseStatus { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialCommercialResponse" /> class.
        /// </summary>
        /// <param name="rawData">rawData.</param>
        /// <param name="responseStatus">responseStatus.</param>
        /// <param name="errorCode">errorCode.</param>
        /// <param name="errorMessage">errorMessage.</param>
        /// <param name="processingStartDate">processingStartDate.</param>
        /// <param name="processingTimeSecs">processingTimeSecs.</param>
        /// <param name="uniqueRefGuid">uniqueRefGuid.</param>
        /// <param name="accountVerificationVA">accountVerificationVA.</param>
        /// <param name="accountVerificationVH">accountVerificationVH.</param>
        /// <param name="aggregateCW">aggregateCW.</param>
        /// <param name="affiliations">affiliations.</param>
        /// <param name="bankCodes">bankCodes.</param>
        /// <param name="bankingDetailsAC">bankingDetailsAC.</param>
        /// <param name="bankingDetailsSummary">bankingDetailsSummary.</param>
        /// <param name="bankHistory">bankHistory.</param>
        /// <param name="bankReport">bankReport.</param>
        /// <param name="branch">branch.</param>
        /// <param name="bcccX01">bcccX01.</param>
        /// <param name="businessAdverseSummary">businessAdverseSummary.</param>
        /// <param name="businessDeedsDI">businessDeedsDI.</param>
        /// <param name="businessDeedsComprehensivePB">businessDeedsComprehensivePB.</param>
        /// <param name="businessDeedsSummaryDA">businessDeedsSummaryDA.</param>
        /// <param name="businessDeedsComprehensivePW">businessDeedsComprehensivePW.</param>
        /// <param name="businessbenchmark">businessbenchmark.</param>
        /// <param name="businessNotarialBonds">businessNotarialBonds.</param>
        /// <param name="businessPlusPrincipalsSummary">businessPlusPrincipalsSummary.</param>
        /// <param name="cancelledTickets">cancelledTickets.</param>
        /// <param name="capitalEmployed">capitalEmployed.</param>
        /// <param name="commercialDisputeResponse">commercialDisputeResponse.</param>
        /// <param name="consumerBusinessEnquiries">consumerBusinessEnquiries.</param>
        /// <param name="consumerDefaults">consumerDefaults.</param>
        /// <param name="consumerEnquiries">consumerEnquiries.</param>
        /// <param name="consumerHeader">consumerHeader.</param>
        /// <param name="consumerHeaderC1">consumerHeaderC1.</param>
        /// <param name="consumerInfoNO04">consumerInfoNO04.</param>
        /// <param name="consumerJudgements">consumerJudgements.</param>
        /// <param name="consumerNotarialBonds">consumerNotarialBonds.</param>
        /// <param name="consumerNotices">consumerNotices.</param>
        /// <param name="consumerTraceAlerts">consumerTraceAlerts.</param>
        /// <param name="courtRecords">courtRecords.</param>
        /// <param name="currentAsset">currentAsset.</param>
        /// <param name="currentLiabilities">currentLiabilities.</param>
        /// <param name="deedHistory">deedHistory.</param>
        /// <param name="deedsMultipleBond">deedsMultipleBond.</param>
        /// <param name="deedsMultipleOwnersDetail">deedsMultipleOwnersDetail.</param>
        /// <param name="defaults">defaults.</param>
        /// <param name="dynamicRating">dynamicRating.</param>
        /// <param name="empiricaE1">empiricaE1.</param>
        /// <param name="empiricaEM04">empiricaEM04.</param>
        /// <param name="empOfCapital">empOfCapital.</param>
        /// <param name="enquiryHistory">enquiryHistory.</param>
        /// <param name="enquirySummary">enquirySummary.</param>
        /// <param name="extendedConsumerHeaderInfoCG">extendedConsumerHeaderInfoCG.</param>
        /// <param name="firstResponse">firstResponse.</param>
        /// <param name="financeHeader">financeHeader.</param>
        /// <param name="financeData">financeData.</param>
        /// <param name="financeDataFE">financeDataFE.</param>
        /// <param name="financeDataFF">financeDataFF.</param>
        /// <param name="financialRatios">financialRatios.</param>
        /// <param name="financialStabilityIndicatorFS">financialStabilityIndicatorFS.</param>
        /// <param name="forensicEnquiryHistoryEF">forensicEnquiryHistoryEF.</param>
        /// <param name="generalBankingInfo">generalBankingInfo.</param>
        /// <param name="header">header.</param>
        /// <param name="linkedBusinessHeaders">linkedBusinessHeaders.</param>
        /// <param name="linkedBusinessDetailLF">linkedBusinessDetailLF.</param>
        /// <param name="mailboxRetrieveList">mailboxRetrieveList.</param>
        /// <param name="moduleAvailabilityResponse">moduleAvailabilityResponse.</param>
        /// <param name="names">names.</param>
        /// <param name="notarialBonds">notarialBonds.</param>
        /// <param name="observations">observations.</param>
        /// <param name="observationCont">observationCont.</param>
        /// <param name="operations">operations.</param>
        /// <param name="operationsHeader">operationsHeader.</param>
        /// <param name="otherOperations">otherOperations.</param>
        /// <param name="principals">principals.</param>
        /// <param name="principalsDetailEmpirica">principalsDetailEmpirica.</param>
        /// <param name="principalArchives">principalArchives.</param>
        /// <param name="principalArchivesP5">principalArchivesP5.</param>
        /// <param name="principalClearances">principalClearances.</param>
        /// <param name="principalDeedsCA">principalDeedsCA.</param>
        /// <param name="principalDeedsComprehensiveCV">principalDeedsComprehensiveCV.</param>
        /// <param name="principalDeedsSummaryCO">principalDeedsSummaryCO.</param>
        /// <param name="principalDeedsSummaryP8">principalDeedsSummaryP8.</param>
        /// <param name="principalFirstResponse">principalFirstResponse.</param>
        /// <param name="principalIDVs">principalIDVs.</param>
        /// <param name="principalLinks">principalLinks.</param>
        /// <param name="principalLinkPL">principalLinkPL.</param>
        /// <param name="principalNotarialBonds">principalNotarialBonds.</param>
        /// <param name="claimDetailsLC">claimDetailsLC.</param>
        /// <param name="policyDetailsIF">policyDetailsIF.</param>
        /// <param name="policyRiskAddressIA">policyRiskAddressIA.</param>
        /// <param name="policyVehiclePV">policyVehiclePV.</param>
        /// <param name="registeredPrincipals">registeredPrincipals.</param>
        /// <param name="registrationDetails">registrationDetails.</param>
        /// <param name="registrationDetailsExtended">registrationDetailsExtended.</param>
        /// <param name="businessRescueDetail">businessRescueDetail.</param>
        /// <param name="searchResponse">searchResponse.</param>
        /// <param name="smeAssessment">smeAssessment.</param>
        /// <param name="segmentDescriptions">segmentDescriptions.</param>
        /// <param name="tradeAccountSynopsis">tradeAccountSynopsis.</param>
        /// <param name="tradeAgeAnalysis">tradeAgeAnalysis.</param>
        /// <param name="tradeHistory">tradeHistory.</param>
        /// <param name="tradePaymentHistory">tradePaymentHistory.</param>
        /// <param name="tradeReferences">tradeReferences.</param>
        /// <param name="tradeReferenceSummary">tradeReferenceSummary.</param>
        /// <param name="tradex">tradex.</param>
        /// <param name="ticketsStatus">ticketsStatus.</param>
        /// <param name="unmatchedCourtRecords">unmatchedCourtRecords.</param>
        /// <param name="unmatchedDefaults">unmatchedDefaults.</param>
        /// <param name="unmatchedNotarialBonds">unmatchedNotarialBonds.</param>
        /// <param name="vehicles">vehicles.</param>
        /// <param name="veriCheques">veriCheques.</param>
        /// <param name="complianceIndicatorLI">complianceIndicatorLI.</param>
        public TransunionCommercialCommercialResponse(string rawData = default(string), TransunionCommercialResponseStatus? responseStatus = default(TransunionCommercialResponseStatus?), string errorCode = default(string), string errorMessage = default(string), DateTime processingStartDate = default(DateTime), double processingTimeSecs = default(double), Guid uniqueRefGuid = default(Guid), List<TransunionCommercialAccountVerificationVA> accountVerificationVA = default(List<TransunionCommercialAccountVerificationVA>), List<TransunionCommercialAccountVerificationVH> accountVerificationVH = default(List<TransunionCommercialAccountVerificationVH>), TransunionCommercialAggregateCW aggregateCW = default(TransunionCommercialAggregateCW), List<TransunionCommercialAffiliations> affiliations = default(List<TransunionCommercialAffiliations>), List<TransunionCommercialBankCodes> bankCodes = default(List<TransunionCommercialBankCodes>), List<TransunionCommercialBankingDetailsAC> bankingDetailsAC = default(List<TransunionCommercialBankingDetailsAC>), List<TransunionCommercialBankingDetailSummary> bankingDetailsSummary = default(List<TransunionCommercialBankingDetailSummary>), List<TransunionCommercialBankHistory> bankHistory = default(List<TransunionCommercialBankHistory>), List<TransunionCommercialBankReport> bankReport = default(List<TransunionCommercialBankReport>), List<TransunionCommercialBranch> branch = default(List<TransunionCommercialBranch>), List<TransunionCommercialBCCCX01> bcccX01 = default(List<TransunionCommercialBCCCX01>), TransunionCommercialBusinessAdverseSummary businessAdverseSummary = default(TransunionCommercialBusinessAdverseSummary), List<TransunionCommercialBusinessDeedsDI> businessDeedsDI = default(List<TransunionCommercialBusinessDeedsDI>), List<TransunionCommercialBusinessDeedsComprehensivePB> businessDeedsComprehensivePB = default(List<TransunionCommercialBusinessDeedsComprehensivePB>), List<TransunionCommercialBusinessDeedsSummaryDA> businessDeedsSummaryDA = default(List<TransunionCommercialBusinessDeedsSummaryDA>), List<TransunionCommercialBusinessDeedsComprehensivePW> businessDeedsComprehensivePW = default(List<TransunionCommercialBusinessDeedsComprehensivePW>), List<TransunionCommercialBusinessBenchmarkBB> businessbenchmark = default(List<TransunionCommercialBusinessBenchmarkBB>), List<TransunionCommercialBusinessNotarialBonds> businessNotarialBonds = default(List<TransunionCommercialBusinessNotarialBonds>), List<TransunionCommercialBusinessPlusPrincipalSummary> businessPlusPrincipalsSummary = default(List<TransunionCommercialBusinessPlusPrincipalSummary>), List<TransunionCommercialCancelledTicket> cancelledTickets = default(List<TransunionCommercialCancelledTicket>), TransunionCommercialCapitalEmployed capitalEmployed = default(TransunionCommercialCapitalEmployed), TransunionCommercialCommercialDisputeResponse commercialDisputeResponse = default(TransunionCommercialCommercialDisputeResponse), List<TransunionCommercialConsumerBusinessEnquiry> consumerBusinessEnquiries = default(List<TransunionCommercialConsumerBusinessEnquiry>), List<TransunionCommercialConsumerDefault> consumerDefaults = default(List<TransunionCommercialConsumerDefault>), List<TransunionCommercialConsumerEnquiry> consumerEnquiries = default(List<TransunionCommercialConsumerEnquiry>), List<TransunionCommercialConsumerHeader> consumerHeader = default(List<TransunionCommercialConsumerHeader>), List<TransunionCommercialConsumerHeaderC1> consumerHeaderC1 = default(List<TransunionCommercialConsumerHeaderC1>), List<TransunionCommercialConsumerInfoNO04> consumerInfoNO04 = default(List<TransunionCommercialConsumerInfoNO04>), List<TransunionCommercialConsumerJudgement> consumerJudgements = default(List<TransunionCommercialConsumerJudgement>), List<TransunionCommercialConsumerNotarialBonds> consumerNotarialBonds = default(List<TransunionCommercialConsumerNotarialBonds>), List<TransunionCommercialConsumerNotice> consumerNotices = default(List<TransunionCommercialConsumerNotice>), List<TransunionCommercialConsumerTraceAlert> consumerTraceAlerts = default(List<TransunionCommercialConsumerTraceAlert>), List<TransunionCommercialCourtRecord> courtRecords = default(List<TransunionCommercialCourtRecord>), TransunionCommercialCurrentAsset currentAsset = default(TransunionCommercialCurrentAsset), TransunionCommercialCurrentLiabilities currentLiabilities = default(TransunionCommercialCurrentLiabilities), List<TransunionCommercialDeedHistory> deedHistory = default(List<TransunionCommercialDeedHistory>), List<TransunionCommercialDeedsMultipleBond> deedsMultipleBond = default(List<TransunionCommercialDeedsMultipleBond>), List<TransunionCommercialDeedsMultipleOwnerDetail> deedsMultipleOwnersDetail = default(List<TransunionCommercialDeedsMultipleOwnerDetail>), List<TransunionCommercialDefault> defaults = default(List<TransunionCommercialDefault>), TransunionCommercialDynamicRating dynamicRating = default(TransunionCommercialDynamicRating), List<TransunionCommercialEmpiricaE1> empiricaE1 = default(List<TransunionCommercialEmpiricaE1>), TransunionCommercialEmpiricaEM04 empiricaEM04 = default(TransunionCommercialEmpiricaEM04), TransunionCommercialEmpOfCapital empOfCapital = default(TransunionCommercialEmpOfCapital), List<TransunionCommercialEnquiryHistory> enquiryHistory = default(List<TransunionCommercialEnquiryHistory>), TransunionCommercialEnquirySummary enquirySummary = default(TransunionCommercialEnquirySummary), List<TransunionCommercialExtendedConsumerHeaderInfoCG> extendedConsumerHeaderInfoCG = default(List<TransunionCommercialExtendedConsumerHeaderInfoCG>), TransunionCommercialFirstResponse firstResponse = default(TransunionCommercialFirstResponse), TransunionCommercialFinanceHeader financeHeader = default(TransunionCommercialFinanceHeader), List<TransunionCommercialFinanceData> financeData = default(List<TransunionCommercialFinanceData>), List<TransunionCommercialFinanceDataFE> financeDataFE = default(List<TransunionCommercialFinanceDataFE>), List<TransunionCommercialFinanceDataFF> financeDataFF = default(List<TransunionCommercialFinanceDataFF>), List<TransunionCommercialFinancialRatios> financialRatios = default(List<TransunionCommercialFinancialRatios>), TransunionCommercialFinancialStabilityIndicatorFS financialStabilityIndicatorFS = default(TransunionCommercialFinancialStabilityIndicatorFS), List<TransunionCommercialForensicEnquiryHistoryEF> forensicEnquiryHistoryEF = default(List<TransunionCommercialForensicEnquiryHistoryEF>), List<TransunionCommercialGeneralBankingInfo> generalBankingInfo = default(List<TransunionCommercialGeneralBankingInfo>), TransunionCommercialHeader header = default(TransunionCommercialHeader), List<TransunionCommercialLinkedBusinessHeader> linkedBusinessHeaders = default(List<TransunionCommercialLinkedBusinessHeader>), List<TransunionCommercialLinkedBusinessDetailLF> linkedBusinessDetailLF = default(List<TransunionCommercialLinkedBusinessDetailLF>), TransunionCommercialMailboxRetrieveList mailboxRetrieveList = default(TransunionCommercialMailboxRetrieveList), TransunionCommercialModuleAvailabilityResponse moduleAvailabilityResponse = default(TransunionCommercialModuleAvailabilityResponse), TransunionCommercialNames names = default(TransunionCommercialNames), List<TransunionCommercialNotarialBond> notarialBonds = default(List<TransunionCommercialNotarialBond>), List<TransunionCommercialObservation> observations = default(List<TransunionCommercialObservation>), List<TransunionCommercialObservationCont> observationCont = default(List<TransunionCommercialObservationCont>), List<TransunionCommercialOperation> operations = default(List<TransunionCommercialOperation>), List<TransunionCommercialAdditionalOperations> operationsHeader = default(List<TransunionCommercialAdditionalOperations>), List<TransunionCommercialOtherOperation> otherOperations = default(List<TransunionCommercialOtherOperation>), List<TransunionCommercialPrincipal> principals = default(List<TransunionCommercialPrincipal>), List<TransunionCommercialPrincipalDetailEmpirica> principalsDetailEmpirica = default(List<TransunionCommercialPrincipalDetailEmpirica>), List<TransunionCommercialPrincipalArchive> principalArchives = default(List<TransunionCommercialPrincipalArchive>), List<TransunionCommercialPrincipalArchiveP5> principalArchivesP5 = default(List<TransunionCommercialPrincipalArchiveP5>), List<TransunionCommercialPrincipalClearance> principalClearances = default(List<TransunionCommercialPrincipalClearance>), List<TransunionCommercialPrincipalDeedsComprehensiveCA> principalDeedsCA = default(List<TransunionCommercialPrincipalDeedsComprehensiveCA>), List<TransunionCommercialPrincipalDeedsComprehensiveCV> principalDeedsComprehensiveCV = default(List<TransunionCommercialPrincipalDeedsComprehensiveCV>), List<TransunionCommercialPrincipalDeedsSummaryCO> principalDeedsSummaryCO = default(List<TransunionCommercialPrincipalDeedsSummaryCO>), List<TransunionCommercialPrincipalDeedsSummaryP8> principalDeedsSummaryP8 = default(List<TransunionCommercialPrincipalDeedsSummaryP8>), TransunionCommercialPrincipalFirstResponse principalFirstResponse = default(TransunionCommercialPrincipalFirstResponse), List<TransunionCommercialPrincipalIDV> principalIDVs = default(List<TransunionCommercialPrincipalIDV>), List<TransunionCommercialPrincipalLink> principalLinks = default(List<TransunionCommercialPrincipalLink>), List<TransunionCommercialPrincipalLinkPL> principalLinkPL = default(List<TransunionCommercialPrincipalLinkPL>), List<TransunionCommercialPrincipalNotarialBonds> principalNotarialBonds = default(List<TransunionCommercialPrincipalNotarialBonds>), List<TransunionCommercialClaimDetailsLC> claimDetailsLC = default(List<TransunionCommercialClaimDetailsLC>), List<TransunionCommercialPolicyDetailsIF> policyDetailsIF = default(List<TransunionCommercialPolicyDetailsIF>), List<TransunionCommercialPolicyRiskAddressIA> policyRiskAddressIA = default(List<TransunionCommercialPolicyRiskAddressIA>), List<TransunionCommercialPolicyVehiclePV> policyVehiclePV = default(List<TransunionCommercialPolicyVehiclePV>), List<TransunionCommercialRegisteredPrincipal> registeredPrincipals = default(List<TransunionCommercialRegisteredPrincipal>), TransunionCommercialRegistrationDetails registrationDetails = default(TransunionCommercialRegistrationDetails), TransunionCommercialRegistrationDetailsExtended registrationDetailsExtended = default(TransunionCommercialRegistrationDetailsExtended), TransunionCommercialBusinessRescueDetail businessRescueDetail = default(TransunionCommercialBusinessRescueDetail), List<TransunionCommercialSearchResponse> searchResponse = default(List<TransunionCommercialSearchResponse>), TransunionCommercialSMEAssessment smeAssessment = default(TransunionCommercialSMEAssessment), List<TransunionCommercialSegmentDescriptions> segmentDescriptions = default(List<TransunionCommercialSegmentDescriptions>), List<TransunionCommercialTradeAccountSynopsis> tradeAccountSynopsis = default(List<TransunionCommercialTradeAccountSynopsis>), List<TransunionCommercialTradeAgeAnalysis> tradeAgeAnalysis = default(List<TransunionCommercialTradeAgeAnalysis>), List<TransunionCommercialTradeHistory> tradeHistory = default(List<TransunionCommercialTradeHistory>), List<TransunionCommercialTradePaymentHistory> tradePaymentHistory = default(List<TransunionCommercialTradePaymentHistory>), List<TransunionCommercialTradeReference> tradeReferences = default(List<TransunionCommercialTradeReference>), TransunionCommercialTradeReferenceSummary tradeReferenceSummary = default(TransunionCommercialTradeReferenceSummary), List<TransunionCommercialTradex> tradex = default(List<TransunionCommercialTradex>), List<TransunionCommercialTicketStatus> ticketsStatus = default(List<TransunionCommercialTicketStatus>), List<TransunionCommercialUnmatchedCourtRecord> unmatchedCourtRecords = default(List<TransunionCommercialUnmatchedCourtRecord>), List<TransunionCommercialUnmatchedDefault> unmatchedDefaults = default(List<TransunionCommercialUnmatchedDefault>), List<TransunionCommercialUnmatchedNotarialBond> unmatchedNotarialBonds = default(List<TransunionCommercialUnmatchedNotarialBond>), List<TransunionCommercialVehicles> vehicles = default(List<TransunionCommercialVehicles>), List<TransunionCommercialVeriCheque> veriCheques = default(List<TransunionCommercialVeriCheque>), List<TransunionCommercialComplianceIndicatorLI> complianceIndicatorLI = default(List<TransunionCommercialComplianceIndicatorLI>))
        {
            this.RawData = rawData;
            this.ErrorCode = errorCode;
            this.ErrorMessage = errorMessage;
            this.AccountVerificationVA = accountVerificationVA;
            this.AccountVerificationVH = accountVerificationVH;
            this.Affiliations = affiliations;
            this.BankCodes = bankCodes;
            this.BankingDetailsAC = bankingDetailsAC;
            this.BankingDetailsSummary = bankingDetailsSummary;
            this.BankHistory = bankHistory;
            this.BankReport = bankReport;
            this.Branch = branch;
            this.BcccX01 = bcccX01;
            this.BusinessDeedsDI = businessDeedsDI;
            this.BusinessDeedsComprehensivePB = businessDeedsComprehensivePB;
            this.BusinessDeedsSummaryDA = businessDeedsSummaryDA;
            this.BusinessDeedsComprehensivePW = businessDeedsComprehensivePW;
            this.Businessbenchmark = businessbenchmark;
            this.BusinessNotarialBonds = businessNotarialBonds;
            this.BusinessPlusPrincipalsSummary = businessPlusPrincipalsSummary;
            this.CancelledTickets = cancelledTickets;
            this.ConsumerBusinessEnquiries = consumerBusinessEnquiries;
            this.ConsumerDefaults = consumerDefaults;
            this.ConsumerEnquiries = consumerEnquiries;
            this.ConsumerHeader = consumerHeader;
            this.ConsumerHeaderC1 = consumerHeaderC1;
            this.ConsumerInfoNO04 = consumerInfoNO04;
            this.ConsumerJudgements = consumerJudgements;
            this.ConsumerNotarialBonds = consumerNotarialBonds;
            this.ConsumerNotices = consumerNotices;
            this.ConsumerTraceAlerts = consumerTraceAlerts;
            this.CourtRecords = courtRecords;
            this.DeedHistory = deedHistory;
            this.DeedsMultipleBond = deedsMultipleBond;
            this.DeedsMultipleOwnersDetail = deedsMultipleOwnersDetail;
            this.Defaults = defaults;
            this.EmpiricaE1 = empiricaE1;
            this.EnquiryHistory = enquiryHistory;
            this.ExtendedConsumerHeaderInfoCG = extendedConsumerHeaderInfoCG;
            this.FinanceData = financeData;
            this.FinanceDataFE = financeDataFE;
            this.FinanceDataFF = financeDataFF;
            this.FinancialRatios = financialRatios;
            this.ForensicEnquiryHistoryEF = forensicEnquiryHistoryEF;
            this.GeneralBankingInfo = generalBankingInfo;
            this.LinkedBusinessHeaders = linkedBusinessHeaders;
            this.LinkedBusinessDetailLF = linkedBusinessDetailLF;
            this.NotarialBonds = notarialBonds;
            this.Observations = observations;
            this.ObservationCont = observationCont;
            this.Operations = operations;
            this.OperationsHeader = operationsHeader;
            this.OtherOperations = otherOperations;
            this.Principals = principals;
            this.PrincipalsDetailEmpirica = principalsDetailEmpirica;
            this.PrincipalArchives = principalArchives;
            this.PrincipalArchivesP5 = principalArchivesP5;
            this.PrincipalClearances = principalClearances;
            this.PrincipalDeedsCA = principalDeedsCA;
            this.PrincipalDeedsComprehensiveCV = principalDeedsComprehensiveCV;
            this.PrincipalDeedsSummaryCO = principalDeedsSummaryCO;
            this.PrincipalDeedsSummaryP8 = principalDeedsSummaryP8;
            this.PrincipalIDVs = principalIDVs;
            this.PrincipalLinks = principalLinks;
            this.PrincipalLinkPL = principalLinkPL;
            this.PrincipalNotarialBonds = principalNotarialBonds;
            this.ClaimDetailsLC = claimDetailsLC;
            this.PolicyDetailsIF = policyDetailsIF;
            this.PolicyRiskAddressIA = policyRiskAddressIA;
            this.PolicyVehiclePV = policyVehiclePV;
            this.RegisteredPrincipals = registeredPrincipals;
            this.SearchResponse = searchResponse;
            this.SegmentDescriptions = segmentDescriptions;
            this.TradeAccountSynopsis = tradeAccountSynopsis;
            this.TradeAgeAnalysis = tradeAgeAnalysis;
            this.TradeHistory = tradeHistory;
            this.TradePaymentHistory = tradePaymentHistory;
            this.TradeReferences = tradeReferences;
            this.Tradex = tradex;
            this.TicketsStatus = ticketsStatus;
            this.UnmatchedCourtRecords = unmatchedCourtRecords;
            this.UnmatchedDefaults = unmatchedDefaults;
            this.UnmatchedNotarialBonds = unmatchedNotarialBonds;
            this.Vehicles = vehicles;
            this.VeriCheques = veriCheques;
            this.ComplianceIndicatorLI = complianceIndicatorLI;
            this.RawData = rawData;
            this.ResponseStatus = responseStatus;
            this.ErrorCode = errorCode;
            this.ErrorMessage = errorMessage;
            this.ProcessingStartDate = processingStartDate;
            this.ProcessingTimeSecs = processingTimeSecs;
            this.UniqueRefGuid = uniqueRefGuid;
            this.AccountVerificationVA = accountVerificationVA;
            this.AccountVerificationVH = accountVerificationVH;
            this.AggregateCW = aggregateCW;
            this.Affiliations = affiliations;
            this.BankCodes = bankCodes;
            this.BankingDetailsAC = bankingDetailsAC;
            this.BankingDetailsSummary = bankingDetailsSummary;
            this.BankHistory = bankHistory;
            this.BankReport = bankReport;
            this.Branch = branch;
            this.BcccX01 = bcccX01;
            this.BusinessAdverseSummary = businessAdverseSummary;
            this.BusinessDeedsDI = businessDeedsDI;
            this.BusinessDeedsComprehensivePB = businessDeedsComprehensivePB;
            this.BusinessDeedsSummaryDA = businessDeedsSummaryDA;
            this.BusinessDeedsComprehensivePW = businessDeedsComprehensivePW;
            this.Businessbenchmark = businessbenchmark;
            this.BusinessNotarialBonds = businessNotarialBonds;
            this.BusinessPlusPrincipalsSummary = businessPlusPrincipalsSummary;
            this.CancelledTickets = cancelledTickets;
            this.CapitalEmployed = capitalEmployed;
            this.CommercialDisputeResponse = commercialDisputeResponse;
            this.ConsumerBusinessEnquiries = consumerBusinessEnquiries;
            this.ConsumerDefaults = consumerDefaults;
            this.ConsumerEnquiries = consumerEnquiries;
            this.ConsumerHeader = consumerHeader;
            this.ConsumerHeaderC1 = consumerHeaderC1;
            this.ConsumerInfoNO04 = consumerInfoNO04;
            this.ConsumerJudgements = consumerJudgements;
            this.ConsumerNotarialBonds = consumerNotarialBonds;
            this.ConsumerNotices = consumerNotices;
            this.ConsumerTraceAlerts = consumerTraceAlerts;
            this.CourtRecords = courtRecords;
            this.CurrentAsset = currentAsset;
            this.CurrentLiabilities = currentLiabilities;
            this.DeedHistory = deedHistory;
            this.DeedsMultipleBond = deedsMultipleBond;
            this.DeedsMultipleOwnersDetail = deedsMultipleOwnersDetail;
            this.Defaults = defaults;
            this.DynamicRating = dynamicRating;
            this.EmpiricaE1 = empiricaE1;
            this.EmpiricaEM04 = empiricaEM04;
            this.EmpOfCapital = empOfCapital;
            this.EnquiryHistory = enquiryHistory;
            this.EnquirySummary = enquirySummary;
            this.ExtendedConsumerHeaderInfoCG = extendedConsumerHeaderInfoCG;
            this.FirstResponse = firstResponse;
            this.FinanceHeader = financeHeader;
            this.FinanceData = financeData;
            this.FinanceDataFE = financeDataFE;
            this.FinanceDataFF = financeDataFF;
            this.FinancialRatios = financialRatios;
            this.FinancialStabilityIndicatorFS = financialStabilityIndicatorFS;
            this.ForensicEnquiryHistoryEF = forensicEnquiryHistoryEF;
            this.GeneralBankingInfo = generalBankingInfo;
            this.Header = header;
            this.LinkedBusinessHeaders = linkedBusinessHeaders;
            this.LinkedBusinessDetailLF = linkedBusinessDetailLF;
            this.MailboxRetrieveList = mailboxRetrieveList;
            this.ModuleAvailabilityResponse = moduleAvailabilityResponse;
            this.Names = names;
            this.NotarialBonds = notarialBonds;
            this.Observations = observations;
            this.ObservationCont = observationCont;
            this.Operations = operations;
            this.OperationsHeader = operationsHeader;
            this.OtherOperations = otherOperations;
            this.Principals = principals;
            this.PrincipalsDetailEmpirica = principalsDetailEmpirica;
            this.PrincipalArchives = principalArchives;
            this.PrincipalArchivesP5 = principalArchivesP5;
            this.PrincipalClearances = principalClearances;
            this.PrincipalDeedsCA = principalDeedsCA;
            this.PrincipalDeedsComprehensiveCV = principalDeedsComprehensiveCV;
            this.PrincipalDeedsSummaryCO = principalDeedsSummaryCO;
            this.PrincipalDeedsSummaryP8 = principalDeedsSummaryP8;
            this.PrincipalFirstResponse = principalFirstResponse;
            this.PrincipalIDVs = principalIDVs;
            this.PrincipalLinks = principalLinks;
            this.PrincipalLinkPL = principalLinkPL;
            this.PrincipalNotarialBonds = principalNotarialBonds;
            this.ClaimDetailsLC = claimDetailsLC;
            this.PolicyDetailsIF = policyDetailsIF;
            this.PolicyRiskAddressIA = policyRiskAddressIA;
            this.PolicyVehiclePV = policyVehiclePV;
            this.RegisteredPrincipals = registeredPrincipals;
            this.RegistrationDetails = registrationDetails;
            this.RegistrationDetailsExtended = registrationDetailsExtended;
            this.BusinessRescueDetail = businessRescueDetail;
            this.SearchResponse = searchResponse;
            this.SmeAssessment = smeAssessment;
            this.SegmentDescriptions = segmentDescriptions;
            this.TradeAccountSynopsis = tradeAccountSynopsis;
            this.TradeAgeAnalysis = tradeAgeAnalysis;
            this.TradeHistory = tradeHistory;
            this.TradePaymentHistory = tradePaymentHistory;
            this.TradeReferences = tradeReferences;
            this.TradeReferenceSummary = tradeReferenceSummary;
            this.Tradex = tradex;
            this.TicketsStatus = ticketsStatus;
            this.UnmatchedCourtRecords = unmatchedCourtRecords;
            this.UnmatchedDefaults = unmatchedDefaults;
            this.UnmatchedNotarialBonds = unmatchedNotarialBonds;
            this.Vehicles = vehicles;
            this.VeriCheques = veriCheques;
            this.ComplianceIndicatorLI = complianceIndicatorLI;
        }

        /// <summary>
        /// Gets or Sets RawData
        /// </summary>
        [DataMember(Name="rawData", EmitDefaultValue=true)]
        public string RawData { get; set; }


        /// <summary>
        /// Gets or Sets ErrorCode
        /// </summary>
        [DataMember(Name="errorCode", EmitDefaultValue=true)]
        public string ErrorCode { get; set; }

        /// <summary>
        /// Gets or Sets ErrorMessage
        /// </summary>
        [DataMember(Name="errorMessage", EmitDefaultValue=true)]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// Gets or Sets ProcessingStartDate
        /// </summary>
        [DataMember(Name="processingStartDate", EmitDefaultValue=false)]
        public DateTime ProcessingStartDate { get; set; }

        /// <summary>
        /// Gets or Sets ProcessingTimeSecs
        /// </summary>
        [DataMember(Name="processingTimeSecs", EmitDefaultValue=false)]
        public double ProcessingTimeSecs { get; set; }

        /// <summary>
        /// Gets or Sets UniqueRefGuid
        /// </summary>
        [DataMember(Name="uniqueRefGuid", EmitDefaultValue=false)]
        public Guid UniqueRefGuid { get; set; }

        /// <summary>
        /// Gets or Sets AccountVerificationVA
        /// </summary>
        [DataMember(Name="accountVerificationVA", EmitDefaultValue=true)]
        public List<TransunionCommercialAccountVerificationVA> AccountVerificationVA { get; set; }

        /// <summary>
        /// Gets or Sets AccountVerificationVH
        /// </summary>
        [DataMember(Name="accountVerificationVH", EmitDefaultValue=true)]
        public List<TransunionCommercialAccountVerificationVH> AccountVerificationVH { get; set; }

        /// <summary>
        /// Gets or Sets AggregateCW
        /// </summary>
        [DataMember(Name="aggregateCW", EmitDefaultValue=false)]
        public TransunionCommercialAggregateCW AggregateCW { get; set; }

        /// <summary>
        /// Gets or Sets Affiliations
        /// </summary>
        [DataMember(Name="affiliations", EmitDefaultValue=true)]
        public List<TransunionCommercialAffiliations> Affiliations { get; set; }

        /// <summary>
        /// Gets or Sets BankCodes
        /// </summary>
        [DataMember(Name="bankCodes", EmitDefaultValue=true)]
        public List<TransunionCommercialBankCodes> BankCodes { get; set; }

        /// <summary>
        /// Gets or Sets BankingDetailsAC
        /// </summary>
        [DataMember(Name="bankingDetailsAC", EmitDefaultValue=true)]
        public List<TransunionCommercialBankingDetailsAC> BankingDetailsAC { get; set; }

        /// <summary>
        /// Gets or Sets BankingDetailsSummary
        /// </summary>
        [DataMember(Name="bankingDetailsSummary", EmitDefaultValue=true)]
        public List<TransunionCommercialBankingDetailSummary> BankingDetailsSummary { get; set; }

        /// <summary>
        /// Gets or Sets BankHistory
        /// </summary>
        [DataMember(Name="bankHistory", EmitDefaultValue=true)]
        public List<TransunionCommercialBankHistory> BankHistory { get; set; }

        /// <summary>
        /// Gets or Sets BankReport
        /// </summary>
        [DataMember(Name="bankReport", EmitDefaultValue=true)]
        public List<TransunionCommercialBankReport> BankReport { get; set; }

        /// <summary>
        /// Gets or Sets Branch
        /// </summary>
        [DataMember(Name="branch", EmitDefaultValue=true)]
        public List<TransunionCommercialBranch> Branch { get; set; }

        /// <summary>
        /// Gets or Sets BcccX01
        /// </summary>
        [DataMember(Name="bcccX01", EmitDefaultValue=true)]
        public List<TransunionCommercialBCCCX01> BcccX01 { get; set; }

        /// <summary>
        /// Gets or Sets BusinessAdverseSummary
        /// </summary>
        [DataMember(Name="businessAdverseSummary", EmitDefaultValue=false)]
        public TransunionCommercialBusinessAdverseSummary BusinessAdverseSummary { get; set; }

        /// <summary>
        /// Gets or Sets BusinessDeedsDI
        /// </summary>
        [DataMember(Name="businessDeedsDI", EmitDefaultValue=true)]
        public List<TransunionCommercialBusinessDeedsDI> BusinessDeedsDI { get; set; }

        /// <summary>
        /// Gets or Sets BusinessDeedsComprehensivePB
        /// </summary>
        [DataMember(Name="businessDeedsComprehensivePB", EmitDefaultValue=true)]
        public List<TransunionCommercialBusinessDeedsComprehensivePB> BusinessDeedsComprehensivePB { get; set; }

        /// <summary>
        /// Gets or Sets BusinessDeedsSummaryDA
        /// </summary>
        [DataMember(Name="businessDeedsSummaryDA", EmitDefaultValue=true)]
        public List<TransunionCommercialBusinessDeedsSummaryDA> BusinessDeedsSummaryDA { get; set; }

        /// <summary>
        /// Gets or Sets BusinessDeedsComprehensivePW
        /// </summary>
        [DataMember(Name="businessDeedsComprehensivePW", EmitDefaultValue=true)]
        public List<TransunionCommercialBusinessDeedsComprehensivePW> BusinessDeedsComprehensivePW { get; set; }

        /// <summary>
        /// Gets or Sets Businessbenchmark
        /// </summary>
        [DataMember(Name="businessbenchmark", EmitDefaultValue=true)]
        public List<TransunionCommercialBusinessBenchmarkBB> Businessbenchmark { get; set; }

        /// <summary>
        /// Gets or Sets BusinessNotarialBonds
        /// </summary>
        [DataMember(Name="businessNotarialBonds", EmitDefaultValue=true)]
        public List<TransunionCommercialBusinessNotarialBonds> BusinessNotarialBonds { get; set; }

        /// <summary>
        /// Gets or Sets BusinessPlusPrincipalsSummary
        /// </summary>
        [DataMember(Name="businessPlusPrincipalsSummary", EmitDefaultValue=true)]
        public List<TransunionCommercialBusinessPlusPrincipalSummary> BusinessPlusPrincipalsSummary { get; set; }

        /// <summary>
        /// Gets or Sets CancelledTickets
        /// </summary>
        [DataMember(Name="cancelledTickets", EmitDefaultValue=true)]
        public List<TransunionCommercialCancelledTicket> CancelledTickets { get; set; }

        /// <summary>
        /// Gets or Sets CapitalEmployed
        /// </summary>
        [DataMember(Name="capitalEmployed", EmitDefaultValue=false)]
        public TransunionCommercialCapitalEmployed CapitalEmployed { get; set; }

        /// <summary>
        /// Gets or Sets CommercialDisputeResponse
        /// </summary>
        [DataMember(Name="commercialDisputeResponse", EmitDefaultValue=false)]
        public TransunionCommercialCommercialDisputeResponse CommercialDisputeResponse { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerBusinessEnquiries
        /// </summary>
        [DataMember(Name="consumerBusinessEnquiries", EmitDefaultValue=true)]
        public List<TransunionCommercialConsumerBusinessEnquiry> ConsumerBusinessEnquiries { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerDefaults
        /// </summary>
        [DataMember(Name="consumerDefaults", EmitDefaultValue=true)]
        public List<TransunionCommercialConsumerDefault> ConsumerDefaults { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerEnquiries
        /// </summary>
        [DataMember(Name="consumerEnquiries", EmitDefaultValue=true)]
        public List<TransunionCommercialConsumerEnquiry> ConsumerEnquiries { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerHeader
        /// </summary>
        [DataMember(Name="consumerHeader", EmitDefaultValue=true)]
        public List<TransunionCommercialConsumerHeader> ConsumerHeader { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerHeaderC1
        /// </summary>
        [DataMember(Name="consumerHeaderC1", EmitDefaultValue=true)]
        public List<TransunionCommercialConsumerHeaderC1> ConsumerHeaderC1 { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerInfoNO04
        /// </summary>
        [DataMember(Name="consumerInfoNO04", EmitDefaultValue=true)]
        public List<TransunionCommercialConsumerInfoNO04> ConsumerInfoNO04 { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerJudgements
        /// </summary>
        [DataMember(Name="consumerJudgements", EmitDefaultValue=true)]
        public List<TransunionCommercialConsumerJudgement> ConsumerJudgements { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerNotarialBonds
        /// </summary>
        [DataMember(Name="consumerNotarialBonds", EmitDefaultValue=true)]
        public List<TransunionCommercialConsumerNotarialBonds> ConsumerNotarialBonds { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerNotices
        /// </summary>
        [DataMember(Name="consumerNotices", EmitDefaultValue=true)]
        public List<TransunionCommercialConsumerNotice> ConsumerNotices { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerTraceAlerts
        /// </summary>
        [DataMember(Name="consumerTraceAlerts", EmitDefaultValue=true)]
        public List<TransunionCommercialConsumerTraceAlert> ConsumerTraceAlerts { get; set; }

        /// <summary>
        /// Gets or Sets CourtRecords
        /// </summary>
        [DataMember(Name="courtRecords", EmitDefaultValue=true)]
        public List<TransunionCommercialCourtRecord> CourtRecords { get; set; }

        /// <summary>
        /// Gets or Sets CurrentAsset
        /// </summary>
        [DataMember(Name="currentAsset", EmitDefaultValue=false)]
        public TransunionCommercialCurrentAsset CurrentAsset { get; set; }

        /// <summary>
        /// Gets or Sets CurrentLiabilities
        /// </summary>
        [DataMember(Name="currentLiabilities", EmitDefaultValue=false)]
        public TransunionCommercialCurrentLiabilities CurrentLiabilities { get; set; }

        /// <summary>
        /// Gets or Sets DeedHistory
        /// </summary>
        [DataMember(Name="deedHistory", EmitDefaultValue=true)]
        public List<TransunionCommercialDeedHistory> DeedHistory { get; set; }

        /// <summary>
        /// Gets or Sets DeedsMultipleBond
        /// </summary>
        [DataMember(Name="deedsMultipleBond", EmitDefaultValue=true)]
        public List<TransunionCommercialDeedsMultipleBond> DeedsMultipleBond { get; set; }

        /// <summary>
        /// Gets or Sets DeedsMultipleOwnersDetail
        /// </summary>
        [DataMember(Name="deedsMultipleOwnersDetail", EmitDefaultValue=true)]
        public List<TransunionCommercialDeedsMultipleOwnerDetail> DeedsMultipleOwnersDetail { get; set; }

        /// <summary>
        /// Gets or Sets Defaults
        /// </summary>
        [DataMember(Name="defaults", EmitDefaultValue=true)]
        public List<TransunionCommercialDefault> Defaults { get; set; }

        /// <summary>
        /// Gets or Sets DynamicRating
        /// </summary>
        [DataMember(Name="dynamicRating", EmitDefaultValue=false)]
        public TransunionCommercialDynamicRating DynamicRating { get; set; }

        /// <summary>
        /// Gets or Sets EmpiricaE1
        /// </summary>
        [DataMember(Name="empiricaE1", EmitDefaultValue=true)]
        public List<TransunionCommercialEmpiricaE1> EmpiricaE1 { get; set; }

        /// <summary>
        /// Gets or Sets EmpiricaEM04
        /// </summary>
        [DataMember(Name="empiricaEM04", EmitDefaultValue=false)]
        public TransunionCommercialEmpiricaEM04 EmpiricaEM04 { get; set; }

        /// <summary>
        /// Gets or Sets EmpOfCapital
        /// </summary>
        [DataMember(Name="empOfCapital", EmitDefaultValue=false)]
        public TransunionCommercialEmpOfCapital EmpOfCapital { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryHistory
        /// </summary>
        [DataMember(Name="enquiryHistory", EmitDefaultValue=true)]
        public List<TransunionCommercialEnquiryHistory> EnquiryHistory { get; set; }

        /// <summary>
        /// Gets or Sets EnquirySummary
        /// </summary>
        [DataMember(Name="enquirySummary", EmitDefaultValue=false)]
        public TransunionCommercialEnquirySummary EnquirySummary { get; set; }

        /// <summary>
        /// Gets or Sets ExtendedConsumerHeaderInfoCG
        /// </summary>
        [DataMember(Name="extendedConsumerHeaderInfoCG", EmitDefaultValue=true)]
        public List<TransunionCommercialExtendedConsumerHeaderInfoCG> ExtendedConsumerHeaderInfoCG { get; set; }

        /// <summary>
        /// Gets or Sets FirstResponse
        /// </summary>
        [DataMember(Name="firstResponse", EmitDefaultValue=false)]
        public TransunionCommercialFirstResponse FirstResponse { get; set; }

        /// <summary>
        /// Gets or Sets FinanceHeader
        /// </summary>
        [DataMember(Name="financeHeader", EmitDefaultValue=false)]
        public TransunionCommercialFinanceHeader FinanceHeader { get; set; }

        /// <summary>
        /// Gets or Sets FinanceData
        /// </summary>
        [DataMember(Name="financeData", EmitDefaultValue=true)]
        public List<TransunionCommercialFinanceData> FinanceData { get; set; }

        /// <summary>
        /// Gets or Sets FinanceDataFE
        /// </summary>
        [DataMember(Name="financeDataFE", EmitDefaultValue=true)]
        public List<TransunionCommercialFinanceDataFE> FinanceDataFE { get; set; }

        /// <summary>
        /// Gets or Sets FinanceDataFF
        /// </summary>
        [DataMember(Name="financeDataFF", EmitDefaultValue=true)]
        public List<TransunionCommercialFinanceDataFF> FinanceDataFF { get; set; }

        /// <summary>
        /// Gets or Sets FinancialRatios
        /// </summary>
        [DataMember(Name="financialRatios", EmitDefaultValue=true)]
        public List<TransunionCommercialFinancialRatios> FinancialRatios { get; set; }

        /// <summary>
        /// Gets or Sets FinancialStabilityIndicatorFS
        /// </summary>
        [DataMember(Name="financialStabilityIndicatorFS", EmitDefaultValue=false)]
        public TransunionCommercialFinancialStabilityIndicatorFS FinancialStabilityIndicatorFS { get; set; }

        /// <summary>
        /// Gets or Sets ForensicEnquiryHistoryEF
        /// </summary>
        [DataMember(Name="forensicEnquiryHistoryEF", EmitDefaultValue=true)]
        public List<TransunionCommercialForensicEnquiryHistoryEF> ForensicEnquiryHistoryEF { get; set; }

        /// <summary>
        /// Gets or Sets GeneralBankingInfo
        /// </summary>
        [DataMember(Name="generalBankingInfo", EmitDefaultValue=true)]
        public List<TransunionCommercialGeneralBankingInfo> GeneralBankingInfo { get; set; }

        /// <summary>
        /// Gets or Sets Header
        /// </summary>
        [DataMember(Name="header", EmitDefaultValue=false)]
        public TransunionCommercialHeader Header { get; set; }

        /// <summary>
        /// Gets or Sets LinkedBusinessHeaders
        /// </summary>
        [DataMember(Name="linkedBusinessHeaders", EmitDefaultValue=true)]
        public List<TransunionCommercialLinkedBusinessHeader> LinkedBusinessHeaders { get; set; }

        /// <summary>
        /// Gets or Sets LinkedBusinessDetailLF
        /// </summary>
        [DataMember(Name="linkedBusinessDetailLF", EmitDefaultValue=true)]
        public List<TransunionCommercialLinkedBusinessDetailLF> LinkedBusinessDetailLF { get; set; }

        /// <summary>
        /// Gets or Sets MailboxRetrieveList
        /// </summary>
        [DataMember(Name="mailboxRetrieveList", EmitDefaultValue=false)]
        public TransunionCommercialMailboxRetrieveList MailboxRetrieveList { get; set; }

        /// <summary>
        /// Gets or Sets ModuleAvailabilityResponse
        /// </summary>
        [DataMember(Name="moduleAvailabilityResponse", EmitDefaultValue=false)]
        public TransunionCommercialModuleAvailabilityResponse ModuleAvailabilityResponse { get; set; }

        /// <summary>
        /// Gets or Sets Names
        /// </summary>
        [DataMember(Name="names", EmitDefaultValue=false)]
        public TransunionCommercialNames Names { get; set; }

        /// <summary>
        /// Gets or Sets NotarialBonds
        /// </summary>
        [DataMember(Name="notarialBonds", EmitDefaultValue=true)]
        public List<TransunionCommercialNotarialBond> NotarialBonds { get; set; }

        /// <summary>
        /// Gets or Sets Observations
        /// </summary>
        [DataMember(Name="observations", EmitDefaultValue=true)]
        public List<TransunionCommercialObservation> Observations { get; set; }

        /// <summary>
        /// Gets or Sets ObservationCont
        /// </summary>
        [DataMember(Name="observationCont", EmitDefaultValue=true)]
        public List<TransunionCommercialObservationCont> ObservationCont { get; set; }

        /// <summary>
        /// Gets or Sets Operations
        /// </summary>
        [DataMember(Name="operations", EmitDefaultValue=true)]
        public List<TransunionCommercialOperation> Operations { get; set; }

        /// <summary>
        /// Gets or Sets OperationsHeader
        /// </summary>
        [DataMember(Name="operationsHeader", EmitDefaultValue=true)]
        public List<TransunionCommercialAdditionalOperations> OperationsHeader { get; set; }

        /// <summary>
        /// Gets or Sets OtherOperations
        /// </summary>
        [DataMember(Name="otherOperations", EmitDefaultValue=true)]
        public List<TransunionCommercialOtherOperation> OtherOperations { get; set; }

        /// <summary>
        /// Gets or Sets Principals
        /// </summary>
        [DataMember(Name="principals", EmitDefaultValue=true)]
        public List<TransunionCommercialPrincipal> Principals { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalsDetailEmpirica
        /// </summary>
        [DataMember(Name="principalsDetailEmpirica", EmitDefaultValue=true)]
        public List<TransunionCommercialPrincipalDetailEmpirica> PrincipalsDetailEmpirica { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalArchives
        /// </summary>
        [DataMember(Name="principalArchives", EmitDefaultValue=true)]
        public List<TransunionCommercialPrincipalArchive> PrincipalArchives { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalArchivesP5
        /// </summary>
        [DataMember(Name="principalArchivesP5", EmitDefaultValue=true)]
        public List<TransunionCommercialPrincipalArchiveP5> PrincipalArchivesP5 { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalClearances
        /// </summary>
        [DataMember(Name="principalClearances", EmitDefaultValue=true)]
        public List<TransunionCommercialPrincipalClearance> PrincipalClearances { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalDeedsCA
        /// </summary>
        [DataMember(Name="principalDeedsCA", EmitDefaultValue=true)]
        public List<TransunionCommercialPrincipalDeedsComprehensiveCA> PrincipalDeedsCA { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalDeedsComprehensiveCV
        /// </summary>
        [DataMember(Name="principalDeedsComprehensiveCV", EmitDefaultValue=true)]
        public List<TransunionCommercialPrincipalDeedsComprehensiveCV> PrincipalDeedsComprehensiveCV { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalDeedsSummaryCO
        /// </summary>
        [DataMember(Name="principalDeedsSummaryCO", EmitDefaultValue=true)]
        public List<TransunionCommercialPrincipalDeedsSummaryCO> PrincipalDeedsSummaryCO { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalDeedsSummaryP8
        /// </summary>
        [DataMember(Name="principalDeedsSummaryP8", EmitDefaultValue=true)]
        public List<TransunionCommercialPrincipalDeedsSummaryP8> PrincipalDeedsSummaryP8 { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalFirstResponse
        /// </summary>
        [DataMember(Name="principalFirstResponse", EmitDefaultValue=false)]
        public TransunionCommercialPrincipalFirstResponse PrincipalFirstResponse { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalIDVs
        /// </summary>
        [DataMember(Name="principalIDVs", EmitDefaultValue=true)]
        public List<TransunionCommercialPrincipalIDV> PrincipalIDVs { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalLinks
        /// </summary>
        [DataMember(Name="principalLinks", EmitDefaultValue=true)]
        public List<TransunionCommercialPrincipalLink> PrincipalLinks { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalLinkPL
        /// </summary>
        [DataMember(Name="principalLinkPL", EmitDefaultValue=true)]
        public List<TransunionCommercialPrincipalLinkPL> PrincipalLinkPL { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalNotarialBonds
        /// </summary>
        [DataMember(Name="principalNotarialBonds", EmitDefaultValue=true)]
        public List<TransunionCommercialPrincipalNotarialBonds> PrincipalNotarialBonds { get; set; }

        /// <summary>
        /// Gets or Sets ClaimDetailsLC
        /// </summary>
        [DataMember(Name="claimDetailsLC", EmitDefaultValue=true)]
        public List<TransunionCommercialClaimDetailsLC> ClaimDetailsLC { get; set; }

        /// <summary>
        /// Gets or Sets PolicyDetailsIF
        /// </summary>
        [DataMember(Name="policyDetailsIF", EmitDefaultValue=true)]
        public List<TransunionCommercialPolicyDetailsIF> PolicyDetailsIF { get; set; }

        /// <summary>
        /// Gets or Sets PolicyRiskAddressIA
        /// </summary>
        [DataMember(Name="policyRiskAddressIA", EmitDefaultValue=true)]
        public List<TransunionCommercialPolicyRiskAddressIA> PolicyRiskAddressIA { get; set; }

        /// <summary>
        /// Gets or Sets PolicyVehiclePV
        /// </summary>
        [DataMember(Name="policyVehiclePV", EmitDefaultValue=true)]
        public List<TransunionCommercialPolicyVehiclePV> PolicyVehiclePV { get; set; }

        /// <summary>
        /// Gets or Sets RegisteredPrincipals
        /// </summary>
        [DataMember(Name="registeredPrincipals", EmitDefaultValue=true)]
        public List<TransunionCommercialRegisteredPrincipal> RegisteredPrincipals { get; set; }

        /// <summary>
        /// Gets or Sets RegistrationDetails
        /// </summary>
        [DataMember(Name="registrationDetails", EmitDefaultValue=false)]
        public TransunionCommercialRegistrationDetails RegistrationDetails { get; set; }

        /// <summary>
        /// Gets or Sets RegistrationDetailsExtended
        /// </summary>
        [DataMember(Name="registrationDetailsExtended", EmitDefaultValue=false)]
        public TransunionCommercialRegistrationDetailsExtended RegistrationDetailsExtended { get; set; }

        /// <summary>
        /// Gets or Sets BusinessRescueDetail
        /// </summary>
        [DataMember(Name="businessRescueDetail", EmitDefaultValue=false)]
        public TransunionCommercialBusinessRescueDetail BusinessRescueDetail { get; set; }

        /// <summary>
        /// Gets or Sets SearchResponse
        /// </summary>
        [DataMember(Name="searchResponse", EmitDefaultValue=true)]
        public List<TransunionCommercialSearchResponse> SearchResponse { get; set; }

        /// <summary>
        /// Gets or Sets SmeAssessment
        /// </summary>
        [DataMember(Name="smeAssessment", EmitDefaultValue=false)]
        public TransunionCommercialSMEAssessment SmeAssessment { get; set; }

        /// <summary>
        /// Gets or Sets SegmentDescriptions
        /// </summary>
        [DataMember(Name="segmentDescriptions", EmitDefaultValue=true)]
        public List<TransunionCommercialSegmentDescriptions> SegmentDescriptions { get; set; }

        /// <summary>
        /// Gets or Sets TradeAccountSynopsis
        /// </summary>
        [DataMember(Name="tradeAccountSynopsis", EmitDefaultValue=true)]
        public List<TransunionCommercialTradeAccountSynopsis> TradeAccountSynopsis { get; set; }

        /// <summary>
        /// Gets or Sets TradeAgeAnalysis
        /// </summary>
        [DataMember(Name="tradeAgeAnalysis", EmitDefaultValue=true)]
        public List<TransunionCommercialTradeAgeAnalysis> TradeAgeAnalysis { get; set; }

        /// <summary>
        /// Gets or Sets TradeHistory
        /// </summary>
        [DataMember(Name="tradeHistory", EmitDefaultValue=true)]
        public List<TransunionCommercialTradeHistory> TradeHistory { get; set; }

        /// <summary>
        /// Gets or Sets TradePaymentHistory
        /// </summary>
        [DataMember(Name="tradePaymentHistory", EmitDefaultValue=true)]
        public List<TransunionCommercialTradePaymentHistory> TradePaymentHistory { get; set; }

        /// <summary>
        /// Gets or Sets TradeReferences
        /// </summary>
        [DataMember(Name="tradeReferences", EmitDefaultValue=true)]
        public List<TransunionCommercialTradeReference> TradeReferences { get; set; }

        /// <summary>
        /// Gets or Sets TradeReferenceSummary
        /// </summary>
        [DataMember(Name="tradeReferenceSummary", EmitDefaultValue=false)]
        public TransunionCommercialTradeReferenceSummary TradeReferenceSummary { get; set; }

        /// <summary>
        /// Gets or Sets Tradex
        /// </summary>
        [DataMember(Name="tradex", EmitDefaultValue=true)]
        public List<TransunionCommercialTradex> Tradex { get; set; }

        /// <summary>
        /// Gets or Sets TicketsStatus
        /// </summary>
        [DataMember(Name="ticketsStatus", EmitDefaultValue=true)]
        public List<TransunionCommercialTicketStatus> TicketsStatus { get; set; }

        /// <summary>
        /// Gets or Sets UnmatchedCourtRecords
        /// </summary>
        [DataMember(Name="unmatchedCourtRecords", EmitDefaultValue=true)]
        public List<TransunionCommercialUnmatchedCourtRecord> UnmatchedCourtRecords { get; set; }

        /// <summary>
        /// Gets or Sets UnmatchedDefaults
        /// </summary>
        [DataMember(Name="unmatchedDefaults", EmitDefaultValue=true)]
        public List<TransunionCommercialUnmatchedDefault> UnmatchedDefaults { get; set; }

        /// <summary>
        /// Gets or Sets UnmatchedNotarialBonds
        /// </summary>
        [DataMember(Name="unmatchedNotarialBonds", EmitDefaultValue=true)]
        public List<TransunionCommercialUnmatchedNotarialBond> UnmatchedNotarialBonds { get; set; }

        /// <summary>
        /// Gets or Sets Vehicles
        /// </summary>
        [DataMember(Name="vehicles", EmitDefaultValue=true)]
        public List<TransunionCommercialVehicles> Vehicles { get; set; }

        /// <summary>
        /// Gets or Sets VeriCheques
        /// </summary>
        [DataMember(Name="veriCheques", EmitDefaultValue=true)]
        public List<TransunionCommercialVeriCheque> VeriCheques { get; set; }

        /// <summary>
        /// Gets or Sets ComplianceIndicatorLI
        /// </summary>
        [DataMember(Name="complianceIndicatorLI", EmitDefaultValue=true)]
        public List<TransunionCommercialComplianceIndicatorLI> ComplianceIndicatorLI { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialCommercialResponse {\n");
            sb.Append("  RawData: ").Append(RawData).Append("\n");
            sb.Append("  ResponseStatus: ").Append(ResponseStatus).Append("\n");
            sb.Append("  ErrorCode: ").Append(ErrorCode).Append("\n");
            sb.Append("  ErrorMessage: ").Append(ErrorMessage).Append("\n");
            sb.Append("  ProcessingStartDate: ").Append(ProcessingStartDate).Append("\n");
            sb.Append("  ProcessingTimeSecs: ").Append(ProcessingTimeSecs).Append("\n");
            sb.Append("  UniqueRefGuid: ").Append(UniqueRefGuid).Append("\n");
            sb.Append("  AccountVerificationVA: ").Append(AccountVerificationVA).Append("\n");
            sb.Append("  AccountVerificationVH: ").Append(AccountVerificationVH).Append("\n");
            sb.Append("  AggregateCW: ").Append(AggregateCW).Append("\n");
            sb.Append("  Affiliations: ").Append(Affiliations).Append("\n");
            sb.Append("  BankCodes: ").Append(BankCodes).Append("\n");
            sb.Append("  BankingDetailsAC: ").Append(BankingDetailsAC).Append("\n");
            sb.Append("  BankingDetailsSummary: ").Append(BankingDetailsSummary).Append("\n");
            sb.Append("  BankHistory: ").Append(BankHistory).Append("\n");
            sb.Append("  BankReport: ").Append(BankReport).Append("\n");
            sb.Append("  Branch: ").Append(Branch).Append("\n");
            sb.Append("  BcccX01: ").Append(BcccX01).Append("\n");
            sb.Append("  BusinessAdverseSummary: ").Append(BusinessAdverseSummary).Append("\n");
            sb.Append("  BusinessDeedsDI: ").Append(BusinessDeedsDI).Append("\n");
            sb.Append("  BusinessDeedsComprehensivePB: ").Append(BusinessDeedsComprehensivePB).Append("\n");
            sb.Append("  BusinessDeedsSummaryDA: ").Append(BusinessDeedsSummaryDA).Append("\n");
            sb.Append("  BusinessDeedsComprehensivePW: ").Append(BusinessDeedsComprehensivePW).Append("\n");
            sb.Append("  Businessbenchmark: ").Append(Businessbenchmark).Append("\n");
            sb.Append("  BusinessNotarialBonds: ").Append(BusinessNotarialBonds).Append("\n");
            sb.Append("  BusinessPlusPrincipalsSummary: ").Append(BusinessPlusPrincipalsSummary).Append("\n");
            sb.Append("  CancelledTickets: ").Append(CancelledTickets).Append("\n");
            sb.Append("  CapitalEmployed: ").Append(CapitalEmployed).Append("\n");
            sb.Append("  CommercialDisputeResponse: ").Append(CommercialDisputeResponse).Append("\n");
            sb.Append("  ConsumerBusinessEnquiries: ").Append(ConsumerBusinessEnquiries).Append("\n");
            sb.Append("  ConsumerDefaults: ").Append(ConsumerDefaults).Append("\n");
            sb.Append("  ConsumerEnquiries: ").Append(ConsumerEnquiries).Append("\n");
            sb.Append("  ConsumerHeader: ").Append(ConsumerHeader).Append("\n");
            sb.Append("  ConsumerHeaderC1: ").Append(ConsumerHeaderC1).Append("\n");
            sb.Append("  ConsumerInfoNO04: ").Append(ConsumerInfoNO04).Append("\n");
            sb.Append("  ConsumerJudgements: ").Append(ConsumerJudgements).Append("\n");
            sb.Append("  ConsumerNotarialBonds: ").Append(ConsumerNotarialBonds).Append("\n");
            sb.Append("  ConsumerNotices: ").Append(ConsumerNotices).Append("\n");
            sb.Append("  ConsumerTraceAlerts: ").Append(ConsumerTraceAlerts).Append("\n");
            sb.Append("  CourtRecords: ").Append(CourtRecords).Append("\n");
            sb.Append("  CurrentAsset: ").Append(CurrentAsset).Append("\n");
            sb.Append("  CurrentLiabilities: ").Append(CurrentLiabilities).Append("\n");
            sb.Append("  DeedHistory: ").Append(DeedHistory).Append("\n");
            sb.Append("  DeedsMultipleBond: ").Append(DeedsMultipleBond).Append("\n");
            sb.Append("  DeedsMultipleOwnersDetail: ").Append(DeedsMultipleOwnersDetail).Append("\n");
            sb.Append("  Defaults: ").Append(Defaults).Append("\n");
            sb.Append("  DynamicRating: ").Append(DynamicRating).Append("\n");
            sb.Append("  EmpiricaE1: ").Append(EmpiricaE1).Append("\n");
            sb.Append("  EmpiricaEM04: ").Append(EmpiricaEM04).Append("\n");
            sb.Append("  EmpOfCapital: ").Append(EmpOfCapital).Append("\n");
            sb.Append("  EnquiryHistory: ").Append(EnquiryHistory).Append("\n");
            sb.Append("  EnquirySummary: ").Append(EnquirySummary).Append("\n");
            sb.Append("  ExtendedConsumerHeaderInfoCG: ").Append(ExtendedConsumerHeaderInfoCG).Append("\n");
            sb.Append("  FirstResponse: ").Append(FirstResponse).Append("\n");
            sb.Append("  FinanceHeader: ").Append(FinanceHeader).Append("\n");
            sb.Append("  FinanceData: ").Append(FinanceData).Append("\n");
            sb.Append("  FinanceDataFE: ").Append(FinanceDataFE).Append("\n");
            sb.Append("  FinanceDataFF: ").Append(FinanceDataFF).Append("\n");
            sb.Append("  FinancialRatios: ").Append(FinancialRatios).Append("\n");
            sb.Append("  FinancialStabilityIndicatorFS: ").Append(FinancialStabilityIndicatorFS).Append("\n");
            sb.Append("  ForensicEnquiryHistoryEF: ").Append(ForensicEnquiryHistoryEF).Append("\n");
            sb.Append("  GeneralBankingInfo: ").Append(GeneralBankingInfo).Append("\n");
            sb.Append("  Header: ").Append(Header).Append("\n");
            sb.Append("  LinkedBusinessHeaders: ").Append(LinkedBusinessHeaders).Append("\n");
            sb.Append("  LinkedBusinessDetailLF: ").Append(LinkedBusinessDetailLF).Append("\n");
            sb.Append("  MailboxRetrieveList: ").Append(MailboxRetrieveList).Append("\n");
            sb.Append("  ModuleAvailabilityResponse: ").Append(ModuleAvailabilityResponse).Append("\n");
            sb.Append("  Names: ").Append(Names).Append("\n");
            sb.Append("  NotarialBonds: ").Append(NotarialBonds).Append("\n");
            sb.Append("  Observations: ").Append(Observations).Append("\n");
            sb.Append("  ObservationCont: ").Append(ObservationCont).Append("\n");
            sb.Append("  Operations: ").Append(Operations).Append("\n");
            sb.Append("  OperationsHeader: ").Append(OperationsHeader).Append("\n");
            sb.Append("  OtherOperations: ").Append(OtherOperations).Append("\n");
            sb.Append("  Principals: ").Append(Principals).Append("\n");
            sb.Append("  PrincipalsDetailEmpirica: ").Append(PrincipalsDetailEmpirica).Append("\n");
            sb.Append("  PrincipalArchives: ").Append(PrincipalArchives).Append("\n");
            sb.Append("  PrincipalArchivesP5: ").Append(PrincipalArchivesP5).Append("\n");
            sb.Append("  PrincipalClearances: ").Append(PrincipalClearances).Append("\n");
            sb.Append("  PrincipalDeedsCA: ").Append(PrincipalDeedsCA).Append("\n");
            sb.Append("  PrincipalDeedsComprehensiveCV: ").Append(PrincipalDeedsComprehensiveCV).Append("\n");
            sb.Append("  PrincipalDeedsSummaryCO: ").Append(PrincipalDeedsSummaryCO).Append("\n");
            sb.Append("  PrincipalDeedsSummaryP8: ").Append(PrincipalDeedsSummaryP8).Append("\n");
            sb.Append("  PrincipalFirstResponse: ").Append(PrincipalFirstResponse).Append("\n");
            sb.Append("  PrincipalIDVs: ").Append(PrincipalIDVs).Append("\n");
            sb.Append("  PrincipalLinks: ").Append(PrincipalLinks).Append("\n");
            sb.Append("  PrincipalLinkPL: ").Append(PrincipalLinkPL).Append("\n");
            sb.Append("  PrincipalNotarialBonds: ").Append(PrincipalNotarialBonds).Append("\n");
            sb.Append("  ClaimDetailsLC: ").Append(ClaimDetailsLC).Append("\n");
            sb.Append("  PolicyDetailsIF: ").Append(PolicyDetailsIF).Append("\n");
            sb.Append("  PolicyRiskAddressIA: ").Append(PolicyRiskAddressIA).Append("\n");
            sb.Append("  PolicyVehiclePV: ").Append(PolicyVehiclePV).Append("\n");
            sb.Append("  RegisteredPrincipals: ").Append(RegisteredPrincipals).Append("\n");
            sb.Append("  RegistrationDetails: ").Append(RegistrationDetails).Append("\n");
            sb.Append("  RegistrationDetailsExtended: ").Append(RegistrationDetailsExtended).Append("\n");
            sb.Append("  BusinessRescueDetail: ").Append(BusinessRescueDetail).Append("\n");
            sb.Append("  SearchResponse: ").Append(SearchResponse).Append("\n");
            sb.Append("  SmeAssessment: ").Append(SmeAssessment).Append("\n");
            sb.Append("  SegmentDescriptions: ").Append(SegmentDescriptions).Append("\n");
            sb.Append("  TradeAccountSynopsis: ").Append(TradeAccountSynopsis).Append("\n");
            sb.Append("  TradeAgeAnalysis: ").Append(TradeAgeAnalysis).Append("\n");
            sb.Append("  TradeHistory: ").Append(TradeHistory).Append("\n");
            sb.Append("  TradePaymentHistory: ").Append(TradePaymentHistory).Append("\n");
            sb.Append("  TradeReferences: ").Append(TradeReferences).Append("\n");
            sb.Append("  TradeReferenceSummary: ").Append(TradeReferenceSummary).Append("\n");
            sb.Append("  Tradex: ").Append(Tradex).Append("\n");
            sb.Append("  TicketsStatus: ").Append(TicketsStatus).Append("\n");
            sb.Append("  UnmatchedCourtRecords: ").Append(UnmatchedCourtRecords).Append("\n");
            sb.Append("  UnmatchedDefaults: ").Append(UnmatchedDefaults).Append("\n");
            sb.Append("  UnmatchedNotarialBonds: ").Append(UnmatchedNotarialBonds).Append("\n");
            sb.Append("  Vehicles: ").Append(Vehicles).Append("\n");
            sb.Append("  VeriCheques: ").Append(VeriCheques).Append("\n");
            sb.Append("  ComplianceIndicatorLI: ").Append(ComplianceIndicatorLI).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialCommercialResponse);
        }

        /// <summary>
        /// Returns true if TransunionCommercialCommercialResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialCommercialResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialCommercialResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.RawData == input.RawData ||
                    (this.RawData != null &&
                    this.RawData.Equals(input.RawData))
                ) && 
                (
                    this.ResponseStatus == input.ResponseStatus ||
                    (this.ResponseStatus != null &&
                    this.ResponseStatus.Equals(input.ResponseStatus))
                ) && 
                (
                    this.ErrorCode == input.ErrorCode ||
                    (this.ErrorCode != null &&
                    this.ErrorCode.Equals(input.ErrorCode))
                ) && 
                (
                    this.ErrorMessage == input.ErrorMessage ||
                    (this.ErrorMessage != null &&
                    this.ErrorMessage.Equals(input.ErrorMessage))
                ) && 
                (
                    this.ProcessingStartDate == input.ProcessingStartDate ||
                    (this.ProcessingStartDate != null &&
                    this.ProcessingStartDate.Equals(input.ProcessingStartDate))
                ) && 
                (
                    this.ProcessingTimeSecs == input.ProcessingTimeSecs ||
                    (this.ProcessingTimeSecs != null &&
                    this.ProcessingTimeSecs.Equals(input.ProcessingTimeSecs))
                ) && 
                (
                    this.UniqueRefGuid == input.UniqueRefGuid ||
                    (this.UniqueRefGuid != null &&
                    this.UniqueRefGuid.Equals(input.UniqueRefGuid))
                ) && 
                (
                    this.AccountVerificationVA == input.AccountVerificationVA ||
                    this.AccountVerificationVA != null &&
                    input.AccountVerificationVA != null &&
                    this.AccountVerificationVA.SequenceEqual(input.AccountVerificationVA)
                ) && 
                (
                    this.AccountVerificationVH == input.AccountVerificationVH ||
                    this.AccountVerificationVH != null &&
                    input.AccountVerificationVH != null &&
                    this.AccountVerificationVH.SequenceEqual(input.AccountVerificationVH)
                ) && 
                (
                    this.AggregateCW == input.AggregateCW ||
                    (this.AggregateCW != null &&
                    this.AggregateCW.Equals(input.AggregateCW))
                ) && 
                (
                    this.Affiliations == input.Affiliations ||
                    this.Affiliations != null &&
                    input.Affiliations != null &&
                    this.Affiliations.SequenceEqual(input.Affiliations)
                ) && 
                (
                    this.BankCodes == input.BankCodes ||
                    this.BankCodes != null &&
                    input.BankCodes != null &&
                    this.BankCodes.SequenceEqual(input.BankCodes)
                ) && 
                (
                    this.BankingDetailsAC == input.BankingDetailsAC ||
                    this.BankingDetailsAC != null &&
                    input.BankingDetailsAC != null &&
                    this.BankingDetailsAC.SequenceEqual(input.BankingDetailsAC)
                ) && 
                (
                    this.BankingDetailsSummary == input.BankingDetailsSummary ||
                    this.BankingDetailsSummary != null &&
                    input.BankingDetailsSummary != null &&
                    this.BankingDetailsSummary.SequenceEqual(input.BankingDetailsSummary)
                ) && 
                (
                    this.BankHistory == input.BankHistory ||
                    this.BankHistory != null &&
                    input.BankHistory != null &&
                    this.BankHistory.SequenceEqual(input.BankHistory)
                ) && 
                (
                    this.BankReport == input.BankReport ||
                    this.BankReport != null &&
                    input.BankReport != null &&
                    this.BankReport.SequenceEqual(input.BankReport)
                ) && 
                (
                    this.Branch == input.Branch ||
                    this.Branch != null &&
                    input.Branch != null &&
                    this.Branch.SequenceEqual(input.Branch)
                ) && 
                (
                    this.BcccX01 == input.BcccX01 ||
                    this.BcccX01 != null &&
                    input.BcccX01 != null &&
                    this.BcccX01.SequenceEqual(input.BcccX01)
                ) && 
                (
                    this.BusinessAdverseSummary == input.BusinessAdverseSummary ||
                    (this.BusinessAdverseSummary != null &&
                    this.BusinessAdverseSummary.Equals(input.BusinessAdverseSummary))
                ) && 
                (
                    this.BusinessDeedsDI == input.BusinessDeedsDI ||
                    this.BusinessDeedsDI != null &&
                    input.BusinessDeedsDI != null &&
                    this.BusinessDeedsDI.SequenceEqual(input.BusinessDeedsDI)
                ) && 
                (
                    this.BusinessDeedsComprehensivePB == input.BusinessDeedsComprehensivePB ||
                    this.BusinessDeedsComprehensivePB != null &&
                    input.BusinessDeedsComprehensivePB != null &&
                    this.BusinessDeedsComprehensivePB.SequenceEqual(input.BusinessDeedsComprehensivePB)
                ) && 
                (
                    this.BusinessDeedsSummaryDA == input.BusinessDeedsSummaryDA ||
                    this.BusinessDeedsSummaryDA != null &&
                    input.BusinessDeedsSummaryDA != null &&
                    this.BusinessDeedsSummaryDA.SequenceEqual(input.BusinessDeedsSummaryDA)
                ) && 
                (
                    this.BusinessDeedsComprehensivePW == input.BusinessDeedsComprehensivePW ||
                    this.BusinessDeedsComprehensivePW != null &&
                    input.BusinessDeedsComprehensivePW != null &&
                    this.BusinessDeedsComprehensivePW.SequenceEqual(input.BusinessDeedsComprehensivePW)
                ) && 
                (
                    this.Businessbenchmark == input.Businessbenchmark ||
                    this.Businessbenchmark != null &&
                    input.Businessbenchmark != null &&
                    this.Businessbenchmark.SequenceEqual(input.Businessbenchmark)
                ) && 
                (
                    this.BusinessNotarialBonds == input.BusinessNotarialBonds ||
                    this.BusinessNotarialBonds != null &&
                    input.BusinessNotarialBonds != null &&
                    this.BusinessNotarialBonds.SequenceEqual(input.BusinessNotarialBonds)
                ) && 
                (
                    this.BusinessPlusPrincipalsSummary == input.BusinessPlusPrincipalsSummary ||
                    this.BusinessPlusPrincipalsSummary != null &&
                    input.BusinessPlusPrincipalsSummary != null &&
                    this.BusinessPlusPrincipalsSummary.SequenceEqual(input.BusinessPlusPrincipalsSummary)
                ) && 
                (
                    this.CancelledTickets == input.CancelledTickets ||
                    this.CancelledTickets != null &&
                    input.CancelledTickets != null &&
                    this.CancelledTickets.SequenceEqual(input.CancelledTickets)
                ) && 
                (
                    this.CapitalEmployed == input.CapitalEmployed ||
                    (this.CapitalEmployed != null &&
                    this.CapitalEmployed.Equals(input.CapitalEmployed))
                ) && 
                (
                    this.CommercialDisputeResponse == input.CommercialDisputeResponse ||
                    (this.CommercialDisputeResponse != null &&
                    this.CommercialDisputeResponse.Equals(input.CommercialDisputeResponse))
                ) && 
                (
                    this.ConsumerBusinessEnquiries == input.ConsumerBusinessEnquiries ||
                    this.ConsumerBusinessEnquiries != null &&
                    input.ConsumerBusinessEnquiries != null &&
                    this.ConsumerBusinessEnquiries.SequenceEqual(input.ConsumerBusinessEnquiries)
                ) && 
                (
                    this.ConsumerDefaults == input.ConsumerDefaults ||
                    this.ConsumerDefaults != null &&
                    input.ConsumerDefaults != null &&
                    this.ConsumerDefaults.SequenceEqual(input.ConsumerDefaults)
                ) && 
                (
                    this.ConsumerEnquiries == input.ConsumerEnquiries ||
                    this.ConsumerEnquiries != null &&
                    input.ConsumerEnquiries != null &&
                    this.ConsumerEnquiries.SequenceEqual(input.ConsumerEnquiries)
                ) && 
                (
                    this.ConsumerHeader == input.ConsumerHeader ||
                    this.ConsumerHeader != null &&
                    input.ConsumerHeader != null &&
                    this.ConsumerHeader.SequenceEqual(input.ConsumerHeader)
                ) && 
                (
                    this.ConsumerHeaderC1 == input.ConsumerHeaderC1 ||
                    this.ConsumerHeaderC1 != null &&
                    input.ConsumerHeaderC1 != null &&
                    this.ConsumerHeaderC1.SequenceEqual(input.ConsumerHeaderC1)
                ) && 
                (
                    this.ConsumerInfoNO04 == input.ConsumerInfoNO04 ||
                    this.ConsumerInfoNO04 != null &&
                    input.ConsumerInfoNO04 != null &&
                    this.ConsumerInfoNO04.SequenceEqual(input.ConsumerInfoNO04)
                ) && 
                (
                    this.ConsumerJudgements == input.ConsumerJudgements ||
                    this.ConsumerJudgements != null &&
                    input.ConsumerJudgements != null &&
                    this.ConsumerJudgements.SequenceEqual(input.ConsumerJudgements)
                ) && 
                (
                    this.ConsumerNotarialBonds == input.ConsumerNotarialBonds ||
                    this.ConsumerNotarialBonds != null &&
                    input.ConsumerNotarialBonds != null &&
                    this.ConsumerNotarialBonds.SequenceEqual(input.ConsumerNotarialBonds)
                ) && 
                (
                    this.ConsumerNotices == input.ConsumerNotices ||
                    this.ConsumerNotices != null &&
                    input.ConsumerNotices != null &&
                    this.ConsumerNotices.SequenceEqual(input.ConsumerNotices)
                ) && 
                (
                    this.ConsumerTraceAlerts == input.ConsumerTraceAlerts ||
                    this.ConsumerTraceAlerts != null &&
                    input.ConsumerTraceAlerts != null &&
                    this.ConsumerTraceAlerts.SequenceEqual(input.ConsumerTraceAlerts)
                ) && 
                (
                    this.CourtRecords == input.CourtRecords ||
                    this.CourtRecords != null &&
                    input.CourtRecords != null &&
                    this.CourtRecords.SequenceEqual(input.CourtRecords)
                ) && 
                (
                    this.CurrentAsset == input.CurrentAsset ||
                    (this.CurrentAsset != null &&
                    this.CurrentAsset.Equals(input.CurrentAsset))
                ) && 
                (
                    this.CurrentLiabilities == input.CurrentLiabilities ||
                    (this.CurrentLiabilities != null &&
                    this.CurrentLiabilities.Equals(input.CurrentLiabilities))
                ) && 
                (
                    this.DeedHistory == input.DeedHistory ||
                    this.DeedHistory != null &&
                    input.DeedHistory != null &&
                    this.DeedHistory.SequenceEqual(input.DeedHistory)
                ) && 
                (
                    this.DeedsMultipleBond == input.DeedsMultipleBond ||
                    this.DeedsMultipleBond != null &&
                    input.DeedsMultipleBond != null &&
                    this.DeedsMultipleBond.SequenceEqual(input.DeedsMultipleBond)
                ) && 
                (
                    this.DeedsMultipleOwnersDetail == input.DeedsMultipleOwnersDetail ||
                    this.DeedsMultipleOwnersDetail != null &&
                    input.DeedsMultipleOwnersDetail != null &&
                    this.DeedsMultipleOwnersDetail.SequenceEqual(input.DeedsMultipleOwnersDetail)
                ) && 
                (
                    this.Defaults == input.Defaults ||
                    this.Defaults != null &&
                    input.Defaults != null &&
                    this.Defaults.SequenceEqual(input.Defaults)
                ) && 
                (
                    this.DynamicRating == input.DynamicRating ||
                    (this.DynamicRating != null &&
                    this.DynamicRating.Equals(input.DynamicRating))
                ) && 
                (
                    this.EmpiricaE1 == input.EmpiricaE1 ||
                    this.EmpiricaE1 != null &&
                    input.EmpiricaE1 != null &&
                    this.EmpiricaE1.SequenceEqual(input.EmpiricaE1)
                ) && 
                (
                    this.EmpiricaEM04 == input.EmpiricaEM04 ||
                    (this.EmpiricaEM04 != null &&
                    this.EmpiricaEM04.Equals(input.EmpiricaEM04))
                ) && 
                (
                    this.EmpOfCapital == input.EmpOfCapital ||
                    (this.EmpOfCapital != null &&
                    this.EmpOfCapital.Equals(input.EmpOfCapital))
                ) && 
                (
                    this.EnquiryHistory == input.EnquiryHistory ||
                    this.EnquiryHistory != null &&
                    input.EnquiryHistory != null &&
                    this.EnquiryHistory.SequenceEqual(input.EnquiryHistory)
                ) && 
                (
                    this.EnquirySummary == input.EnquirySummary ||
                    (this.EnquirySummary != null &&
                    this.EnquirySummary.Equals(input.EnquirySummary))
                ) && 
                (
                    this.ExtendedConsumerHeaderInfoCG == input.ExtendedConsumerHeaderInfoCG ||
                    this.ExtendedConsumerHeaderInfoCG != null &&
                    input.ExtendedConsumerHeaderInfoCG != null &&
                    this.ExtendedConsumerHeaderInfoCG.SequenceEqual(input.ExtendedConsumerHeaderInfoCG)
                ) && 
                (
                    this.FirstResponse == input.FirstResponse ||
                    (this.FirstResponse != null &&
                    this.FirstResponse.Equals(input.FirstResponse))
                ) && 
                (
                    this.FinanceHeader == input.FinanceHeader ||
                    (this.FinanceHeader != null &&
                    this.FinanceHeader.Equals(input.FinanceHeader))
                ) && 
                (
                    this.FinanceData == input.FinanceData ||
                    this.FinanceData != null &&
                    input.FinanceData != null &&
                    this.FinanceData.SequenceEqual(input.FinanceData)
                ) && 
                (
                    this.FinanceDataFE == input.FinanceDataFE ||
                    this.FinanceDataFE != null &&
                    input.FinanceDataFE != null &&
                    this.FinanceDataFE.SequenceEqual(input.FinanceDataFE)
                ) && 
                (
                    this.FinanceDataFF == input.FinanceDataFF ||
                    this.FinanceDataFF != null &&
                    input.FinanceDataFF != null &&
                    this.FinanceDataFF.SequenceEqual(input.FinanceDataFF)
                ) && 
                (
                    this.FinancialRatios == input.FinancialRatios ||
                    this.FinancialRatios != null &&
                    input.FinancialRatios != null &&
                    this.FinancialRatios.SequenceEqual(input.FinancialRatios)
                ) && 
                (
                    this.FinancialStabilityIndicatorFS == input.FinancialStabilityIndicatorFS ||
                    (this.FinancialStabilityIndicatorFS != null &&
                    this.FinancialStabilityIndicatorFS.Equals(input.FinancialStabilityIndicatorFS))
                ) && 
                (
                    this.ForensicEnquiryHistoryEF == input.ForensicEnquiryHistoryEF ||
                    this.ForensicEnquiryHistoryEF != null &&
                    input.ForensicEnquiryHistoryEF != null &&
                    this.ForensicEnquiryHistoryEF.SequenceEqual(input.ForensicEnquiryHistoryEF)
                ) && 
                (
                    this.GeneralBankingInfo == input.GeneralBankingInfo ||
                    this.GeneralBankingInfo != null &&
                    input.GeneralBankingInfo != null &&
                    this.GeneralBankingInfo.SequenceEqual(input.GeneralBankingInfo)
                ) && 
                (
                    this.Header == input.Header ||
                    (this.Header != null &&
                    this.Header.Equals(input.Header))
                ) && 
                (
                    this.LinkedBusinessHeaders == input.LinkedBusinessHeaders ||
                    this.LinkedBusinessHeaders != null &&
                    input.LinkedBusinessHeaders != null &&
                    this.LinkedBusinessHeaders.SequenceEqual(input.LinkedBusinessHeaders)
                ) && 
                (
                    this.LinkedBusinessDetailLF == input.LinkedBusinessDetailLF ||
                    this.LinkedBusinessDetailLF != null &&
                    input.LinkedBusinessDetailLF != null &&
                    this.LinkedBusinessDetailLF.SequenceEqual(input.LinkedBusinessDetailLF)
                ) && 
                (
                    this.MailboxRetrieveList == input.MailboxRetrieveList ||
                    (this.MailboxRetrieveList != null &&
                    this.MailboxRetrieveList.Equals(input.MailboxRetrieveList))
                ) && 
                (
                    this.ModuleAvailabilityResponse == input.ModuleAvailabilityResponse ||
                    (this.ModuleAvailabilityResponse != null &&
                    this.ModuleAvailabilityResponse.Equals(input.ModuleAvailabilityResponse))
                ) && 
                (
                    this.Names == input.Names ||
                    (this.Names != null &&
                    this.Names.Equals(input.Names))
                ) && 
                (
                    this.NotarialBonds == input.NotarialBonds ||
                    this.NotarialBonds != null &&
                    input.NotarialBonds != null &&
                    this.NotarialBonds.SequenceEqual(input.NotarialBonds)
                ) && 
                (
                    this.Observations == input.Observations ||
                    this.Observations != null &&
                    input.Observations != null &&
                    this.Observations.SequenceEqual(input.Observations)
                ) && 
                (
                    this.ObservationCont == input.ObservationCont ||
                    this.ObservationCont != null &&
                    input.ObservationCont != null &&
                    this.ObservationCont.SequenceEqual(input.ObservationCont)
                ) && 
                (
                    this.Operations == input.Operations ||
                    this.Operations != null &&
                    input.Operations != null &&
                    this.Operations.SequenceEqual(input.Operations)
                ) && 
                (
                    this.OperationsHeader == input.OperationsHeader ||
                    this.OperationsHeader != null &&
                    input.OperationsHeader != null &&
                    this.OperationsHeader.SequenceEqual(input.OperationsHeader)
                ) && 
                (
                    this.OtherOperations == input.OtherOperations ||
                    this.OtherOperations != null &&
                    input.OtherOperations != null &&
                    this.OtherOperations.SequenceEqual(input.OtherOperations)
                ) && 
                (
                    this.Principals == input.Principals ||
                    this.Principals != null &&
                    input.Principals != null &&
                    this.Principals.SequenceEqual(input.Principals)
                ) && 
                (
                    this.PrincipalsDetailEmpirica == input.PrincipalsDetailEmpirica ||
                    this.PrincipalsDetailEmpirica != null &&
                    input.PrincipalsDetailEmpirica != null &&
                    this.PrincipalsDetailEmpirica.SequenceEqual(input.PrincipalsDetailEmpirica)
                ) && 
                (
                    this.PrincipalArchives == input.PrincipalArchives ||
                    this.PrincipalArchives != null &&
                    input.PrincipalArchives != null &&
                    this.PrincipalArchives.SequenceEqual(input.PrincipalArchives)
                ) && 
                (
                    this.PrincipalArchivesP5 == input.PrincipalArchivesP5 ||
                    this.PrincipalArchivesP5 != null &&
                    input.PrincipalArchivesP5 != null &&
                    this.PrincipalArchivesP5.SequenceEqual(input.PrincipalArchivesP5)
                ) && 
                (
                    this.PrincipalClearances == input.PrincipalClearances ||
                    this.PrincipalClearances != null &&
                    input.PrincipalClearances != null &&
                    this.PrincipalClearances.SequenceEqual(input.PrincipalClearances)
                ) && 
                (
                    this.PrincipalDeedsCA == input.PrincipalDeedsCA ||
                    this.PrincipalDeedsCA != null &&
                    input.PrincipalDeedsCA != null &&
                    this.PrincipalDeedsCA.SequenceEqual(input.PrincipalDeedsCA)
                ) && 
                (
                    this.PrincipalDeedsComprehensiveCV == input.PrincipalDeedsComprehensiveCV ||
                    this.PrincipalDeedsComprehensiveCV != null &&
                    input.PrincipalDeedsComprehensiveCV != null &&
                    this.PrincipalDeedsComprehensiveCV.SequenceEqual(input.PrincipalDeedsComprehensiveCV)
                ) && 
                (
                    this.PrincipalDeedsSummaryCO == input.PrincipalDeedsSummaryCO ||
                    this.PrincipalDeedsSummaryCO != null &&
                    input.PrincipalDeedsSummaryCO != null &&
                    this.PrincipalDeedsSummaryCO.SequenceEqual(input.PrincipalDeedsSummaryCO)
                ) && 
                (
                    this.PrincipalDeedsSummaryP8 == input.PrincipalDeedsSummaryP8 ||
                    this.PrincipalDeedsSummaryP8 != null &&
                    input.PrincipalDeedsSummaryP8 != null &&
                    this.PrincipalDeedsSummaryP8.SequenceEqual(input.PrincipalDeedsSummaryP8)
                ) && 
                (
                    this.PrincipalFirstResponse == input.PrincipalFirstResponse ||
                    (this.PrincipalFirstResponse != null &&
                    this.PrincipalFirstResponse.Equals(input.PrincipalFirstResponse))
                ) && 
                (
                    this.PrincipalIDVs == input.PrincipalIDVs ||
                    this.PrincipalIDVs != null &&
                    input.PrincipalIDVs != null &&
                    this.PrincipalIDVs.SequenceEqual(input.PrincipalIDVs)
                ) && 
                (
                    this.PrincipalLinks == input.PrincipalLinks ||
                    this.PrincipalLinks != null &&
                    input.PrincipalLinks != null &&
                    this.PrincipalLinks.SequenceEqual(input.PrincipalLinks)
                ) && 
                (
                    this.PrincipalLinkPL == input.PrincipalLinkPL ||
                    this.PrincipalLinkPL != null &&
                    input.PrincipalLinkPL != null &&
                    this.PrincipalLinkPL.SequenceEqual(input.PrincipalLinkPL)
                ) && 
                (
                    this.PrincipalNotarialBonds == input.PrincipalNotarialBonds ||
                    this.PrincipalNotarialBonds != null &&
                    input.PrincipalNotarialBonds != null &&
                    this.PrincipalNotarialBonds.SequenceEqual(input.PrincipalNotarialBonds)
                ) && 
                (
                    this.ClaimDetailsLC == input.ClaimDetailsLC ||
                    this.ClaimDetailsLC != null &&
                    input.ClaimDetailsLC != null &&
                    this.ClaimDetailsLC.SequenceEqual(input.ClaimDetailsLC)
                ) && 
                (
                    this.PolicyDetailsIF == input.PolicyDetailsIF ||
                    this.PolicyDetailsIF != null &&
                    input.PolicyDetailsIF != null &&
                    this.PolicyDetailsIF.SequenceEqual(input.PolicyDetailsIF)
                ) && 
                (
                    this.PolicyRiskAddressIA == input.PolicyRiskAddressIA ||
                    this.PolicyRiskAddressIA != null &&
                    input.PolicyRiskAddressIA != null &&
                    this.PolicyRiskAddressIA.SequenceEqual(input.PolicyRiskAddressIA)
                ) && 
                (
                    this.PolicyVehiclePV == input.PolicyVehiclePV ||
                    this.PolicyVehiclePV != null &&
                    input.PolicyVehiclePV != null &&
                    this.PolicyVehiclePV.SequenceEqual(input.PolicyVehiclePV)
                ) && 
                (
                    this.RegisteredPrincipals == input.RegisteredPrincipals ||
                    this.RegisteredPrincipals != null &&
                    input.RegisteredPrincipals != null &&
                    this.RegisteredPrincipals.SequenceEqual(input.RegisteredPrincipals)
                ) && 
                (
                    this.RegistrationDetails == input.RegistrationDetails ||
                    (this.RegistrationDetails != null &&
                    this.RegistrationDetails.Equals(input.RegistrationDetails))
                ) && 
                (
                    this.RegistrationDetailsExtended == input.RegistrationDetailsExtended ||
                    (this.RegistrationDetailsExtended != null &&
                    this.RegistrationDetailsExtended.Equals(input.RegistrationDetailsExtended))
                ) && 
                (
                    this.BusinessRescueDetail == input.BusinessRescueDetail ||
                    (this.BusinessRescueDetail != null &&
                    this.BusinessRescueDetail.Equals(input.BusinessRescueDetail))
                ) && 
                (
                    this.SearchResponse == input.SearchResponse ||
                    this.SearchResponse != null &&
                    input.SearchResponse != null &&
                    this.SearchResponse.SequenceEqual(input.SearchResponse)
                ) && 
                (
                    this.SmeAssessment == input.SmeAssessment ||
                    (this.SmeAssessment != null &&
                    this.SmeAssessment.Equals(input.SmeAssessment))
                ) && 
                (
                    this.SegmentDescriptions == input.SegmentDescriptions ||
                    this.SegmentDescriptions != null &&
                    input.SegmentDescriptions != null &&
                    this.SegmentDescriptions.SequenceEqual(input.SegmentDescriptions)
                ) && 
                (
                    this.TradeAccountSynopsis == input.TradeAccountSynopsis ||
                    this.TradeAccountSynopsis != null &&
                    input.TradeAccountSynopsis != null &&
                    this.TradeAccountSynopsis.SequenceEqual(input.TradeAccountSynopsis)
                ) && 
                (
                    this.TradeAgeAnalysis == input.TradeAgeAnalysis ||
                    this.TradeAgeAnalysis != null &&
                    input.TradeAgeAnalysis != null &&
                    this.TradeAgeAnalysis.SequenceEqual(input.TradeAgeAnalysis)
                ) && 
                (
                    this.TradeHistory == input.TradeHistory ||
                    this.TradeHistory != null &&
                    input.TradeHistory != null &&
                    this.TradeHistory.SequenceEqual(input.TradeHistory)
                ) && 
                (
                    this.TradePaymentHistory == input.TradePaymentHistory ||
                    this.TradePaymentHistory != null &&
                    input.TradePaymentHistory != null &&
                    this.TradePaymentHistory.SequenceEqual(input.TradePaymentHistory)
                ) && 
                (
                    this.TradeReferences == input.TradeReferences ||
                    this.TradeReferences != null &&
                    input.TradeReferences != null &&
                    this.TradeReferences.SequenceEqual(input.TradeReferences)
                ) && 
                (
                    this.TradeReferenceSummary == input.TradeReferenceSummary ||
                    (this.TradeReferenceSummary != null &&
                    this.TradeReferenceSummary.Equals(input.TradeReferenceSummary))
                ) && 
                (
                    this.Tradex == input.Tradex ||
                    this.Tradex != null &&
                    input.Tradex != null &&
                    this.Tradex.SequenceEqual(input.Tradex)
                ) && 
                (
                    this.TicketsStatus == input.TicketsStatus ||
                    this.TicketsStatus != null &&
                    input.TicketsStatus != null &&
                    this.TicketsStatus.SequenceEqual(input.TicketsStatus)
                ) && 
                (
                    this.UnmatchedCourtRecords == input.UnmatchedCourtRecords ||
                    this.UnmatchedCourtRecords != null &&
                    input.UnmatchedCourtRecords != null &&
                    this.UnmatchedCourtRecords.SequenceEqual(input.UnmatchedCourtRecords)
                ) && 
                (
                    this.UnmatchedDefaults == input.UnmatchedDefaults ||
                    this.UnmatchedDefaults != null &&
                    input.UnmatchedDefaults != null &&
                    this.UnmatchedDefaults.SequenceEqual(input.UnmatchedDefaults)
                ) && 
                (
                    this.UnmatchedNotarialBonds == input.UnmatchedNotarialBonds ||
                    this.UnmatchedNotarialBonds != null &&
                    input.UnmatchedNotarialBonds != null &&
                    this.UnmatchedNotarialBonds.SequenceEqual(input.UnmatchedNotarialBonds)
                ) && 
                (
                    this.Vehicles == input.Vehicles ||
                    this.Vehicles != null &&
                    input.Vehicles != null &&
                    this.Vehicles.SequenceEqual(input.Vehicles)
                ) && 
                (
                    this.VeriCheques == input.VeriCheques ||
                    this.VeriCheques != null &&
                    input.VeriCheques != null &&
                    this.VeriCheques.SequenceEqual(input.VeriCheques)
                ) && 
                (
                    this.ComplianceIndicatorLI == input.ComplianceIndicatorLI ||
                    this.ComplianceIndicatorLI != null &&
                    input.ComplianceIndicatorLI != null &&
                    this.ComplianceIndicatorLI.SequenceEqual(input.ComplianceIndicatorLI)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RawData != null)
                    hashCode = hashCode * 59 + this.RawData.GetHashCode();
                if (this.ResponseStatus != null)
                    hashCode = hashCode * 59 + this.ResponseStatus.GetHashCode();
                if (this.ErrorCode != null)
                    hashCode = hashCode * 59 + this.ErrorCode.GetHashCode();
                if (this.ErrorMessage != null)
                    hashCode = hashCode * 59 + this.ErrorMessage.GetHashCode();
                if (this.ProcessingStartDate != null)
                    hashCode = hashCode * 59 + this.ProcessingStartDate.GetHashCode();
                if (this.ProcessingTimeSecs != null)
                    hashCode = hashCode * 59 + this.ProcessingTimeSecs.GetHashCode();
                if (this.UniqueRefGuid != null)
                    hashCode = hashCode * 59 + this.UniqueRefGuid.GetHashCode();
                if (this.AccountVerificationVA != null)
                    hashCode = hashCode * 59 + this.AccountVerificationVA.GetHashCode();
                if (this.AccountVerificationVH != null)
                    hashCode = hashCode * 59 + this.AccountVerificationVH.GetHashCode();
                if (this.AggregateCW != null)
                    hashCode = hashCode * 59 + this.AggregateCW.GetHashCode();
                if (this.Affiliations != null)
                    hashCode = hashCode * 59 + this.Affiliations.GetHashCode();
                if (this.BankCodes != null)
                    hashCode = hashCode * 59 + this.BankCodes.GetHashCode();
                if (this.BankingDetailsAC != null)
                    hashCode = hashCode * 59 + this.BankingDetailsAC.GetHashCode();
                if (this.BankingDetailsSummary != null)
                    hashCode = hashCode * 59 + this.BankingDetailsSummary.GetHashCode();
                if (this.BankHistory != null)
                    hashCode = hashCode * 59 + this.BankHistory.GetHashCode();
                if (this.BankReport != null)
                    hashCode = hashCode * 59 + this.BankReport.GetHashCode();
                if (this.Branch != null)
                    hashCode = hashCode * 59 + this.Branch.GetHashCode();
                if (this.BcccX01 != null)
                    hashCode = hashCode * 59 + this.BcccX01.GetHashCode();
                if (this.BusinessAdverseSummary != null)
                    hashCode = hashCode * 59 + this.BusinessAdverseSummary.GetHashCode();
                if (this.BusinessDeedsDI != null)
                    hashCode = hashCode * 59 + this.BusinessDeedsDI.GetHashCode();
                if (this.BusinessDeedsComprehensivePB != null)
                    hashCode = hashCode * 59 + this.BusinessDeedsComprehensivePB.GetHashCode();
                if (this.BusinessDeedsSummaryDA != null)
                    hashCode = hashCode * 59 + this.BusinessDeedsSummaryDA.GetHashCode();
                if (this.BusinessDeedsComprehensivePW != null)
                    hashCode = hashCode * 59 + this.BusinessDeedsComprehensivePW.GetHashCode();
                if (this.Businessbenchmark != null)
                    hashCode = hashCode * 59 + this.Businessbenchmark.GetHashCode();
                if (this.BusinessNotarialBonds != null)
                    hashCode = hashCode * 59 + this.BusinessNotarialBonds.GetHashCode();
                if (this.BusinessPlusPrincipalsSummary != null)
                    hashCode = hashCode * 59 + this.BusinessPlusPrincipalsSummary.GetHashCode();
                if (this.CancelledTickets != null)
                    hashCode = hashCode * 59 + this.CancelledTickets.GetHashCode();
                if (this.CapitalEmployed != null)
                    hashCode = hashCode * 59 + this.CapitalEmployed.GetHashCode();
                if (this.CommercialDisputeResponse != null)
                    hashCode = hashCode * 59 + this.CommercialDisputeResponse.GetHashCode();
                if (this.ConsumerBusinessEnquiries != null)
                    hashCode = hashCode * 59 + this.ConsumerBusinessEnquiries.GetHashCode();
                if (this.ConsumerDefaults != null)
                    hashCode = hashCode * 59 + this.ConsumerDefaults.GetHashCode();
                if (this.ConsumerEnquiries != null)
                    hashCode = hashCode * 59 + this.ConsumerEnquiries.GetHashCode();
                if (this.ConsumerHeader != null)
                    hashCode = hashCode * 59 + this.ConsumerHeader.GetHashCode();
                if (this.ConsumerHeaderC1 != null)
                    hashCode = hashCode * 59 + this.ConsumerHeaderC1.GetHashCode();
                if (this.ConsumerInfoNO04 != null)
                    hashCode = hashCode * 59 + this.ConsumerInfoNO04.GetHashCode();
                if (this.ConsumerJudgements != null)
                    hashCode = hashCode * 59 + this.ConsumerJudgements.GetHashCode();
                if (this.ConsumerNotarialBonds != null)
                    hashCode = hashCode * 59 + this.ConsumerNotarialBonds.GetHashCode();
                if (this.ConsumerNotices != null)
                    hashCode = hashCode * 59 + this.ConsumerNotices.GetHashCode();
                if (this.ConsumerTraceAlerts != null)
                    hashCode = hashCode * 59 + this.ConsumerTraceAlerts.GetHashCode();
                if (this.CourtRecords != null)
                    hashCode = hashCode * 59 + this.CourtRecords.GetHashCode();
                if (this.CurrentAsset != null)
                    hashCode = hashCode * 59 + this.CurrentAsset.GetHashCode();
                if (this.CurrentLiabilities != null)
                    hashCode = hashCode * 59 + this.CurrentLiabilities.GetHashCode();
                if (this.DeedHistory != null)
                    hashCode = hashCode * 59 + this.DeedHistory.GetHashCode();
                if (this.DeedsMultipleBond != null)
                    hashCode = hashCode * 59 + this.DeedsMultipleBond.GetHashCode();
                if (this.DeedsMultipleOwnersDetail != null)
                    hashCode = hashCode * 59 + this.DeedsMultipleOwnersDetail.GetHashCode();
                if (this.Defaults != null)
                    hashCode = hashCode * 59 + this.Defaults.GetHashCode();
                if (this.DynamicRating != null)
                    hashCode = hashCode * 59 + this.DynamicRating.GetHashCode();
                if (this.EmpiricaE1 != null)
                    hashCode = hashCode * 59 + this.EmpiricaE1.GetHashCode();
                if (this.EmpiricaEM04 != null)
                    hashCode = hashCode * 59 + this.EmpiricaEM04.GetHashCode();
                if (this.EmpOfCapital != null)
                    hashCode = hashCode * 59 + this.EmpOfCapital.GetHashCode();
                if (this.EnquiryHistory != null)
                    hashCode = hashCode * 59 + this.EnquiryHistory.GetHashCode();
                if (this.EnquirySummary != null)
                    hashCode = hashCode * 59 + this.EnquirySummary.GetHashCode();
                if (this.ExtendedConsumerHeaderInfoCG != null)
                    hashCode = hashCode * 59 + this.ExtendedConsumerHeaderInfoCG.GetHashCode();
                if (this.FirstResponse != null)
                    hashCode = hashCode * 59 + this.FirstResponse.GetHashCode();
                if (this.FinanceHeader != null)
                    hashCode = hashCode * 59 + this.FinanceHeader.GetHashCode();
                if (this.FinanceData != null)
                    hashCode = hashCode * 59 + this.FinanceData.GetHashCode();
                if (this.FinanceDataFE != null)
                    hashCode = hashCode * 59 + this.FinanceDataFE.GetHashCode();
                if (this.FinanceDataFF != null)
                    hashCode = hashCode * 59 + this.FinanceDataFF.GetHashCode();
                if (this.FinancialRatios != null)
                    hashCode = hashCode * 59 + this.FinancialRatios.GetHashCode();
                if (this.FinancialStabilityIndicatorFS != null)
                    hashCode = hashCode * 59 + this.FinancialStabilityIndicatorFS.GetHashCode();
                if (this.ForensicEnquiryHistoryEF != null)
                    hashCode = hashCode * 59 + this.ForensicEnquiryHistoryEF.GetHashCode();
                if (this.GeneralBankingInfo != null)
                    hashCode = hashCode * 59 + this.GeneralBankingInfo.GetHashCode();
                if (this.Header != null)
                    hashCode = hashCode * 59 + this.Header.GetHashCode();
                if (this.LinkedBusinessHeaders != null)
                    hashCode = hashCode * 59 + this.LinkedBusinessHeaders.GetHashCode();
                if (this.LinkedBusinessDetailLF != null)
                    hashCode = hashCode * 59 + this.LinkedBusinessDetailLF.GetHashCode();
                if (this.MailboxRetrieveList != null)
                    hashCode = hashCode * 59 + this.MailboxRetrieveList.GetHashCode();
                if (this.ModuleAvailabilityResponse != null)
                    hashCode = hashCode * 59 + this.ModuleAvailabilityResponse.GetHashCode();
                if (this.Names != null)
                    hashCode = hashCode * 59 + this.Names.GetHashCode();
                if (this.NotarialBonds != null)
                    hashCode = hashCode * 59 + this.NotarialBonds.GetHashCode();
                if (this.Observations != null)
                    hashCode = hashCode * 59 + this.Observations.GetHashCode();
                if (this.ObservationCont != null)
                    hashCode = hashCode * 59 + this.ObservationCont.GetHashCode();
                if (this.Operations != null)
                    hashCode = hashCode * 59 + this.Operations.GetHashCode();
                if (this.OperationsHeader != null)
                    hashCode = hashCode * 59 + this.OperationsHeader.GetHashCode();
                if (this.OtherOperations != null)
                    hashCode = hashCode * 59 + this.OtherOperations.GetHashCode();
                if (this.Principals != null)
                    hashCode = hashCode * 59 + this.Principals.GetHashCode();
                if (this.PrincipalsDetailEmpirica != null)
                    hashCode = hashCode * 59 + this.PrincipalsDetailEmpirica.GetHashCode();
                if (this.PrincipalArchives != null)
                    hashCode = hashCode * 59 + this.PrincipalArchives.GetHashCode();
                if (this.PrincipalArchivesP5 != null)
                    hashCode = hashCode * 59 + this.PrincipalArchivesP5.GetHashCode();
                if (this.PrincipalClearances != null)
                    hashCode = hashCode * 59 + this.PrincipalClearances.GetHashCode();
                if (this.PrincipalDeedsCA != null)
                    hashCode = hashCode * 59 + this.PrincipalDeedsCA.GetHashCode();
                if (this.PrincipalDeedsComprehensiveCV != null)
                    hashCode = hashCode * 59 + this.PrincipalDeedsComprehensiveCV.GetHashCode();
                if (this.PrincipalDeedsSummaryCO != null)
                    hashCode = hashCode * 59 + this.PrincipalDeedsSummaryCO.GetHashCode();
                if (this.PrincipalDeedsSummaryP8 != null)
                    hashCode = hashCode * 59 + this.PrincipalDeedsSummaryP8.GetHashCode();
                if (this.PrincipalFirstResponse != null)
                    hashCode = hashCode * 59 + this.PrincipalFirstResponse.GetHashCode();
                if (this.PrincipalIDVs != null)
                    hashCode = hashCode * 59 + this.PrincipalIDVs.GetHashCode();
                if (this.PrincipalLinks != null)
                    hashCode = hashCode * 59 + this.PrincipalLinks.GetHashCode();
                if (this.PrincipalLinkPL != null)
                    hashCode = hashCode * 59 + this.PrincipalLinkPL.GetHashCode();
                if (this.PrincipalNotarialBonds != null)
                    hashCode = hashCode * 59 + this.PrincipalNotarialBonds.GetHashCode();
                if (this.ClaimDetailsLC != null)
                    hashCode = hashCode * 59 + this.ClaimDetailsLC.GetHashCode();
                if (this.PolicyDetailsIF != null)
                    hashCode = hashCode * 59 + this.PolicyDetailsIF.GetHashCode();
                if (this.PolicyRiskAddressIA != null)
                    hashCode = hashCode * 59 + this.PolicyRiskAddressIA.GetHashCode();
                if (this.PolicyVehiclePV != null)
                    hashCode = hashCode * 59 + this.PolicyVehiclePV.GetHashCode();
                if (this.RegisteredPrincipals != null)
                    hashCode = hashCode * 59 + this.RegisteredPrincipals.GetHashCode();
                if (this.RegistrationDetails != null)
                    hashCode = hashCode * 59 + this.RegistrationDetails.GetHashCode();
                if (this.RegistrationDetailsExtended != null)
                    hashCode = hashCode * 59 + this.RegistrationDetailsExtended.GetHashCode();
                if (this.BusinessRescueDetail != null)
                    hashCode = hashCode * 59 + this.BusinessRescueDetail.GetHashCode();
                if (this.SearchResponse != null)
                    hashCode = hashCode * 59 + this.SearchResponse.GetHashCode();
                if (this.SmeAssessment != null)
                    hashCode = hashCode * 59 + this.SmeAssessment.GetHashCode();
                if (this.SegmentDescriptions != null)
                    hashCode = hashCode * 59 + this.SegmentDescriptions.GetHashCode();
                if (this.TradeAccountSynopsis != null)
                    hashCode = hashCode * 59 + this.TradeAccountSynopsis.GetHashCode();
                if (this.TradeAgeAnalysis != null)
                    hashCode = hashCode * 59 + this.TradeAgeAnalysis.GetHashCode();
                if (this.TradeHistory != null)
                    hashCode = hashCode * 59 + this.TradeHistory.GetHashCode();
                if (this.TradePaymentHistory != null)
                    hashCode = hashCode * 59 + this.TradePaymentHistory.GetHashCode();
                if (this.TradeReferences != null)
                    hashCode = hashCode * 59 + this.TradeReferences.GetHashCode();
                if (this.TradeReferenceSummary != null)
                    hashCode = hashCode * 59 + this.TradeReferenceSummary.GetHashCode();
                if (this.Tradex != null)
                    hashCode = hashCode * 59 + this.Tradex.GetHashCode();
                if (this.TicketsStatus != null)
                    hashCode = hashCode * 59 + this.TicketsStatus.GetHashCode();
                if (this.UnmatchedCourtRecords != null)
                    hashCode = hashCode * 59 + this.UnmatchedCourtRecords.GetHashCode();
                if (this.UnmatchedDefaults != null)
                    hashCode = hashCode * 59 + this.UnmatchedDefaults.GetHashCode();
                if (this.UnmatchedNotarialBonds != null)
                    hashCode = hashCode * 59 + this.UnmatchedNotarialBonds.GetHashCode();
                if (this.Vehicles != null)
                    hashCode = hashCode * 59 + this.Vehicles.GetHashCode();
                if (this.VeriCheques != null)
                    hashCode = hashCode * 59 + this.VeriCheques.GetHashCode();
                if (this.ComplianceIndicatorLI != null)
                    hashCode = hashCode * 59 + this.ComplianceIndicatorLI.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
