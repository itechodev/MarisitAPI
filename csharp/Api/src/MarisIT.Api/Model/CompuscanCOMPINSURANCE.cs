/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// CompuscanCOMPINSURANCE
    /// </summary>
    [DataContract]
    public partial class CompuscanCOMPINSURANCE :  IEquatable<CompuscanCOMPINSURANCE>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompuscanCOMPINSURANCE" /> class.
        /// </summary>
        /// <param name="broker">broker.</param>
        /// <param name="comments">comments.</param>
        /// <param name="createddttm">createddttm.</param>
        /// <param name="insurecompany">insurecompany.</param>
        /// <param name="insurecoverval">insurecoverval.</param>
        /// <param name="insuremoninstal">insuremoninstal.</param>
        /// <param name="insuretype">insuretype.</param>
        public CompuscanCOMPINSURANCE(string broker = default(string), string comments = default(string), string createddttm = default(string), string insurecompany = default(string), string insurecoverval = default(string), string insuremoninstal = default(string), string insuretype = default(string))
        {
            this.Broker = broker;
            this.Comments = comments;
            this.Createddttm = createddttm;
            this.Insurecompany = insurecompany;
            this.Insurecoverval = insurecoverval;
            this.Insuremoninstal = insuremoninstal;
            this.Insuretype = insuretype;
            this.Broker = broker;
            this.Comments = comments;
            this.Createddttm = createddttm;
            this.Insurecompany = insurecompany;
            this.Insurecoverval = insurecoverval;
            this.Insuremoninstal = insuremoninstal;
            this.Insuretype = insuretype;
        }

        /// <summary>
        /// Gets or Sets Broker
        /// </summary>
        [DataMember(Name="broker", EmitDefaultValue=true)]
        public string Broker { get; set; }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name="comments", EmitDefaultValue=true)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets Createddttm
        /// </summary>
        [DataMember(Name="createddttm", EmitDefaultValue=true)]
        public string Createddttm { get; set; }

        /// <summary>
        /// Gets or Sets Insurecompany
        /// </summary>
        [DataMember(Name="insurecompany", EmitDefaultValue=true)]
        public string Insurecompany { get; set; }

        /// <summary>
        /// Gets or Sets Insurecoverval
        /// </summary>
        [DataMember(Name="insurecoverval", EmitDefaultValue=true)]
        public string Insurecoverval { get; set; }

        /// <summary>
        /// Gets or Sets Insuremoninstal
        /// </summary>
        [DataMember(Name="insuremoninstal", EmitDefaultValue=true)]
        public string Insuremoninstal { get; set; }

        /// <summary>
        /// Gets or Sets Insuretype
        /// </summary>
        [DataMember(Name="insuretype", EmitDefaultValue=true)]
        public string Insuretype { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompuscanCOMPINSURANCE {\n");
            sb.Append("  Broker: ").Append(Broker).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  Createddttm: ").Append(Createddttm).Append("\n");
            sb.Append("  Insurecompany: ").Append(Insurecompany).Append("\n");
            sb.Append("  Insurecoverval: ").Append(Insurecoverval).Append("\n");
            sb.Append("  Insuremoninstal: ").Append(Insuremoninstal).Append("\n");
            sb.Append("  Insuretype: ").Append(Insuretype).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompuscanCOMPINSURANCE);
        }

        /// <summary>
        /// Returns true if CompuscanCOMPINSURANCE instances are equal
        /// </summary>
        /// <param name="input">Instance of CompuscanCOMPINSURANCE to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompuscanCOMPINSURANCE input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Broker == input.Broker ||
                    (this.Broker != null &&
                    this.Broker.Equals(input.Broker))
                ) && 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.Createddttm == input.Createddttm ||
                    (this.Createddttm != null &&
                    this.Createddttm.Equals(input.Createddttm))
                ) && 
                (
                    this.Insurecompany == input.Insurecompany ||
                    (this.Insurecompany != null &&
                    this.Insurecompany.Equals(input.Insurecompany))
                ) && 
                (
                    this.Insurecoverval == input.Insurecoverval ||
                    (this.Insurecoverval != null &&
                    this.Insurecoverval.Equals(input.Insurecoverval))
                ) && 
                (
                    this.Insuremoninstal == input.Insuremoninstal ||
                    (this.Insuremoninstal != null &&
                    this.Insuremoninstal.Equals(input.Insuremoninstal))
                ) && 
                (
                    this.Insuretype == input.Insuretype ||
                    (this.Insuretype != null &&
                    this.Insuretype.Equals(input.Insuretype))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Broker != null)
                    hashCode = hashCode * 59 + this.Broker.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.Createddttm != null)
                    hashCode = hashCode * 59 + this.Createddttm.GetHashCode();
                if (this.Insurecompany != null)
                    hashCode = hashCode * 59 + this.Insurecompany.GetHashCode();
                if (this.Insurecoverval != null)
                    hashCode = hashCode * 59 + this.Insurecoverval.GetHashCode();
                if (this.Insuremoninstal != null)
                    hashCode = hashCode * 59 + this.Insuremoninstal.GetHashCode();
                if (this.Insuretype != null)
                    hashCode = hashCode * 59 + this.Insuretype.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
