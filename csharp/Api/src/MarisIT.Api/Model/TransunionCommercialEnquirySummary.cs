/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialEnquirySummary
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialEnquirySummary :  IEquatable<TransunionCommercialEnquirySummary>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialEnquirySummary" /> class.
        /// </summary>
        /// <param name="majorProduct">majorProduct.</param>
        /// <param name="last3MonthTotal">last3MonthTotal.</param>
        /// <param name="last6MonthTotal">last6MonthTotal.</param>
        /// <param name="last12MonthTotal">last12MonthTotal.</param>
        /// <param name="last24MonthTotal">last24MonthTotal.</param>
        public TransunionCommercialEnquirySummary(string majorProduct = default(string), string last3MonthTotal = default(string), string last6MonthTotal = default(string), string last12MonthTotal = default(string), string last24MonthTotal = default(string))
        {
            this.MajorProduct = majorProduct;
            this.Last3MonthTotal = last3MonthTotal;
            this.Last6MonthTotal = last6MonthTotal;
            this.Last12MonthTotal = last12MonthTotal;
            this.Last24MonthTotal = last24MonthTotal;
            this.MajorProduct = majorProduct;
            this.Last3MonthTotal = last3MonthTotal;
            this.Last6MonthTotal = last6MonthTotal;
            this.Last12MonthTotal = last12MonthTotal;
            this.Last24MonthTotal = last24MonthTotal;
        }

        /// <summary>
        /// Gets or Sets MajorProduct
        /// </summary>
        [DataMember(Name="majorProduct", EmitDefaultValue=true)]
        public string MajorProduct { get; set; }

        /// <summary>
        /// Gets or Sets Last3MonthTotal
        /// </summary>
        [DataMember(Name="last3MonthTotal", EmitDefaultValue=true)]
        public string Last3MonthTotal { get; set; }

        /// <summary>
        /// Gets or Sets Last6MonthTotal
        /// </summary>
        [DataMember(Name="last6MonthTotal", EmitDefaultValue=true)]
        public string Last6MonthTotal { get; set; }

        /// <summary>
        /// Gets or Sets Last12MonthTotal
        /// </summary>
        [DataMember(Name="last12MonthTotal", EmitDefaultValue=true)]
        public string Last12MonthTotal { get; set; }

        /// <summary>
        /// Gets or Sets Last24MonthTotal
        /// </summary>
        [DataMember(Name="last24MonthTotal", EmitDefaultValue=true)]
        public string Last24MonthTotal { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialEnquirySummary {\n");
            sb.Append("  MajorProduct: ").Append(MajorProduct).Append("\n");
            sb.Append("  Last3MonthTotal: ").Append(Last3MonthTotal).Append("\n");
            sb.Append("  Last6MonthTotal: ").Append(Last6MonthTotal).Append("\n");
            sb.Append("  Last12MonthTotal: ").Append(Last12MonthTotal).Append("\n");
            sb.Append("  Last24MonthTotal: ").Append(Last24MonthTotal).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialEnquirySummary);
        }

        /// <summary>
        /// Returns true if TransunionCommercialEnquirySummary instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialEnquirySummary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialEnquirySummary input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MajorProduct == input.MajorProduct ||
                    (this.MajorProduct != null &&
                    this.MajorProduct.Equals(input.MajorProduct))
                ) && 
                (
                    this.Last3MonthTotal == input.Last3MonthTotal ||
                    (this.Last3MonthTotal != null &&
                    this.Last3MonthTotal.Equals(input.Last3MonthTotal))
                ) && 
                (
                    this.Last6MonthTotal == input.Last6MonthTotal ||
                    (this.Last6MonthTotal != null &&
                    this.Last6MonthTotal.Equals(input.Last6MonthTotal))
                ) && 
                (
                    this.Last12MonthTotal == input.Last12MonthTotal ||
                    (this.Last12MonthTotal != null &&
                    this.Last12MonthTotal.Equals(input.Last12MonthTotal))
                ) && 
                (
                    this.Last24MonthTotal == input.Last24MonthTotal ||
                    (this.Last24MonthTotal != null &&
                    this.Last24MonthTotal.Equals(input.Last24MonthTotal))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MajorProduct != null)
                    hashCode = hashCode * 59 + this.MajorProduct.GetHashCode();
                if (this.Last3MonthTotal != null)
                    hashCode = hashCode * 59 + this.Last3MonthTotal.GetHashCode();
                if (this.Last6MonthTotal != null)
                    hashCode = hashCode * 59 + this.Last6MonthTotal.GetHashCode();
                if (this.Last12MonthTotal != null)
                    hashCode = hashCode * 59 + this.Last12MonthTotal.GetHashCode();
                if (this.Last24MonthTotal != null)
                    hashCode = hashCode * 59 + this.Last24MonthTotal.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
