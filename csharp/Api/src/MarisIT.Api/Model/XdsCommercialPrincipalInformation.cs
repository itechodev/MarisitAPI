/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// XdsCommercialPrincipalInformation
    /// </summary>
    [DataContract]
    public partial class XdsCommercialPrincipalInformation :  IEquatable<XdsCommercialPrincipalInformation>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XdsCommercialPrincipalInformation" /> class.
        /// </summary>
        /// <param name="displayText">displayText.</param>
        /// <param name="directorID">directorID.</param>
        /// <param name="idNo">idNo.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="initials">initials.</param>
        /// <param name="surname">surname.</param>
        /// <param name="secondName">secondName.</param>
        /// <param name="birthDate">birthDate.</param>
        /// <param name="directorStatusCode">directorStatusCode.</param>
        /// <param name="appointmentDate">appointmentDate.</param>
        /// <param name="designation">designation.</param>
        /// <param name="memberSize">memberSize.</param>
        /// <param name="memberControlPerc">memberControlPerc.</param>
        /// <param name="directorIndicator">directorIndicator.</param>
        /// <param name="principalType">principalType.</param>
        /// <param name="cM29Date">cM29Date.</param>
        /// <param name="isrsaResident">isrsaResident.</param>
        /// <param name="countryCode">countryCode.</param>
        /// <param name="isidVerified">isidVerified.</param>
        /// <param name="isciproConfirmed">isciproConfirmed.</param>
        /// <param name="physicalAddress">physicalAddress.</param>
        /// <param name="postalAddress">postalAddress.</param>
        /// <param name="name">name.</param>
        /// <param name="homeTelephoneNo">homeTelephoneNo.</param>
        /// <param name="workTelephoneNo">workTelephoneNo.</param>
        /// <param name="cellularNo">cellularNo.</param>
        /// <param name="emailAddress">emailAddress.</param>
        /// <param name="age">age.</param>
        /// <param name="yearsWithBusiness">yearsWithBusiness.</param>
        /// <param name="fullname">fullname.</param>
        /// <param name="surnamePrevious">surnamePrevious.</param>
        /// <param name="directorStatusDate">directorStatusDate.</param>
        /// <param name="memberControlType">memberControlType.</param>
        /// <param name="executor">executor.</param>
        /// <param name="executorAppointmentDate">executorAppointmentDate.</param>
        /// <param name="estate">estate.</param>
        /// <param name="resignationDate">resignationDate.</param>
        /// <param name="fullName">fullName.</param>
        /// <param name="yearsWithBus">yearsWithBus.</param>
        public XdsCommercialPrincipalInformation(string displayText = default(string), string directorID = default(string), string idNo = default(string), string firstName = default(string), string initials = default(string), string surname = default(string), string secondName = default(string), string birthDate = default(string), string directorStatusCode = default(string), string appointmentDate = default(string), string designation = default(string), string memberSize = default(string), string memberControlPerc = default(string), string directorIndicator = default(string), string principalType = default(string), string cM29Date = default(string), string isrsaResident = default(string), string countryCode = default(string), string isidVerified = default(string), string isciproConfirmed = default(string), string physicalAddress = default(string), string postalAddress = default(string), string name = default(string), string homeTelephoneNo = default(string), string workTelephoneNo = default(string), string cellularNo = default(string), string emailAddress = default(string), string age = default(string), string yearsWithBusiness = default(string), string fullname = default(string), string surnamePrevious = default(string), string directorStatusDate = default(string), string memberControlType = default(string), string executor = default(string), string executorAppointmentDate = default(string), string estate = default(string), string resignationDate = default(string), string fullName = default(string), string yearsWithBus = default(string))
        {
            this.DisplayText = displayText;
            this.DirectorID = directorID;
            this.IdNo = idNo;
            this.FirstName = firstName;
            this.Initials = initials;
            this.Surname = surname;
            this.SecondName = secondName;
            this.BirthDate = birthDate;
            this.DirectorStatusCode = directorStatusCode;
            this.AppointmentDate = appointmentDate;
            this.Designation = designation;
            this.MemberSize = memberSize;
            this.MemberControlPerc = memberControlPerc;
            this.DirectorIndicator = directorIndicator;
            this.PrincipalType = principalType;
            this.CM29Date = cM29Date;
            this.IsrsaResident = isrsaResident;
            this.CountryCode = countryCode;
            this.IsidVerified = isidVerified;
            this.IsciproConfirmed = isciproConfirmed;
            this.PhysicalAddress = physicalAddress;
            this.PostalAddress = postalAddress;
            this.Name = name;
            this.HomeTelephoneNo = homeTelephoneNo;
            this.WorkTelephoneNo = workTelephoneNo;
            this.CellularNo = cellularNo;
            this.EmailAddress = emailAddress;
            this.Age = age;
            this.YearsWithBusiness = yearsWithBusiness;
            this.Fullname = fullname;
            this.SurnamePrevious = surnamePrevious;
            this.DirectorStatusDate = directorStatusDate;
            this.MemberControlType = memberControlType;
            this.Executor = executor;
            this.ExecutorAppointmentDate = executorAppointmentDate;
            this.Estate = estate;
            this.ResignationDate = resignationDate;
            this.FullName = fullName;
            this.YearsWithBus = yearsWithBus;
            this.DisplayText = displayText;
            this.DirectorID = directorID;
            this.IdNo = idNo;
            this.FirstName = firstName;
            this.Initials = initials;
            this.Surname = surname;
            this.SecondName = secondName;
            this.BirthDate = birthDate;
            this.DirectorStatusCode = directorStatusCode;
            this.AppointmentDate = appointmentDate;
            this.Designation = designation;
            this.MemberSize = memberSize;
            this.MemberControlPerc = memberControlPerc;
            this.DirectorIndicator = directorIndicator;
            this.PrincipalType = principalType;
            this.CM29Date = cM29Date;
            this.IsrsaResident = isrsaResident;
            this.CountryCode = countryCode;
            this.IsidVerified = isidVerified;
            this.IsciproConfirmed = isciproConfirmed;
            this.PhysicalAddress = physicalAddress;
            this.PostalAddress = postalAddress;
            this.Name = name;
            this.HomeTelephoneNo = homeTelephoneNo;
            this.WorkTelephoneNo = workTelephoneNo;
            this.CellularNo = cellularNo;
            this.EmailAddress = emailAddress;
            this.Age = age;
            this.YearsWithBusiness = yearsWithBusiness;
            this.Fullname = fullname;
            this.SurnamePrevious = surnamePrevious;
            this.DirectorStatusDate = directorStatusDate;
            this.MemberControlType = memberControlType;
            this.Executor = executor;
            this.ExecutorAppointmentDate = executorAppointmentDate;
            this.Estate = estate;
            this.ResignationDate = resignationDate;
            this.FullName = fullName;
            this.YearsWithBus = yearsWithBus;
        }

        /// <summary>
        /// Gets or Sets DisplayText
        /// </summary>
        [DataMember(Name="displayText", EmitDefaultValue=true)]
        public string DisplayText { get; set; }

        /// <summary>
        /// Gets or Sets DirectorID
        /// </summary>
        [DataMember(Name="directorID", EmitDefaultValue=true)]
        public string DirectorID { get; set; }

        /// <summary>
        /// Gets or Sets IdNo
        /// </summary>
        [DataMember(Name="idNo", EmitDefaultValue=true)]
        public string IdNo { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name="firstName", EmitDefaultValue=true)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets Initials
        /// </summary>
        [DataMember(Name="initials", EmitDefaultValue=true)]
        public string Initials { get; set; }

        /// <summary>
        /// Gets or Sets Surname
        /// </summary>
        [DataMember(Name="surname", EmitDefaultValue=true)]
        public string Surname { get; set; }

        /// <summary>
        /// Gets or Sets SecondName
        /// </summary>
        [DataMember(Name="secondName", EmitDefaultValue=true)]
        public string SecondName { get; set; }

        /// <summary>
        /// Gets or Sets BirthDate
        /// </summary>
        [DataMember(Name="birthDate", EmitDefaultValue=true)]
        public string BirthDate { get; set; }

        /// <summary>
        /// Gets or Sets DirectorStatusCode
        /// </summary>
        [DataMember(Name="directorStatusCode", EmitDefaultValue=true)]
        public string DirectorStatusCode { get; set; }

        /// <summary>
        /// Gets or Sets AppointmentDate
        /// </summary>
        [DataMember(Name="appointmentDate", EmitDefaultValue=true)]
        public string AppointmentDate { get; set; }

        /// <summary>
        /// Gets or Sets Designation
        /// </summary>
        [DataMember(Name="designation", EmitDefaultValue=true)]
        public string Designation { get; set; }

        /// <summary>
        /// Gets or Sets MemberSize
        /// </summary>
        [DataMember(Name="memberSize", EmitDefaultValue=true)]
        public string MemberSize { get; set; }

        /// <summary>
        /// Gets or Sets MemberControlPerc
        /// </summary>
        [DataMember(Name="memberControlPerc", EmitDefaultValue=true)]
        public string MemberControlPerc { get; set; }

        /// <summary>
        /// Gets or Sets DirectorIndicator
        /// </summary>
        [DataMember(Name="directorIndicator", EmitDefaultValue=true)]
        public string DirectorIndicator { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalType
        /// </summary>
        [DataMember(Name="principalType", EmitDefaultValue=true)]
        public string PrincipalType { get; set; }

        /// <summary>
        /// Gets or Sets CM29Date
        /// </summary>
        [DataMember(Name="cM29Date", EmitDefaultValue=true)]
        public string CM29Date { get; set; }

        /// <summary>
        /// Gets or Sets IsrsaResident
        /// </summary>
        [DataMember(Name="isrsaResident", EmitDefaultValue=true)]
        public string IsrsaResident { get; set; }

        /// <summary>
        /// Gets or Sets CountryCode
        /// </summary>
        [DataMember(Name="countryCode", EmitDefaultValue=true)]
        public string CountryCode { get; set; }

        /// <summary>
        /// Gets or Sets IsidVerified
        /// </summary>
        [DataMember(Name="isidVerified", EmitDefaultValue=true)]
        public string IsidVerified { get; set; }

        /// <summary>
        /// Gets or Sets IsciproConfirmed
        /// </summary>
        [DataMember(Name="isciproConfirmed", EmitDefaultValue=true)]
        public string IsciproConfirmed { get; set; }

        /// <summary>
        /// Gets or Sets PhysicalAddress
        /// </summary>
        [DataMember(Name="physicalAddress", EmitDefaultValue=true)]
        public string PhysicalAddress { get; set; }

        /// <summary>
        /// Gets or Sets PostalAddress
        /// </summary>
        [DataMember(Name="postalAddress", EmitDefaultValue=true)]
        public string PostalAddress { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets HomeTelephoneNo
        /// </summary>
        [DataMember(Name="homeTelephoneNo", EmitDefaultValue=true)]
        public string HomeTelephoneNo { get; set; }

        /// <summary>
        /// Gets or Sets WorkTelephoneNo
        /// </summary>
        [DataMember(Name="workTelephoneNo", EmitDefaultValue=true)]
        public string WorkTelephoneNo { get; set; }

        /// <summary>
        /// Gets or Sets CellularNo
        /// </summary>
        [DataMember(Name="cellularNo", EmitDefaultValue=true)]
        public string CellularNo { get; set; }

        /// <summary>
        /// Gets or Sets EmailAddress
        /// </summary>
        [DataMember(Name="emailAddress", EmitDefaultValue=true)]
        public string EmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets Age
        /// </summary>
        [DataMember(Name="age", EmitDefaultValue=true)]
        public string Age { get; set; }

        /// <summary>
        /// Gets or Sets YearsWithBusiness
        /// </summary>
        [DataMember(Name="yearsWithBusiness", EmitDefaultValue=true)]
        public string YearsWithBusiness { get; set; }

        /// <summary>
        /// Gets or Sets Fullname
        /// </summary>
        [DataMember(Name="fullname", EmitDefaultValue=true)]
        public string Fullname { get; set; }

        /// <summary>
        /// Gets or Sets SurnamePrevious
        /// </summary>
        [DataMember(Name="surnamePrevious", EmitDefaultValue=true)]
        public string SurnamePrevious { get; set; }

        /// <summary>
        /// Gets or Sets DirectorStatusDate
        /// </summary>
        [DataMember(Name="directorStatusDate", EmitDefaultValue=true)]
        public string DirectorStatusDate { get; set; }

        /// <summary>
        /// Gets or Sets MemberControlType
        /// </summary>
        [DataMember(Name="memberControlType", EmitDefaultValue=true)]
        public string MemberControlType { get; set; }

        /// <summary>
        /// Gets or Sets Executor
        /// </summary>
        [DataMember(Name="executor", EmitDefaultValue=true)]
        public string Executor { get; set; }

        /// <summary>
        /// Gets or Sets ExecutorAppointmentDate
        /// </summary>
        [DataMember(Name="executorAppointmentDate", EmitDefaultValue=true)]
        public string ExecutorAppointmentDate { get; set; }

        /// <summary>
        /// Gets or Sets Estate
        /// </summary>
        [DataMember(Name="estate", EmitDefaultValue=true)]
        public string Estate { get; set; }

        /// <summary>
        /// Gets or Sets ResignationDate
        /// </summary>
        [DataMember(Name="resignationDate", EmitDefaultValue=true)]
        public string ResignationDate { get; set; }

        /// <summary>
        /// Gets or Sets FullName
        /// </summary>
        [DataMember(Name="fullName", EmitDefaultValue=true)]
        public string FullName { get; set; }

        /// <summary>
        /// Gets or Sets YearsWithBus
        /// </summary>
        [DataMember(Name="yearsWithBus", EmitDefaultValue=true)]
        public string YearsWithBus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class XdsCommercialPrincipalInformation {\n");
            sb.Append("  DisplayText: ").Append(DisplayText).Append("\n");
            sb.Append("  DirectorID: ").Append(DirectorID).Append("\n");
            sb.Append("  IdNo: ").Append(IdNo).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  Initials: ").Append(Initials).Append("\n");
            sb.Append("  Surname: ").Append(Surname).Append("\n");
            sb.Append("  SecondName: ").Append(SecondName).Append("\n");
            sb.Append("  BirthDate: ").Append(BirthDate).Append("\n");
            sb.Append("  DirectorStatusCode: ").Append(DirectorStatusCode).Append("\n");
            sb.Append("  AppointmentDate: ").Append(AppointmentDate).Append("\n");
            sb.Append("  Designation: ").Append(Designation).Append("\n");
            sb.Append("  MemberSize: ").Append(MemberSize).Append("\n");
            sb.Append("  MemberControlPerc: ").Append(MemberControlPerc).Append("\n");
            sb.Append("  DirectorIndicator: ").Append(DirectorIndicator).Append("\n");
            sb.Append("  PrincipalType: ").Append(PrincipalType).Append("\n");
            sb.Append("  CM29Date: ").Append(CM29Date).Append("\n");
            sb.Append("  IsrsaResident: ").Append(IsrsaResident).Append("\n");
            sb.Append("  CountryCode: ").Append(CountryCode).Append("\n");
            sb.Append("  IsidVerified: ").Append(IsidVerified).Append("\n");
            sb.Append("  IsciproConfirmed: ").Append(IsciproConfirmed).Append("\n");
            sb.Append("  PhysicalAddress: ").Append(PhysicalAddress).Append("\n");
            sb.Append("  PostalAddress: ").Append(PostalAddress).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  HomeTelephoneNo: ").Append(HomeTelephoneNo).Append("\n");
            sb.Append("  WorkTelephoneNo: ").Append(WorkTelephoneNo).Append("\n");
            sb.Append("  CellularNo: ").Append(CellularNo).Append("\n");
            sb.Append("  EmailAddress: ").Append(EmailAddress).Append("\n");
            sb.Append("  Age: ").Append(Age).Append("\n");
            sb.Append("  YearsWithBusiness: ").Append(YearsWithBusiness).Append("\n");
            sb.Append("  Fullname: ").Append(Fullname).Append("\n");
            sb.Append("  SurnamePrevious: ").Append(SurnamePrevious).Append("\n");
            sb.Append("  DirectorStatusDate: ").Append(DirectorStatusDate).Append("\n");
            sb.Append("  MemberControlType: ").Append(MemberControlType).Append("\n");
            sb.Append("  Executor: ").Append(Executor).Append("\n");
            sb.Append("  ExecutorAppointmentDate: ").Append(ExecutorAppointmentDate).Append("\n");
            sb.Append("  Estate: ").Append(Estate).Append("\n");
            sb.Append("  ResignationDate: ").Append(ResignationDate).Append("\n");
            sb.Append("  FullName: ").Append(FullName).Append("\n");
            sb.Append("  YearsWithBus: ").Append(YearsWithBus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as XdsCommercialPrincipalInformation);
        }

        /// <summary>
        /// Returns true if XdsCommercialPrincipalInformation instances are equal
        /// </summary>
        /// <param name="input">Instance of XdsCommercialPrincipalInformation to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(XdsCommercialPrincipalInformation input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DisplayText == input.DisplayText ||
                    (this.DisplayText != null &&
                    this.DisplayText.Equals(input.DisplayText))
                ) && 
                (
                    this.DirectorID == input.DirectorID ||
                    (this.DirectorID != null &&
                    this.DirectorID.Equals(input.DirectorID))
                ) && 
                (
                    this.IdNo == input.IdNo ||
                    (this.IdNo != null &&
                    this.IdNo.Equals(input.IdNo))
                ) && 
                (
                    this.FirstName == input.FirstName ||
                    (this.FirstName != null &&
                    this.FirstName.Equals(input.FirstName))
                ) && 
                (
                    this.Initials == input.Initials ||
                    (this.Initials != null &&
                    this.Initials.Equals(input.Initials))
                ) && 
                (
                    this.Surname == input.Surname ||
                    (this.Surname != null &&
                    this.Surname.Equals(input.Surname))
                ) && 
                (
                    this.SecondName == input.SecondName ||
                    (this.SecondName != null &&
                    this.SecondName.Equals(input.SecondName))
                ) && 
                (
                    this.BirthDate == input.BirthDate ||
                    (this.BirthDate != null &&
                    this.BirthDate.Equals(input.BirthDate))
                ) && 
                (
                    this.DirectorStatusCode == input.DirectorStatusCode ||
                    (this.DirectorStatusCode != null &&
                    this.DirectorStatusCode.Equals(input.DirectorStatusCode))
                ) && 
                (
                    this.AppointmentDate == input.AppointmentDate ||
                    (this.AppointmentDate != null &&
                    this.AppointmentDate.Equals(input.AppointmentDate))
                ) && 
                (
                    this.Designation == input.Designation ||
                    (this.Designation != null &&
                    this.Designation.Equals(input.Designation))
                ) && 
                (
                    this.MemberSize == input.MemberSize ||
                    (this.MemberSize != null &&
                    this.MemberSize.Equals(input.MemberSize))
                ) && 
                (
                    this.MemberControlPerc == input.MemberControlPerc ||
                    (this.MemberControlPerc != null &&
                    this.MemberControlPerc.Equals(input.MemberControlPerc))
                ) && 
                (
                    this.DirectorIndicator == input.DirectorIndicator ||
                    (this.DirectorIndicator != null &&
                    this.DirectorIndicator.Equals(input.DirectorIndicator))
                ) && 
                (
                    this.PrincipalType == input.PrincipalType ||
                    (this.PrincipalType != null &&
                    this.PrincipalType.Equals(input.PrincipalType))
                ) && 
                (
                    this.CM29Date == input.CM29Date ||
                    (this.CM29Date != null &&
                    this.CM29Date.Equals(input.CM29Date))
                ) && 
                (
                    this.IsrsaResident == input.IsrsaResident ||
                    (this.IsrsaResident != null &&
                    this.IsrsaResident.Equals(input.IsrsaResident))
                ) && 
                (
                    this.CountryCode == input.CountryCode ||
                    (this.CountryCode != null &&
                    this.CountryCode.Equals(input.CountryCode))
                ) && 
                (
                    this.IsidVerified == input.IsidVerified ||
                    (this.IsidVerified != null &&
                    this.IsidVerified.Equals(input.IsidVerified))
                ) && 
                (
                    this.IsciproConfirmed == input.IsciproConfirmed ||
                    (this.IsciproConfirmed != null &&
                    this.IsciproConfirmed.Equals(input.IsciproConfirmed))
                ) && 
                (
                    this.PhysicalAddress == input.PhysicalAddress ||
                    (this.PhysicalAddress != null &&
                    this.PhysicalAddress.Equals(input.PhysicalAddress))
                ) && 
                (
                    this.PostalAddress == input.PostalAddress ||
                    (this.PostalAddress != null &&
                    this.PostalAddress.Equals(input.PostalAddress))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.HomeTelephoneNo == input.HomeTelephoneNo ||
                    (this.HomeTelephoneNo != null &&
                    this.HomeTelephoneNo.Equals(input.HomeTelephoneNo))
                ) && 
                (
                    this.WorkTelephoneNo == input.WorkTelephoneNo ||
                    (this.WorkTelephoneNo != null &&
                    this.WorkTelephoneNo.Equals(input.WorkTelephoneNo))
                ) && 
                (
                    this.CellularNo == input.CellularNo ||
                    (this.CellularNo != null &&
                    this.CellularNo.Equals(input.CellularNo))
                ) && 
                (
                    this.EmailAddress == input.EmailAddress ||
                    (this.EmailAddress != null &&
                    this.EmailAddress.Equals(input.EmailAddress))
                ) && 
                (
                    this.Age == input.Age ||
                    (this.Age != null &&
                    this.Age.Equals(input.Age))
                ) && 
                (
                    this.YearsWithBusiness == input.YearsWithBusiness ||
                    (this.YearsWithBusiness != null &&
                    this.YearsWithBusiness.Equals(input.YearsWithBusiness))
                ) && 
                (
                    this.Fullname == input.Fullname ||
                    (this.Fullname != null &&
                    this.Fullname.Equals(input.Fullname))
                ) && 
                (
                    this.SurnamePrevious == input.SurnamePrevious ||
                    (this.SurnamePrevious != null &&
                    this.SurnamePrevious.Equals(input.SurnamePrevious))
                ) && 
                (
                    this.DirectorStatusDate == input.DirectorStatusDate ||
                    (this.DirectorStatusDate != null &&
                    this.DirectorStatusDate.Equals(input.DirectorStatusDate))
                ) && 
                (
                    this.MemberControlType == input.MemberControlType ||
                    (this.MemberControlType != null &&
                    this.MemberControlType.Equals(input.MemberControlType))
                ) && 
                (
                    this.Executor == input.Executor ||
                    (this.Executor != null &&
                    this.Executor.Equals(input.Executor))
                ) && 
                (
                    this.ExecutorAppointmentDate == input.ExecutorAppointmentDate ||
                    (this.ExecutorAppointmentDate != null &&
                    this.ExecutorAppointmentDate.Equals(input.ExecutorAppointmentDate))
                ) && 
                (
                    this.Estate == input.Estate ||
                    (this.Estate != null &&
                    this.Estate.Equals(input.Estate))
                ) && 
                (
                    this.ResignationDate == input.ResignationDate ||
                    (this.ResignationDate != null &&
                    this.ResignationDate.Equals(input.ResignationDate))
                ) && 
                (
                    this.FullName == input.FullName ||
                    (this.FullName != null &&
                    this.FullName.Equals(input.FullName))
                ) && 
                (
                    this.YearsWithBus == input.YearsWithBus ||
                    (this.YearsWithBus != null &&
                    this.YearsWithBus.Equals(input.YearsWithBus))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DisplayText != null)
                    hashCode = hashCode * 59 + this.DisplayText.GetHashCode();
                if (this.DirectorID != null)
                    hashCode = hashCode * 59 + this.DirectorID.GetHashCode();
                if (this.IdNo != null)
                    hashCode = hashCode * 59 + this.IdNo.GetHashCode();
                if (this.FirstName != null)
                    hashCode = hashCode * 59 + this.FirstName.GetHashCode();
                if (this.Initials != null)
                    hashCode = hashCode * 59 + this.Initials.GetHashCode();
                if (this.Surname != null)
                    hashCode = hashCode * 59 + this.Surname.GetHashCode();
                if (this.SecondName != null)
                    hashCode = hashCode * 59 + this.SecondName.GetHashCode();
                if (this.BirthDate != null)
                    hashCode = hashCode * 59 + this.BirthDate.GetHashCode();
                if (this.DirectorStatusCode != null)
                    hashCode = hashCode * 59 + this.DirectorStatusCode.GetHashCode();
                if (this.AppointmentDate != null)
                    hashCode = hashCode * 59 + this.AppointmentDate.GetHashCode();
                if (this.Designation != null)
                    hashCode = hashCode * 59 + this.Designation.GetHashCode();
                if (this.MemberSize != null)
                    hashCode = hashCode * 59 + this.MemberSize.GetHashCode();
                if (this.MemberControlPerc != null)
                    hashCode = hashCode * 59 + this.MemberControlPerc.GetHashCode();
                if (this.DirectorIndicator != null)
                    hashCode = hashCode * 59 + this.DirectorIndicator.GetHashCode();
                if (this.PrincipalType != null)
                    hashCode = hashCode * 59 + this.PrincipalType.GetHashCode();
                if (this.CM29Date != null)
                    hashCode = hashCode * 59 + this.CM29Date.GetHashCode();
                if (this.IsrsaResident != null)
                    hashCode = hashCode * 59 + this.IsrsaResident.GetHashCode();
                if (this.CountryCode != null)
                    hashCode = hashCode * 59 + this.CountryCode.GetHashCode();
                if (this.IsidVerified != null)
                    hashCode = hashCode * 59 + this.IsidVerified.GetHashCode();
                if (this.IsciproConfirmed != null)
                    hashCode = hashCode * 59 + this.IsciproConfirmed.GetHashCode();
                if (this.PhysicalAddress != null)
                    hashCode = hashCode * 59 + this.PhysicalAddress.GetHashCode();
                if (this.PostalAddress != null)
                    hashCode = hashCode * 59 + this.PostalAddress.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.HomeTelephoneNo != null)
                    hashCode = hashCode * 59 + this.HomeTelephoneNo.GetHashCode();
                if (this.WorkTelephoneNo != null)
                    hashCode = hashCode * 59 + this.WorkTelephoneNo.GetHashCode();
                if (this.CellularNo != null)
                    hashCode = hashCode * 59 + this.CellularNo.GetHashCode();
                if (this.EmailAddress != null)
                    hashCode = hashCode * 59 + this.EmailAddress.GetHashCode();
                if (this.Age != null)
                    hashCode = hashCode * 59 + this.Age.GetHashCode();
                if (this.YearsWithBusiness != null)
                    hashCode = hashCode * 59 + this.YearsWithBusiness.GetHashCode();
                if (this.Fullname != null)
                    hashCode = hashCode * 59 + this.Fullname.GetHashCode();
                if (this.SurnamePrevious != null)
                    hashCode = hashCode * 59 + this.SurnamePrevious.GetHashCode();
                if (this.DirectorStatusDate != null)
                    hashCode = hashCode * 59 + this.DirectorStatusDate.GetHashCode();
                if (this.MemberControlType != null)
                    hashCode = hashCode * 59 + this.MemberControlType.GetHashCode();
                if (this.Executor != null)
                    hashCode = hashCode * 59 + this.Executor.GetHashCode();
                if (this.ExecutorAppointmentDate != null)
                    hashCode = hashCode * 59 + this.ExecutorAppointmentDate.GetHashCode();
                if (this.Estate != null)
                    hashCode = hashCode * 59 + this.Estate.GetHashCode();
                if (this.ResignationDate != null)
                    hashCode = hashCode * 59 + this.ResignationDate.GetHashCode();
                if (this.FullName != null)
                    hashCode = hashCode * 59 + this.FullName.GetHashCode();
                if (this.YearsWithBus != null)
                    hashCode = hashCode * 59 + this.YearsWithBus.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
