/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// WindeedCipcAssociatedCompany
    /// </summary>
    [DataContract]
    public partial class WindeedCipcAssociatedCompany :  IEquatable<WindeedCipcAssociatedCompany>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WindeedCipcAssociatedCompany" /> class.
        /// </summary>
        /// <param name="dbKey">dbKey.</param>
        /// <param name="name">name.</param>
        /// <param name="registrationNumber">registrationNumber.</param>
        /// <param name="directorStatus">directorStatus.</param>
        /// <param name="directorType">directorType.</param>
        /// <param name="appointmentDate">appointmentDate.</param>
        /// <param name="resignationDate">resignationDate.</param>
        /// <param name="profession">profession.</param>
        /// <param name="executor">executor.</param>
        /// <param name="executorAppointmentDate">executorAppointmentDate.</param>
        /// <param name="trusteeName">trusteeName.</param>
        /// <param name="estate">estate.</param>
        /// <param name="designation">designation.</param>
        /// <param name="occupation">occupation.</param>
        /// <param name="natureOfChange">natureOfChange.</param>
        /// <param name="contributionType">contributionType.</param>
        /// <param name="contributionAmount">contributionAmount.</param>
        /// <param name="contributionPercentage">contributionPercentage.</param>
        /// <param name="directorFormLodgedDate">directorFormLodgedDate.</param>
        /// <param name="directorFormRecievedDate">directorFormRecievedDate.</param>
        /// <param name="foundingStatementDate">foundingStatementDate.</param>
        /// <param name="statusDate">statusDate.</param>
        /// <param name="postalAddress">postalAddress.</param>
        /// <param name="residentialAddress">residentialAddress.</param>
        /// <param name="businessAddress">businessAddress.</param>
        /// <param name="companyStatus">companyStatus.</param>
        public WindeedCipcAssociatedCompany(int dbKey = default(int), string name = default(string), WindeedCipcRegistrationNumber registrationNumber = default(WindeedCipcRegistrationNumber), WindeedCipcCipcLookup directorStatus = default(WindeedCipcCipcLookup), WindeedCipcCipcLookup directorType = default(WindeedCipcCipcLookup), DateTime? appointmentDate = default(DateTime?), DateTime? resignationDate = default(DateTime?), string profession = default(string), string executor = default(string), DateTime? executorAppointmentDate = default(DateTime?), string trusteeName = default(string), string estate = default(string), WindeedCipcCipcLookup designation = default(WindeedCipcCipcLookup), string occupation = default(string), string natureOfChange = default(string), string contributionType = default(string), double? contributionAmount = default(double?), double? contributionPercentage = default(double?), DateTime? directorFormLodgedDate = default(DateTime?), DateTime? directorFormRecievedDate = default(DateTime?), DateTime? foundingStatementDate = default(DateTime?), DateTime? statusDate = default(DateTime?), WindeedCipcBasicAddress postalAddress = default(WindeedCipcBasicAddress), WindeedCipcBasicAddress residentialAddress = default(WindeedCipcBasicAddress), WindeedCipcBasicAddress businessAddress = default(WindeedCipcBasicAddress), WindeedCipcCipcLookup companyStatus = default(WindeedCipcCipcLookup))
        {
            this.Name = name;
            this.AppointmentDate = appointmentDate;
            this.ResignationDate = resignationDate;
            this.Profession = profession;
            this.Executor = executor;
            this.ExecutorAppointmentDate = executorAppointmentDate;
            this.TrusteeName = trusteeName;
            this.Estate = estate;
            this.Occupation = occupation;
            this.NatureOfChange = natureOfChange;
            this.ContributionType = contributionType;
            this.ContributionAmount = contributionAmount;
            this.ContributionPercentage = contributionPercentage;
            this.DirectorFormLodgedDate = directorFormLodgedDate;
            this.DirectorFormRecievedDate = directorFormRecievedDate;
            this.FoundingStatementDate = foundingStatementDate;
            this.StatusDate = statusDate;
            this.DbKey = dbKey;
            this.Name = name;
            this.RegistrationNumber = registrationNumber;
            this.DirectorStatus = directorStatus;
            this.DirectorType = directorType;
            this.AppointmentDate = appointmentDate;
            this.ResignationDate = resignationDate;
            this.Profession = profession;
            this.Executor = executor;
            this.ExecutorAppointmentDate = executorAppointmentDate;
            this.TrusteeName = trusteeName;
            this.Estate = estate;
            this.Designation = designation;
            this.Occupation = occupation;
            this.NatureOfChange = natureOfChange;
            this.ContributionType = contributionType;
            this.ContributionAmount = contributionAmount;
            this.ContributionPercentage = contributionPercentage;
            this.DirectorFormLodgedDate = directorFormLodgedDate;
            this.DirectorFormRecievedDate = directorFormRecievedDate;
            this.FoundingStatementDate = foundingStatementDate;
            this.StatusDate = statusDate;
            this.PostalAddress = postalAddress;
            this.ResidentialAddress = residentialAddress;
            this.BusinessAddress = businessAddress;
            this.CompanyStatus = companyStatus;
        }

        /// <summary>
        /// Gets or Sets DbKey
        /// </summary>
        [DataMember(Name="dbKey", EmitDefaultValue=false)]
        public int DbKey { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets RegistrationNumber
        /// </summary>
        [DataMember(Name="registrationNumber", EmitDefaultValue=false)]
        public WindeedCipcRegistrationNumber RegistrationNumber { get; set; }

        /// <summary>
        /// Gets or Sets DirectorStatus
        /// </summary>
        [DataMember(Name="directorStatus", EmitDefaultValue=false)]
        public WindeedCipcCipcLookup DirectorStatus { get; set; }

        /// <summary>
        /// Gets or Sets DirectorType
        /// </summary>
        [DataMember(Name="directorType", EmitDefaultValue=false)]
        public WindeedCipcCipcLookup DirectorType { get; set; }

        /// <summary>
        /// Gets or Sets AppointmentDate
        /// </summary>
        [DataMember(Name="appointmentDate", EmitDefaultValue=true)]
        public DateTime? AppointmentDate { get; set; }

        /// <summary>
        /// Gets or Sets ResignationDate
        /// </summary>
        [DataMember(Name="resignationDate", EmitDefaultValue=true)]
        public DateTime? ResignationDate { get; set; }

        /// <summary>
        /// Gets or Sets Profession
        /// </summary>
        [DataMember(Name="profession", EmitDefaultValue=true)]
        public string Profession { get; set; }

        /// <summary>
        /// Gets or Sets Executor
        /// </summary>
        [DataMember(Name="executor", EmitDefaultValue=true)]
        public string Executor { get; set; }

        /// <summary>
        /// Gets or Sets ExecutorAppointmentDate
        /// </summary>
        [DataMember(Name="executorAppointmentDate", EmitDefaultValue=true)]
        public DateTime? ExecutorAppointmentDate { get; set; }

        /// <summary>
        /// Gets or Sets TrusteeName
        /// </summary>
        [DataMember(Name="trusteeName", EmitDefaultValue=true)]
        public string TrusteeName { get; set; }

        /// <summary>
        /// Gets or Sets Estate
        /// </summary>
        [DataMember(Name="estate", EmitDefaultValue=true)]
        public string Estate { get; set; }

        /// <summary>
        /// Gets or Sets Designation
        /// </summary>
        [DataMember(Name="designation", EmitDefaultValue=false)]
        public WindeedCipcCipcLookup Designation { get; set; }

        /// <summary>
        /// Gets or Sets Occupation
        /// </summary>
        [DataMember(Name="occupation", EmitDefaultValue=true)]
        public string Occupation { get; set; }

        /// <summary>
        /// Gets or Sets NatureOfChange
        /// </summary>
        [DataMember(Name="natureOfChange", EmitDefaultValue=true)]
        public string NatureOfChange { get; set; }

        /// <summary>
        /// Gets or Sets ContributionType
        /// </summary>
        [DataMember(Name="contributionType", EmitDefaultValue=true)]
        public string ContributionType { get; set; }

        /// <summary>
        /// Gets or Sets ContributionAmount
        /// </summary>
        [DataMember(Name="contributionAmount", EmitDefaultValue=true)]
        public double? ContributionAmount { get; set; }

        /// <summary>
        /// Gets or Sets ContributionPercentage
        /// </summary>
        [DataMember(Name="contributionPercentage", EmitDefaultValue=true)]
        public double? ContributionPercentage { get; set; }

        /// <summary>
        /// Gets or Sets DirectorFormLodgedDate
        /// </summary>
        [DataMember(Name="directorFormLodgedDate", EmitDefaultValue=true)]
        public DateTime? DirectorFormLodgedDate { get; set; }

        /// <summary>
        /// Gets or Sets DirectorFormRecievedDate
        /// </summary>
        [DataMember(Name="directorFormRecievedDate", EmitDefaultValue=true)]
        public DateTime? DirectorFormRecievedDate { get; set; }

        /// <summary>
        /// Gets or Sets FoundingStatementDate
        /// </summary>
        [DataMember(Name="foundingStatementDate", EmitDefaultValue=true)]
        public DateTime? FoundingStatementDate { get; set; }

        /// <summary>
        /// Gets or Sets StatusDate
        /// </summary>
        [DataMember(Name="statusDate", EmitDefaultValue=true)]
        public DateTime? StatusDate { get; set; }

        /// <summary>
        /// Gets or Sets PostalAddress
        /// </summary>
        [DataMember(Name="postalAddress", EmitDefaultValue=false)]
        public WindeedCipcBasicAddress PostalAddress { get; set; }

        /// <summary>
        /// Gets or Sets ResidentialAddress
        /// </summary>
        [DataMember(Name="residentialAddress", EmitDefaultValue=false)]
        public WindeedCipcBasicAddress ResidentialAddress { get; set; }

        /// <summary>
        /// Gets or Sets BusinessAddress
        /// </summary>
        [DataMember(Name="businessAddress", EmitDefaultValue=false)]
        public WindeedCipcBasicAddress BusinessAddress { get; set; }

        /// <summary>
        /// Gets or Sets CompanyStatus
        /// </summary>
        [DataMember(Name="companyStatus", EmitDefaultValue=false)]
        public WindeedCipcCipcLookup CompanyStatus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WindeedCipcAssociatedCompany {\n");
            sb.Append("  DbKey: ").Append(DbKey).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  RegistrationNumber: ").Append(RegistrationNumber).Append("\n");
            sb.Append("  DirectorStatus: ").Append(DirectorStatus).Append("\n");
            sb.Append("  DirectorType: ").Append(DirectorType).Append("\n");
            sb.Append("  AppointmentDate: ").Append(AppointmentDate).Append("\n");
            sb.Append("  ResignationDate: ").Append(ResignationDate).Append("\n");
            sb.Append("  Profession: ").Append(Profession).Append("\n");
            sb.Append("  Executor: ").Append(Executor).Append("\n");
            sb.Append("  ExecutorAppointmentDate: ").Append(ExecutorAppointmentDate).Append("\n");
            sb.Append("  TrusteeName: ").Append(TrusteeName).Append("\n");
            sb.Append("  Estate: ").Append(Estate).Append("\n");
            sb.Append("  Designation: ").Append(Designation).Append("\n");
            sb.Append("  Occupation: ").Append(Occupation).Append("\n");
            sb.Append("  NatureOfChange: ").Append(NatureOfChange).Append("\n");
            sb.Append("  ContributionType: ").Append(ContributionType).Append("\n");
            sb.Append("  ContributionAmount: ").Append(ContributionAmount).Append("\n");
            sb.Append("  ContributionPercentage: ").Append(ContributionPercentage).Append("\n");
            sb.Append("  DirectorFormLodgedDate: ").Append(DirectorFormLodgedDate).Append("\n");
            sb.Append("  DirectorFormRecievedDate: ").Append(DirectorFormRecievedDate).Append("\n");
            sb.Append("  FoundingStatementDate: ").Append(FoundingStatementDate).Append("\n");
            sb.Append("  StatusDate: ").Append(StatusDate).Append("\n");
            sb.Append("  PostalAddress: ").Append(PostalAddress).Append("\n");
            sb.Append("  ResidentialAddress: ").Append(ResidentialAddress).Append("\n");
            sb.Append("  BusinessAddress: ").Append(BusinessAddress).Append("\n");
            sb.Append("  CompanyStatus: ").Append(CompanyStatus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WindeedCipcAssociatedCompany);
        }

        /// <summary>
        /// Returns true if WindeedCipcAssociatedCompany instances are equal
        /// </summary>
        /// <param name="input">Instance of WindeedCipcAssociatedCompany to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WindeedCipcAssociatedCompany input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DbKey == input.DbKey ||
                    (this.DbKey != null &&
                    this.DbKey.Equals(input.DbKey))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.RegistrationNumber == input.RegistrationNumber ||
                    (this.RegistrationNumber != null &&
                    this.RegistrationNumber.Equals(input.RegistrationNumber))
                ) && 
                (
                    this.DirectorStatus == input.DirectorStatus ||
                    (this.DirectorStatus != null &&
                    this.DirectorStatus.Equals(input.DirectorStatus))
                ) && 
                (
                    this.DirectorType == input.DirectorType ||
                    (this.DirectorType != null &&
                    this.DirectorType.Equals(input.DirectorType))
                ) && 
                (
                    this.AppointmentDate == input.AppointmentDate ||
                    (this.AppointmentDate != null &&
                    this.AppointmentDate.Equals(input.AppointmentDate))
                ) && 
                (
                    this.ResignationDate == input.ResignationDate ||
                    (this.ResignationDate != null &&
                    this.ResignationDate.Equals(input.ResignationDate))
                ) && 
                (
                    this.Profession == input.Profession ||
                    (this.Profession != null &&
                    this.Profession.Equals(input.Profession))
                ) && 
                (
                    this.Executor == input.Executor ||
                    (this.Executor != null &&
                    this.Executor.Equals(input.Executor))
                ) && 
                (
                    this.ExecutorAppointmentDate == input.ExecutorAppointmentDate ||
                    (this.ExecutorAppointmentDate != null &&
                    this.ExecutorAppointmentDate.Equals(input.ExecutorAppointmentDate))
                ) && 
                (
                    this.TrusteeName == input.TrusteeName ||
                    (this.TrusteeName != null &&
                    this.TrusteeName.Equals(input.TrusteeName))
                ) && 
                (
                    this.Estate == input.Estate ||
                    (this.Estate != null &&
                    this.Estate.Equals(input.Estate))
                ) && 
                (
                    this.Designation == input.Designation ||
                    (this.Designation != null &&
                    this.Designation.Equals(input.Designation))
                ) && 
                (
                    this.Occupation == input.Occupation ||
                    (this.Occupation != null &&
                    this.Occupation.Equals(input.Occupation))
                ) && 
                (
                    this.NatureOfChange == input.NatureOfChange ||
                    (this.NatureOfChange != null &&
                    this.NatureOfChange.Equals(input.NatureOfChange))
                ) && 
                (
                    this.ContributionType == input.ContributionType ||
                    (this.ContributionType != null &&
                    this.ContributionType.Equals(input.ContributionType))
                ) && 
                (
                    this.ContributionAmount == input.ContributionAmount ||
                    (this.ContributionAmount != null &&
                    this.ContributionAmount.Equals(input.ContributionAmount))
                ) && 
                (
                    this.ContributionPercentage == input.ContributionPercentage ||
                    (this.ContributionPercentage != null &&
                    this.ContributionPercentage.Equals(input.ContributionPercentage))
                ) && 
                (
                    this.DirectorFormLodgedDate == input.DirectorFormLodgedDate ||
                    (this.DirectorFormLodgedDate != null &&
                    this.DirectorFormLodgedDate.Equals(input.DirectorFormLodgedDate))
                ) && 
                (
                    this.DirectorFormRecievedDate == input.DirectorFormRecievedDate ||
                    (this.DirectorFormRecievedDate != null &&
                    this.DirectorFormRecievedDate.Equals(input.DirectorFormRecievedDate))
                ) && 
                (
                    this.FoundingStatementDate == input.FoundingStatementDate ||
                    (this.FoundingStatementDate != null &&
                    this.FoundingStatementDate.Equals(input.FoundingStatementDate))
                ) && 
                (
                    this.StatusDate == input.StatusDate ||
                    (this.StatusDate != null &&
                    this.StatusDate.Equals(input.StatusDate))
                ) && 
                (
                    this.PostalAddress == input.PostalAddress ||
                    (this.PostalAddress != null &&
                    this.PostalAddress.Equals(input.PostalAddress))
                ) && 
                (
                    this.ResidentialAddress == input.ResidentialAddress ||
                    (this.ResidentialAddress != null &&
                    this.ResidentialAddress.Equals(input.ResidentialAddress))
                ) && 
                (
                    this.BusinessAddress == input.BusinessAddress ||
                    (this.BusinessAddress != null &&
                    this.BusinessAddress.Equals(input.BusinessAddress))
                ) && 
                (
                    this.CompanyStatus == input.CompanyStatus ||
                    (this.CompanyStatus != null &&
                    this.CompanyStatus.Equals(input.CompanyStatus))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DbKey != null)
                    hashCode = hashCode * 59 + this.DbKey.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.RegistrationNumber != null)
                    hashCode = hashCode * 59 + this.RegistrationNumber.GetHashCode();
                if (this.DirectorStatus != null)
                    hashCode = hashCode * 59 + this.DirectorStatus.GetHashCode();
                if (this.DirectorType != null)
                    hashCode = hashCode * 59 + this.DirectorType.GetHashCode();
                if (this.AppointmentDate != null)
                    hashCode = hashCode * 59 + this.AppointmentDate.GetHashCode();
                if (this.ResignationDate != null)
                    hashCode = hashCode * 59 + this.ResignationDate.GetHashCode();
                if (this.Profession != null)
                    hashCode = hashCode * 59 + this.Profession.GetHashCode();
                if (this.Executor != null)
                    hashCode = hashCode * 59 + this.Executor.GetHashCode();
                if (this.ExecutorAppointmentDate != null)
                    hashCode = hashCode * 59 + this.ExecutorAppointmentDate.GetHashCode();
                if (this.TrusteeName != null)
                    hashCode = hashCode * 59 + this.TrusteeName.GetHashCode();
                if (this.Estate != null)
                    hashCode = hashCode * 59 + this.Estate.GetHashCode();
                if (this.Designation != null)
                    hashCode = hashCode * 59 + this.Designation.GetHashCode();
                if (this.Occupation != null)
                    hashCode = hashCode * 59 + this.Occupation.GetHashCode();
                if (this.NatureOfChange != null)
                    hashCode = hashCode * 59 + this.NatureOfChange.GetHashCode();
                if (this.ContributionType != null)
                    hashCode = hashCode * 59 + this.ContributionType.GetHashCode();
                if (this.ContributionAmount != null)
                    hashCode = hashCode * 59 + this.ContributionAmount.GetHashCode();
                if (this.ContributionPercentage != null)
                    hashCode = hashCode * 59 + this.ContributionPercentage.GetHashCode();
                if (this.DirectorFormLodgedDate != null)
                    hashCode = hashCode * 59 + this.DirectorFormLodgedDate.GetHashCode();
                if (this.DirectorFormRecievedDate != null)
                    hashCode = hashCode * 59 + this.DirectorFormRecievedDate.GetHashCode();
                if (this.FoundingStatementDate != null)
                    hashCode = hashCode * 59 + this.FoundingStatementDate.GetHashCode();
                if (this.StatusDate != null)
                    hashCode = hashCode * 59 + this.StatusDate.GetHashCode();
                if (this.PostalAddress != null)
                    hashCode = hashCode * 59 + this.PostalAddress.GetHashCode();
                if (this.ResidentialAddress != null)
                    hashCode = hashCode * 59 + this.ResidentialAddress.GetHashCode();
                if (this.BusinessAddress != null)
                    hashCode = hashCode * 59 + this.BusinessAddress.GetHashCode();
                if (this.CompanyStatus != null)
                    hashCode = hashCode * 59 + this.CompanyStatus.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
