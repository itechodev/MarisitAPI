/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118TUVehicleAlertRecordedVG
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118TUVehicleAlertRecordedVG :  IEquatable<TransunionConsumer118TUVehicleAlertRecordedVG>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118TUVehicleAlertRecordedVG" /> class.
        /// </summary>
        /// <param name="recordDescription">recordDescription.</param>
        /// <param name="alertReferenceNumber">alertReferenceNumber.</param>
        /// <param name="subscriberName">subscriberName.</param>
        /// <param name="alertTelephoneContactCode">alertTelephoneContactCode.</param>
        /// <param name="alertTelephoneContactNumber">alertTelephoneContactNumber.</param>
        /// <param name="alertTelephoneContactExtension">alertTelephoneContactExtension.</param>
        /// <param name="alertReason">alertReason.</param>
        public TransunionConsumer118TUVehicleAlertRecordedVG(string recordDescription = default(string), string alertReferenceNumber = default(string), string subscriberName = default(string), string alertTelephoneContactCode = default(string), string alertTelephoneContactNumber = default(string), string alertTelephoneContactExtension = default(string), string alertReason = default(string))
        {
            this.RecordDescription = recordDescription;
            this.AlertReferenceNumber = alertReferenceNumber;
            this.SubscriberName = subscriberName;
            this.AlertTelephoneContactCode = alertTelephoneContactCode;
            this.AlertTelephoneContactNumber = alertTelephoneContactNumber;
            this.AlertTelephoneContactExtension = alertTelephoneContactExtension;
            this.AlertReason = alertReason;
            this.RecordDescription = recordDescription;
            this.AlertReferenceNumber = alertReferenceNumber;
            this.SubscriberName = subscriberName;
            this.AlertTelephoneContactCode = alertTelephoneContactCode;
            this.AlertTelephoneContactNumber = alertTelephoneContactNumber;
            this.AlertTelephoneContactExtension = alertTelephoneContactExtension;
            this.AlertReason = alertReason;
        }

        /// <summary>
        /// Gets or Sets RecordDescription
        /// </summary>
        [DataMember(Name="recordDescription", EmitDefaultValue=true)]
        public string RecordDescription { get; set; }

        /// <summary>
        /// Gets or Sets AlertReferenceNumber
        /// </summary>
        [DataMember(Name="alertReferenceNumber", EmitDefaultValue=true)]
        public string AlertReferenceNumber { get; set; }

        /// <summary>
        /// Gets or Sets SubscriberName
        /// </summary>
        [DataMember(Name="subscriberName", EmitDefaultValue=true)]
        public string SubscriberName { get; set; }

        /// <summary>
        /// Gets or Sets AlertTelephoneContactCode
        /// </summary>
        [DataMember(Name="alertTelephoneContactCode", EmitDefaultValue=true)]
        public string AlertTelephoneContactCode { get; set; }

        /// <summary>
        /// Gets or Sets AlertTelephoneContactNumber
        /// </summary>
        [DataMember(Name="alertTelephoneContactNumber", EmitDefaultValue=true)]
        public string AlertTelephoneContactNumber { get; set; }

        /// <summary>
        /// Gets or Sets AlertTelephoneContactExtension
        /// </summary>
        [DataMember(Name="alertTelephoneContactExtension", EmitDefaultValue=true)]
        public string AlertTelephoneContactExtension { get; set; }

        /// <summary>
        /// Gets or Sets AlertReason
        /// </summary>
        [DataMember(Name="alertReason", EmitDefaultValue=true)]
        public string AlertReason { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118TUVehicleAlertRecordedVG {\n");
            sb.Append("  RecordDescription: ").Append(RecordDescription).Append("\n");
            sb.Append("  AlertReferenceNumber: ").Append(AlertReferenceNumber).Append("\n");
            sb.Append("  SubscriberName: ").Append(SubscriberName).Append("\n");
            sb.Append("  AlertTelephoneContactCode: ").Append(AlertTelephoneContactCode).Append("\n");
            sb.Append("  AlertTelephoneContactNumber: ").Append(AlertTelephoneContactNumber).Append("\n");
            sb.Append("  AlertTelephoneContactExtension: ").Append(AlertTelephoneContactExtension).Append("\n");
            sb.Append("  AlertReason: ").Append(AlertReason).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118TUVehicleAlertRecordedVG);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118TUVehicleAlertRecordedVG instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118TUVehicleAlertRecordedVG to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118TUVehicleAlertRecordedVG input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.RecordDescription == input.RecordDescription ||
                    (this.RecordDescription != null &&
                    this.RecordDescription.Equals(input.RecordDescription))
                ) && 
                (
                    this.AlertReferenceNumber == input.AlertReferenceNumber ||
                    (this.AlertReferenceNumber != null &&
                    this.AlertReferenceNumber.Equals(input.AlertReferenceNumber))
                ) && 
                (
                    this.SubscriberName == input.SubscriberName ||
                    (this.SubscriberName != null &&
                    this.SubscriberName.Equals(input.SubscriberName))
                ) && 
                (
                    this.AlertTelephoneContactCode == input.AlertTelephoneContactCode ||
                    (this.AlertTelephoneContactCode != null &&
                    this.AlertTelephoneContactCode.Equals(input.AlertTelephoneContactCode))
                ) && 
                (
                    this.AlertTelephoneContactNumber == input.AlertTelephoneContactNumber ||
                    (this.AlertTelephoneContactNumber != null &&
                    this.AlertTelephoneContactNumber.Equals(input.AlertTelephoneContactNumber))
                ) && 
                (
                    this.AlertTelephoneContactExtension == input.AlertTelephoneContactExtension ||
                    (this.AlertTelephoneContactExtension != null &&
                    this.AlertTelephoneContactExtension.Equals(input.AlertTelephoneContactExtension))
                ) && 
                (
                    this.AlertReason == input.AlertReason ||
                    (this.AlertReason != null &&
                    this.AlertReason.Equals(input.AlertReason))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RecordDescription != null)
                    hashCode = hashCode * 59 + this.RecordDescription.GetHashCode();
                if (this.AlertReferenceNumber != null)
                    hashCode = hashCode * 59 + this.AlertReferenceNumber.GetHashCode();
                if (this.SubscriberName != null)
                    hashCode = hashCode * 59 + this.SubscriberName.GetHashCode();
                if (this.AlertTelephoneContactCode != null)
                    hashCode = hashCode * 59 + this.AlertTelephoneContactCode.GetHashCode();
                if (this.AlertTelephoneContactNumber != null)
                    hashCode = hashCode * 59 + this.AlertTelephoneContactNumber.GetHashCode();
                if (this.AlertTelephoneContactExtension != null)
                    hashCode = hashCode * 59 + this.AlertTelephoneContactExtension.GetHashCode();
                if (this.AlertReason != null)
                    hashCode = hashCode * 59 + this.AlertReason.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
