/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// CompuscanLINKCOMPINFO
    /// </summary>
    [DataContract]
    public partial class CompuscanLINKCOMPINFO :  IEquatable<CompuscanLINKCOMPINFO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompuscanLINKCOMPINFO" /> class.
        /// </summary>
        /// <param name="dirname">dirname.</param>
        /// <param name="dirsurname">dirsurname.</param>
        /// <param name="dirlinkedcomp">dirlinkedcomp.</param>
        public CompuscanLINKCOMPINFO(string dirname = default(string), string dirsurname = default(string), List<CompuscanDIRLINKEDCOMP> dirlinkedcomp = default(List<CompuscanDIRLINKEDCOMP>))
        {
            this.Dirname = dirname;
            this.Dirsurname = dirsurname;
            this.Dirlinkedcomp = dirlinkedcomp;
            this.Dirname = dirname;
            this.Dirsurname = dirsurname;
            this.Dirlinkedcomp = dirlinkedcomp;
        }

        /// <summary>
        /// Gets or Sets Dirname
        /// </summary>
        [DataMember(Name="dirname", EmitDefaultValue=true)]
        public string Dirname { get; set; }

        /// <summary>
        /// Gets or Sets Dirsurname
        /// </summary>
        [DataMember(Name="dirsurname", EmitDefaultValue=true)]
        public string Dirsurname { get; set; }

        /// <summary>
        /// Gets or Sets Dirlinkedcomp
        /// </summary>
        [DataMember(Name="dirlinkedcomp", EmitDefaultValue=true)]
        public List<CompuscanDIRLINKEDCOMP> Dirlinkedcomp { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompuscanLINKCOMPINFO {\n");
            sb.Append("  Dirname: ").Append(Dirname).Append("\n");
            sb.Append("  Dirsurname: ").Append(Dirsurname).Append("\n");
            sb.Append("  Dirlinkedcomp: ").Append(Dirlinkedcomp).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompuscanLINKCOMPINFO);
        }

        /// <summary>
        /// Returns true if CompuscanLINKCOMPINFO instances are equal
        /// </summary>
        /// <param name="input">Instance of CompuscanLINKCOMPINFO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompuscanLINKCOMPINFO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Dirname == input.Dirname ||
                    (this.Dirname != null &&
                    this.Dirname.Equals(input.Dirname))
                ) && 
                (
                    this.Dirsurname == input.Dirsurname ||
                    (this.Dirsurname != null &&
                    this.Dirsurname.Equals(input.Dirsurname))
                ) && 
                (
                    this.Dirlinkedcomp == input.Dirlinkedcomp ||
                    this.Dirlinkedcomp != null &&
                    input.Dirlinkedcomp != null &&
                    this.Dirlinkedcomp.SequenceEqual(input.Dirlinkedcomp)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Dirname != null)
                    hashCode = hashCode * 59 + this.Dirname.GetHashCode();
                if (this.Dirsurname != null)
                    hashCode = hashCode * 59 + this.Dirsurname.GetHashCode();
                if (this.Dirlinkedcomp != null)
                    hashCode = hashCode * 59 + this.Dirlinkedcomp.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
