/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118StandardBatchCharsSB18
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118StandardBatchCharsSB18 :  IEquatable<TransunionConsumer118StandardBatchCharsSB18>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118StandardBatchCharsSB18" /> class.
        /// </summary>
        /// <param name="consumerNo">consumerNo.</param>
        /// <param name="aT002">aT002.</param>
        /// <param name="aT036">aT036.</param>
        /// <param name="aT037">aT037.</param>
        /// <param name="aT038">aT038.</param>
        /// <param name="aT039">aT039.</param>
        /// <param name="aT040">aT040.</param>
        /// <param name="aT162">aT162.</param>
        /// <param name="aT163">aT163.</param>
        /// <param name="aT164">aT164.</param>
        /// <param name="g010">g010.</param>
        /// <param name="g014">g014.</param>
        /// <param name="g030">g030.</param>
        /// <param name="g043">g043.</param>
        /// <param name="g044">g044.</param>
        /// <param name="g057">g057.</param>
        /// <param name="mL036">mL036.</param>
        /// <param name="mL037">mL037.</param>
        /// <param name="mL038">mL038.</param>
        public TransunionConsumer118StandardBatchCharsSB18(string consumerNo = default(string), string aT002 = default(string), string aT036 = default(string), string aT037 = default(string), string aT038 = default(string), string aT039 = default(string), string aT040 = default(string), string aT162 = default(string), string aT163 = default(string), string aT164 = default(string), string g010 = default(string), string g014 = default(string), string g030 = default(string), string g043 = default(string), string g044 = default(string), string g057 = default(string), string mL036 = default(string), string mL037 = default(string), string mL038 = default(string))
        {
            this.ConsumerNo = consumerNo;
            this.AT002 = aT002;
            this.AT036 = aT036;
            this.AT037 = aT037;
            this.AT038 = aT038;
            this.AT039 = aT039;
            this.AT040 = aT040;
            this.AT162 = aT162;
            this.AT163 = aT163;
            this.AT164 = aT164;
            this.G010 = g010;
            this.G014 = g014;
            this.G030 = g030;
            this.G043 = g043;
            this.G044 = g044;
            this.G057 = g057;
            this.ML036 = mL036;
            this.ML037 = mL037;
            this.ML038 = mL038;
            this.ConsumerNo = consumerNo;
            this.AT002 = aT002;
            this.AT036 = aT036;
            this.AT037 = aT037;
            this.AT038 = aT038;
            this.AT039 = aT039;
            this.AT040 = aT040;
            this.AT162 = aT162;
            this.AT163 = aT163;
            this.AT164 = aT164;
            this.G010 = g010;
            this.G014 = g014;
            this.G030 = g030;
            this.G043 = g043;
            this.G044 = g044;
            this.G057 = g057;
            this.ML036 = mL036;
            this.ML037 = mL037;
            this.ML038 = mL038;
        }

        /// <summary>
        /// Gets or Sets ConsumerNo
        /// </summary>
        [DataMember(Name="consumerNo", EmitDefaultValue=true)]
        public string ConsumerNo { get; set; }

        /// <summary>
        /// Gets or Sets AT002
        /// </summary>
        [DataMember(Name="aT002", EmitDefaultValue=true)]
        public string AT002 { get; set; }

        /// <summary>
        /// Gets or Sets AT036
        /// </summary>
        [DataMember(Name="aT036", EmitDefaultValue=true)]
        public string AT036 { get; set; }

        /// <summary>
        /// Gets or Sets AT037
        /// </summary>
        [DataMember(Name="aT037", EmitDefaultValue=true)]
        public string AT037 { get; set; }

        /// <summary>
        /// Gets or Sets AT038
        /// </summary>
        [DataMember(Name="aT038", EmitDefaultValue=true)]
        public string AT038 { get; set; }

        /// <summary>
        /// Gets or Sets AT039
        /// </summary>
        [DataMember(Name="aT039", EmitDefaultValue=true)]
        public string AT039 { get; set; }

        /// <summary>
        /// Gets or Sets AT040
        /// </summary>
        [DataMember(Name="aT040", EmitDefaultValue=true)]
        public string AT040 { get; set; }

        /// <summary>
        /// Gets or Sets AT162
        /// </summary>
        [DataMember(Name="aT162", EmitDefaultValue=true)]
        public string AT162 { get; set; }

        /// <summary>
        /// Gets or Sets AT163
        /// </summary>
        [DataMember(Name="aT163", EmitDefaultValue=true)]
        public string AT163 { get; set; }

        /// <summary>
        /// Gets or Sets AT164
        /// </summary>
        [DataMember(Name="aT164", EmitDefaultValue=true)]
        public string AT164 { get; set; }

        /// <summary>
        /// Gets or Sets G010
        /// </summary>
        [DataMember(Name="g010", EmitDefaultValue=true)]
        public string G010 { get; set; }

        /// <summary>
        /// Gets or Sets G014
        /// </summary>
        [DataMember(Name="g014", EmitDefaultValue=true)]
        public string G014 { get; set; }

        /// <summary>
        /// Gets or Sets G030
        /// </summary>
        [DataMember(Name="g030", EmitDefaultValue=true)]
        public string G030 { get; set; }

        /// <summary>
        /// Gets or Sets G043
        /// </summary>
        [DataMember(Name="g043", EmitDefaultValue=true)]
        public string G043 { get; set; }

        /// <summary>
        /// Gets or Sets G044
        /// </summary>
        [DataMember(Name="g044", EmitDefaultValue=true)]
        public string G044 { get; set; }

        /// <summary>
        /// Gets or Sets G057
        /// </summary>
        [DataMember(Name="g057", EmitDefaultValue=true)]
        public string G057 { get; set; }

        /// <summary>
        /// Gets or Sets ML036
        /// </summary>
        [DataMember(Name="mL036", EmitDefaultValue=true)]
        public string ML036 { get; set; }

        /// <summary>
        /// Gets or Sets ML037
        /// </summary>
        [DataMember(Name="mL037", EmitDefaultValue=true)]
        public string ML037 { get; set; }

        /// <summary>
        /// Gets or Sets ML038
        /// </summary>
        [DataMember(Name="mL038", EmitDefaultValue=true)]
        public string ML038 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118StandardBatchCharsSB18 {\n");
            sb.Append("  ConsumerNo: ").Append(ConsumerNo).Append("\n");
            sb.Append("  AT002: ").Append(AT002).Append("\n");
            sb.Append("  AT036: ").Append(AT036).Append("\n");
            sb.Append("  AT037: ").Append(AT037).Append("\n");
            sb.Append("  AT038: ").Append(AT038).Append("\n");
            sb.Append("  AT039: ").Append(AT039).Append("\n");
            sb.Append("  AT040: ").Append(AT040).Append("\n");
            sb.Append("  AT162: ").Append(AT162).Append("\n");
            sb.Append("  AT163: ").Append(AT163).Append("\n");
            sb.Append("  AT164: ").Append(AT164).Append("\n");
            sb.Append("  G010: ").Append(G010).Append("\n");
            sb.Append("  G014: ").Append(G014).Append("\n");
            sb.Append("  G030: ").Append(G030).Append("\n");
            sb.Append("  G043: ").Append(G043).Append("\n");
            sb.Append("  G044: ").Append(G044).Append("\n");
            sb.Append("  G057: ").Append(G057).Append("\n");
            sb.Append("  ML036: ").Append(ML036).Append("\n");
            sb.Append("  ML037: ").Append(ML037).Append("\n");
            sb.Append("  ML038: ").Append(ML038).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118StandardBatchCharsSB18);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118StandardBatchCharsSB18 instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118StandardBatchCharsSB18 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118StandardBatchCharsSB18 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConsumerNo == input.ConsumerNo ||
                    (this.ConsumerNo != null &&
                    this.ConsumerNo.Equals(input.ConsumerNo))
                ) && 
                (
                    this.AT002 == input.AT002 ||
                    (this.AT002 != null &&
                    this.AT002.Equals(input.AT002))
                ) && 
                (
                    this.AT036 == input.AT036 ||
                    (this.AT036 != null &&
                    this.AT036.Equals(input.AT036))
                ) && 
                (
                    this.AT037 == input.AT037 ||
                    (this.AT037 != null &&
                    this.AT037.Equals(input.AT037))
                ) && 
                (
                    this.AT038 == input.AT038 ||
                    (this.AT038 != null &&
                    this.AT038.Equals(input.AT038))
                ) && 
                (
                    this.AT039 == input.AT039 ||
                    (this.AT039 != null &&
                    this.AT039.Equals(input.AT039))
                ) && 
                (
                    this.AT040 == input.AT040 ||
                    (this.AT040 != null &&
                    this.AT040.Equals(input.AT040))
                ) && 
                (
                    this.AT162 == input.AT162 ||
                    (this.AT162 != null &&
                    this.AT162.Equals(input.AT162))
                ) && 
                (
                    this.AT163 == input.AT163 ||
                    (this.AT163 != null &&
                    this.AT163.Equals(input.AT163))
                ) && 
                (
                    this.AT164 == input.AT164 ||
                    (this.AT164 != null &&
                    this.AT164.Equals(input.AT164))
                ) && 
                (
                    this.G010 == input.G010 ||
                    (this.G010 != null &&
                    this.G010.Equals(input.G010))
                ) && 
                (
                    this.G014 == input.G014 ||
                    (this.G014 != null &&
                    this.G014.Equals(input.G014))
                ) && 
                (
                    this.G030 == input.G030 ||
                    (this.G030 != null &&
                    this.G030.Equals(input.G030))
                ) && 
                (
                    this.G043 == input.G043 ||
                    (this.G043 != null &&
                    this.G043.Equals(input.G043))
                ) && 
                (
                    this.G044 == input.G044 ||
                    (this.G044 != null &&
                    this.G044.Equals(input.G044))
                ) && 
                (
                    this.G057 == input.G057 ||
                    (this.G057 != null &&
                    this.G057.Equals(input.G057))
                ) && 
                (
                    this.ML036 == input.ML036 ||
                    (this.ML036 != null &&
                    this.ML036.Equals(input.ML036))
                ) && 
                (
                    this.ML037 == input.ML037 ||
                    (this.ML037 != null &&
                    this.ML037.Equals(input.ML037))
                ) && 
                (
                    this.ML038 == input.ML038 ||
                    (this.ML038 != null &&
                    this.ML038.Equals(input.ML038))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConsumerNo != null)
                    hashCode = hashCode * 59 + this.ConsumerNo.GetHashCode();
                if (this.AT002 != null)
                    hashCode = hashCode * 59 + this.AT002.GetHashCode();
                if (this.AT036 != null)
                    hashCode = hashCode * 59 + this.AT036.GetHashCode();
                if (this.AT037 != null)
                    hashCode = hashCode * 59 + this.AT037.GetHashCode();
                if (this.AT038 != null)
                    hashCode = hashCode * 59 + this.AT038.GetHashCode();
                if (this.AT039 != null)
                    hashCode = hashCode * 59 + this.AT039.GetHashCode();
                if (this.AT040 != null)
                    hashCode = hashCode * 59 + this.AT040.GetHashCode();
                if (this.AT162 != null)
                    hashCode = hashCode * 59 + this.AT162.GetHashCode();
                if (this.AT163 != null)
                    hashCode = hashCode * 59 + this.AT163.GetHashCode();
                if (this.AT164 != null)
                    hashCode = hashCode * 59 + this.AT164.GetHashCode();
                if (this.G010 != null)
                    hashCode = hashCode * 59 + this.G010.GetHashCode();
                if (this.G014 != null)
                    hashCode = hashCode * 59 + this.G014.GetHashCode();
                if (this.G030 != null)
                    hashCode = hashCode * 59 + this.G030.GetHashCode();
                if (this.G043 != null)
                    hashCode = hashCode * 59 + this.G043.GetHashCode();
                if (this.G044 != null)
                    hashCode = hashCode * 59 + this.G044.GetHashCode();
                if (this.G057 != null)
                    hashCode = hashCode * 59 + this.G057.GetHashCode();
                if (this.ML036 != null)
                    hashCode = hashCode * 59 + this.ML036.GetHashCode();
                if (this.ML037 != null)
                    hashCode = hashCode * 59 + this.ML037.GetHashCode();
                if (this.ML038 != null)
                    hashCode = hashCode * 59 + this.ML038.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
