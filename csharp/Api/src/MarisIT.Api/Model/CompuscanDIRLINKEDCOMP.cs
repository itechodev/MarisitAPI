/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// CompuscanDIRLINKEDCOMP
    /// </summary>
    [DataContract]
    public partial class CompuscanDIRLINKEDCOMP :  IEquatable<CompuscanDIRLINKEDCOMP>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompuscanDIRLINKEDCOMP" /> class.
        /// </summary>
        /// <param name="ac">ac.</param>
        /// <param name="appointmentdate">appointmentdate.</param>
        /// <param name="companyname">companyname.</param>
        /// <param name="companyregnumber">companyregnumber.</param>
        /// <param name="companystatus">companystatus.</param>
        /// <param name="membercontribution">membercontribution.</param>
        /// <param name="membersize">membersize.</param>
        /// <param name="physicaladdresS1">physicaladdresS1.</param>
        /// <param name="physicaladdresS2">physicaladdresS2.</param>
        /// <param name="physicaladdresS3">physicaladdresS3.</param>
        /// <param name="physicaladdresS4">physicaladdresS4.</param>
        /// <param name="physicalpostcode">physicalpostcode.</param>
        /// <param name="position">position.</param>
        /// <param name="principaltype">principaltype.</param>
        /// <param name="status">status.</param>
        /// <param name="statusdate">statusdate.</param>
        /// <param name="taxnumber">taxnumber.</param>
        /// <param name="vatnumber">vatnumber.</param>
        public CompuscanDIRLINKEDCOMP(string ac = default(string), string appointmentdate = default(string), string companyname = default(string), string companyregnumber = default(string), string companystatus = default(string), string membercontribution = default(string), string membersize = default(string), string physicaladdresS1 = default(string), string physicaladdresS2 = default(string), string physicaladdresS3 = default(string), string physicaladdresS4 = default(string), string physicalpostcode = default(string), string position = default(string), string principaltype = default(string), string status = default(string), string statusdate = default(string), string taxnumber = default(string), string vatnumber = default(string))
        {
            this.Ac = ac;
            this.Appointmentdate = appointmentdate;
            this.Companyname = companyname;
            this.Companyregnumber = companyregnumber;
            this.Companystatus = companystatus;
            this.Membercontribution = membercontribution;
            this.Membersize = membersize;
            this.PhysicaladdresS1 = physicaladdresS1;
            this.PhysicaladdresS2 = physicaladdresS2;
            this.PhysicaladdresS3 = physicaladdresS3;
            this.PhysicaladdresS4 = physicaladdresS4;
            this.Physicalpostcode = physicalpostcode;
            this.Position = position;
            this.Principaltype = principaltype;
            this.Status = status;
            this.Statusdate = statusdate;
            this.Taxnumber = taxnumber;
            this.Vatnumber = vatnumber;
            this.Ac = ac;
            this.Appointmentdate = appointmentdate;
            this.Companyname = companyname;
            this.Companyregnumber = companyregnumber;
            this.Companystatus = companystatus;
            this.Membercontribution = membercontribution;
            this.Membersize = membersize;
            this.PhysicaladdresS1 = physicaladdresS1;
            this.PhysicaladdresS2 = physicaladdresS2;
            this.PhysicaladdresS3 = physicaladdresS3;
            this.PhysicaladdresS4 = physicaladdresS4;
            this.Physicalpostcode = physicalpostcode;
            this.Position = position;
            this.Principaltype = principaltype;
            this.Status = status;
            this.Statusdate = statusdate;
            this.Taxnumber = taxnumber;
            this.Vatnumber = vatnumber;
        }

        /// <summary>
        /// Gets or Sets Ac
        /// </summary>
        [DataMember(Name="ac", EmitDefaultValue=true)]
        public string Ac { get; set; }

        /// <summary>
        /// Gets or Sets Appointmentdate
        /// </summary>
        [DataMember(Name="appointmentdate", EmitDefaultValue=true)]
        public string Appointmentdate { get; set; }

        /// <summary>
        /// Gets or Sets Companyname
        /// </summary>
        [DataMember(Name="companyname", EmitDefaultValue=true)]
        public string Companyname { get; set; }

        /// <summary>
        /// Gets or Sets Companyregnumber
        /// </summary>
        [DataMember(Name="companyregnumber", EmitDefaultValue=true)]
        public string Companyregnumber { get; set; }

        /// <summary>
        /// Gets or Sets Companystatus
        /// </summary>
        [DataMember(Name="companystatus", EmitDefaultValue=true)]
        public string Companystatus { get; set; }

        /// <summary>
        /// Gets or Sets Membercontribution
        /// </summary>
        [DataMember(Name="membercontribution", EmitDefaultValue=true)]
        public string Membercontribution { get; set; }

        /// <summary>
        /// Gets or Sets Membersize
        /// </summary>
        [DataMember(Name="membersize", EmitDefaultValue=true)]
        public string Membersize { get; set; }

        /// <summary>
        /// Gets or Sets PhysicaladdresS1
        /// </summary>
        [DataMember(Name="physicaladdresS1", EmitDefaultValue=true)]
        public string PhysicaladdresS1 { get; set; }

        /// <summary>
        /// Gets or Sets PhysicaladdresS2
        /// </summary>
        [DataMember(Name="physicaladdresS2", EmitDefaultValue=true)]
        public string PhysicaladdresS2 { get; set; }

        /// <summary>
        /// Gets or Sets PhysicaladdresS3
        /// </summary>
        [DataMember(Name="physicaladdresS3", EmitDefaultValue=true)]
        public string PhysicaladdresS3 { get; set; }

        /// <summary>
        /// Gets or Sets PhysicaladdresS4
        /// </summary>
        [DataMember(Name="physicaladdresS4", EmitDefaultValue=true)]
        public string PhysicaladdresS4 { get; set; }

        /// <summary>
        /// Gets or Sets Physicalpostcode
        /// </summary>
        [DataMember(Name="physicalpostcode", EmitDefaultValue=true)]
        public string Physicalpostcode { get; set; }

        /// <summary>
        /// Gets or Sets Position
        /// </summary>
        [DataMember(Name="position", EmitDefaultValue=true)]
        public string Position { get; set; }

        /// <summary>
        /// Gets or Sets Principaltype
        /// </summary>
        [DataMember(Name="principaltype", EmitDefaultValue=true)]
        public string Principaltype { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=true)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets Statusdate
        /// </summary>
        [DataMember(Name="statusdate", EmitDefaultValue=true)]
        public string Statusdate { get; set; }

        /// <summary>
        /// Gets or Sets Taxnumber
        /// </summary>
        [DataMember(Name="taxnumber", EmitDefaultValue=true)]
        public string Taxnumber { get; set; }

        /// <summary>
        /// Gets or Sets Vatnumber
        /// </summary>
        [DataMember(Name="vatnumber", EmitDefaultValue=true)]
        public string Vatnumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompuscanDIRLINKEDCOMP {\n");
            sb.Append("  Ac: ").Append(Ac).Append("\n");
            sb.Append("  Appointmentdate: ").Append(Appointmentdate).Append("\n");
            sb.Append("  Companyname: ").Append(Companyname).Append("\n");
            sb.Append("  Companyregnumber: ").Append(Companyregnumber).Append("\n");
            sb.Append("  Companystatus: ").Append(Companystatus).Append("\n");
            sb.Append("  Membercontribution: ").Append(Membercontribution).Append("\n");
            sb.Append("  Membersize: ").Append(Membersize).Append("\n");
            sb.Append("  PhysicaladdresS1: ").Append(PhysicaladdresS1).Append("\n");
            sb.Append("  PhysicaladdresS2: ").Append(PhysicaladdresS2).Append("\n");
            sb.Append("  PhysicaladdresS3: ").Append(PhysicaladdresS3).Append("\n");
            sb.Append("  PhysicaladdresS4: ").Append(PhysicaladdresS4).Append("\n");
            sb.Append("  Physicalpostcode: ").Append(Physicalpostcode).Append("\n");
            sb.Append("  Position: ").Append(Position).Append("\n");
            sb.Append("  Principaltype: ").Append(Principaltype).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Statusdate: ").Append(Statusdate).Append("\n");
            sb.Append("  Taxnumber: ").Append(Taxnumber).Append("\n");
            sb.Append("  Vatnumber: ").Append(Vatnumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompuscanDIRLINKEDCOMP);
        }

        /// <summary>
        /// Returns true if CompuscanDIRLINKEDCOMP instances are equal
        /// </summary>
        /// <param name="input">Instance of CompuscanDIRLINKEDCOMP to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompuscanDIRLINKEDCOMP input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Ac == input.Ac ||
                    (this.Ac != null &&
                    this.Ac.Equals(input.Ac))
                ) && 
                (
                    this.Appointmentdate == input.Appointmentdate ||
                    (this.Appointmentdate != null &&
                    this.Appointmentdate.Equals(input.Appointmentdate))
                ) && 
                (
                    this.Companyname == input.Companyname ||
                    (this.Companyname != null &&
                    this.Companyname.Equals(input.Companyname))
                ) && 
                (
                    this.Companyregnumber == input.Companyregnumber ||
                    (this.Companyregnumber != null &&
                    this.Companyregnumber.Equals(input.Companyregnumber))
                ) && 
                (
                    this.Companystatus == input.Companystatus ||
                    (this.Companystatus != null &&
                    this.Companystatus.Equals(input.Companystatus))
                ) && 
                (
                    this.Membercontribution == input.Membercontribution ||
                    (this.Membercontribution != null &&
                    this.Membercontribution.Equals(input.Membercontribution))
                ) && 
                (
                    this.Membersize == input.Membersize ||
                    (this.Membersize != null &&
                    this.Membersize.Equals(input.Membersize))
                ) && 
                (
                    this.PhysicaladdresS1 == input.PhysicaladdresS1 ||
                    (this.PhysicaladdresS1 != null &&
                    this.PhysicaladdresS1.Equals(input.PhysicaladdresS1))
                ) && 
                (
                    this.PhysicaladdresS2 == input.PhysicaladdresS2 ||
                    (this.PhysicaladdresS2 != null &&
                    this.PhysicaladdresS2.Equals(input.PhysicaladdresS2))
                ) && 
                (
                    this.PhysicaladdresS3 == input.PhysicaladdresS3 ||
                    (this.PhysicaladdresS3 != null &&
                    this.PhysicaladdresS3.Equals(input.PhysicaladdresS3))
                ) && 
                (
                    this.PhysicaladdresS4 == input.PhysicaladdresS4 ||
                    (this.PhysicaladdresS4 != null &&
                    this.PhysicaladdresS4.Equals(input.PhysicaladdresS4))
                ) && 
                (
                    this.Physicalpostcode == input.Physicalpostcode ||
                    (this.Physicalpostcode != null &&
                    this.Physicalpostcode.Equals(input.Physicalpostcode))
                ) && 
                (
                    this.Position == input.Position ||
                    (this.Position != null &&
                    this.Position.Equals(input.Position))
                ) && 
                (
                    this.Principaltype == input.Principaltype ||
                    (this.Principaltype != null &&
                    this.Principaltype.Equals(input.Principaltype))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.Statusdate == input.Statusdate ||
                    (this.Statusdate != null &&
                    this.Statusdate.Equals(input.Statusdate))
                ) && 
                (
                    this.Taxnumber == input.Taxnumber ||
                    (this.Taxnumber != null &&
                    this.Taxnumber.Equals(input.Taxnumber))
                ) && 
                (
                    this.Vatnumber == input.Vatnumber ||
                    (this.Vatnumber != null &&
                    this.Vatnumber.Equals(input.Vatnumber))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Ac != null)
                    hashCode = hashCode * 59 + this.Ac.GetHashCode();
                if (this.Appointmentdate != null)
                    hashCode = hashCode * 59 + this.Appointmentdate.GetHashCode();
                if (this.Companyname != null)
                    hashCode = hashCode * 59 + this.Companyname.GetHashCode();
                if (this.Companyregnumber != null)
                    hashCode = hashCode * 59 + this.Companyregnumber.GetHashCode();
                if (this.Companystatus != null)
                    hashCode = hashCode * 59 + this.Companystatus.GetHashCode();
                if (this.Membercontribution != null)
                    hashCode = hashCode * 59 + this.Membercontribution.GetHashCode();
                if (this.Membersize != null)
                    hashCode = hashCode * 59 + this.Membersize.GetHashCode();
                if (this.PhysicaladdresS1 != null)
                    hashCode = hashCode * 59 + this.PhysicaladdresS1.GetHashCode();
                if (this.PhysicaladdresS2 != null)
                    hashCode = hashCode * 59 + this.PhysicaladdresS2.GetHashCode();
                if (this.PhysicaladdresS3 != null)
                    hashCode = hashCode * 59 + this.PhysicaladdresS3.GetHashCode();
                if (this.PhysicaladdresS4 != null)
                    hashCode = hashCode * 59 + this.PhysicaladdresS4.GetHashCode();
                if (this.Physicalpostcode != null)
                    hashCode = hashCode * 59 + this.Physicalpostcode.GetHashCode();
                if (this.Position != null)
                    hashCode = hashCode * 59 + this.Position.GetHashCode();
                if (this.Principaltype != null)
                    hashCode = hashCode * 59 + this.Principaltype.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.Statusdate != null)
                    hashCode = hashCode * 59 + this.Statusdate.GetHashCode();
                if (this.Taxnumber != null)
                    hashCode = hashCode * 59 + this.Taxnumber.GetHashCode();
                if (this.Vatnumber != null)
                    hashCode = hashCode * 59 + this.Vatnumber.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
