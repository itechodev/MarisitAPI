/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118PolicySummaryPS
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118PolicySummaryPS :  IEquatable<TransunionConsumer118PolicySummaryPS>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118PolicySummaryPS" /> class.
        /// </summary>
        /// <param name="requestIndicator">requestIndicator.</param>
        /// <param name="numberofActiveOwnPolicies">numberofActiveOwnPolicies.</param>
        /// <param name="numberofActiveOtherPolicies">numberofActiveOtherPolicies.</param>
        /// <param name="numberofInactiveOwnPolicies">numberofInactiveOwnPolicies.</param>
        /// <param name="numberofInactiveOtherPolicies">numberofInactiveOtherPolicies.</param>
        /// <param name="totalNumberofOwnPolicies">totalNumberofOwnPolicies.</param>
        /// <param name="totalNumberofOtherPolicies">totalNumberofOtherPolicies.</param>
        public TransunionConsumer118PolicySummaryPS(string requestIndicator = default(string), string numberofActiveOwnPolicies = default(string), string numberofActiveOtherPolicies = default(string), string numberofInactiveOwnPolicies = default(string), string numberofInactiveOtherPolicies = default(string), string totalNumberofOwnPolicies = default(string), string totalNumberofOtherPolicies = default(string))
        {
            this.RequestIndicator = requestIndicator;
            this.NumberofActiveOwnPolicies = numberofActiveOwnPolicies;
            this.NumberofActiveOtherPolicies = numberofActiveOtherPolicies;
            this.NumberofInactiveOwnPolicies = numberofInactiveOwnPolicies;
            this.NumberofInactiveOtherPolicies = numberofInactiveOtherPolicies;
            this.TotalNumberofOwnPolicies = totalNumberofOwnPolicies;
            this.TotalNumberofOtherPolicies = totalNumberofOtherPolicies;
            this.RequestIndicator = requestIndicator;
            this.NumberofActiveOwnPolicies = numberofActiveOwnPolicies;
            this.NumberofActiveOtherPolicies = numberofActiveOtherPolicies;
            this.NumberofInactiveOwnPolicies = numberofInactiveOwnPolicies;
            this.NumberofInactiveOtherPolicies = numberofInactiveOtherPolicies;
            this.TotalNumberofOwnPolicies = totalNumberofOwnPolicies;
            this.TotalNumberofOtherPolicies = totalNumberofOtherPolicies;
        }

        /// <summary>
        /// Gets or Sets RequestIndicator
        /// </summary>
        [DataMember(Name="requestIndicator", EmitDefaultValue=true)]
        public string RequestIndicator { get; set; }

        /// <summary>
        /// Gets or Sets NumberofActiveOwnPolicies
        /// </summary>
        [DataMember(Name="numberofActiveOwnPolicies", EmitDefaultValue=true)]
        public string NumberofActiveOwnPolicies { get; set; }

        /// <summary>
        /// Gets or Sets NumberofActiveOtherPolicies
        /// </summary>
        [DataMember(Name="numberofActiveOtherPolicies", EmitDefaultValue=true)]
        public string NumberofActiveOtherPolicies { get; set; }

        /// <summary>
        /// Gets or Sets NumberofInactiveOwnPolicies
        /// </summary>
        [DataMember(Name="numberofInactiveOwnPolicies", EmitDefaultValue=true)]
        public string NumberofInactiveOwnPolicies { get; set; }

        /// <summary>
        /// Gets or Sets NumberofInactiveOtherPolicies
        /// </summary>
        [DataMember(Name="numberofInactiveOtherPolicies", EmitDefaultValue=true)]
        public string NumberofInactiveOtherPolicies { get; set; }

        /// <summary>
        /// Gets or Sets TotalNumberofOwnPolicies
        /// </summary>
        [DataMember(Name="totalNumberofOwnPolicies", EmitDefaultValue=true)]
        public string TotalNumberofOwnPolicies { get; set; }

        /// <summary>
        /// Gets or Sets TotalNumberofOtherPolicies
        /// </summary>
        [DataMember(Name="totalNumberofOtherPolicies", EmitDefaultValue=true)]
        public string TotalNumberofOtherPolicies { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118PolicySummaryPS {\n");
            sb.Append("  RequestIndicator: ").Append(RequestIndicator).Append("\n");
            sb.Append("  NumberofActiveOwnPolicies: ").Append(NumberofActiveOwnPolicies).Append("\n");
            sb.Append("  NumberofActiveOtherPolicies: ").Append(NumberofActiveOtherPolicies).Append("\n");
            sb.Append("  NumberofInactiveOwnPolicies: ").Append(NumberofInactiveOwnPolicies).Append("\n");
            sb.Append("  NumberofInactiveOtherPolicies: ").Append(NumberofInactiveOtherPolicies).Append("\n");
            sb.Append("  TotalNumberofOwnPolicies: ").Append(TotalNumberofOwnPolicies).Append("\n");
            sb.Append("  TotalNumberofOtherPolicies: ").Append(TotalNumberofOtherPolicies).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118PolicySummaryPS);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118PolicySummaryPS instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118PolicySummaryPS to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118PolicySummaryPS input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.RequestIndicator == input.RequestIndicator ||
                    (this.RequestIndicator != null &&
                    this.RequestIndicator.Equals(input.RequestIndicator))
                ) && 
                (
                    this.NumberofActiveOwnPolicies == input.NumberofActiveOwnPolicies ||
                    (this.NumberofActiveOwnPolicies != null &&
                    this.NumberofActiveOwnPolicies.Equals(input.NumberofActiveOwnPolicies))
                ) && 
                (
                    this.NumberofActiveOtherPolicies == input.NumberofActiveOtherPolicies ||
                    (this.NumberofActiveOtherPolicies != null &&
                    this.NumberofActiveOtherPolicies.Equals(input.NumberofActiveOtherPolicies))
                ) && 
                (
                    this.NumberofInactiveOwnPolicies == input.NumberofInactiveOwnPolicies ||
                    (this.NumberofInactiveOwnPolicies != null &&
                    this.NumberofInactiveOwnPolicies.Equals(input.NumberofInactiveOwnPolicies))
                ) && 
                (
                    this.NumberofInactiveOtherPolicies == input.NumberofInactiveOtherPolicies ||
                    (this.NumberofInactiveOtherPolicies != null &&
                    this.NumberofInactiveOtherPolicies.Equals(input.NumberofInactiveOtherPolicies))
                ) && 
                (
                    this.TotalNumberofOwnPolicies == input.TotalNumberofOwnPolicies ||
                    (this.TotalNumberofOwnPolicies != null &&
                    this.TotalNumberofOwnPolicies.Equals(input.TotalNumberofOwnPolicies))
                ) && 
                (
                    this.TotalNumberofOtherPolicies == input.TotalNumberofOtherPolicies ||
                    (this.TotalNumberofOtherPolicies != null &&
                    this.TotalNumberofOtherPolicies.Equals(input.TotalNumberofOtherPolicies))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RequestIndicator != null)
                    hashCode = hashCode * 59 + this.RequestIndicator.GetHashCode();
                if (this.NumberofActiveOwnPolicies != null)
                    hashCode = hashCode * 59 + this.NumberofActiveOwnPolicies.GetHashCode();
                if (this.NumberofActiveOtherPolicies != null)
                    hashCode = hashCode * 59 + this.NumberofActiveOtherPolicies.GetHashCode();
                if (this.NumberofInactiveOwnPolicies != null)
                    hashCode = hashCode * 59 + this.NumberofInactiveOwnPolicies.GetHashCode();
                if (this.NumberofInactiveOtherPolicies != null)
                    hashCode = hashCode * 59 + this.NumberofInactiveOtherPolicies.GetHashCode();
                if (this.TotalNumberofOwnPolicies != null)
                    hashCode = hashCode * 59 + this.TotalNumberofOwnPolicies.GetHashCode();
                if (this.TotalNumberofOtherPolicies != null)
                    hashCode = hashCode * 59 + this.TotalNumberofOtherPolicies.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
