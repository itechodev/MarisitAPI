/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialConsumerNotice
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialConsumerNotice :  IEquatable<TransunionCommercialConsumerNotice>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialConsumerNotice" /> class.
        /// </summary>
        /// <param name="majorProduct">majorProduct.</param>
        /// <param name="consumerNumber">consumerNumber.</param>
        /// <param name="defendantName">defendantName.</param>
        /// <param name="defNo">defNo.</param>
        /// <param name="address1">address1.</param>
        /// <param name="dateOfBirth">dateOfBirth.</param>
        /// <param name="idNo">idNo.</param>
        /// <param name="plaintiffName">plaintiffName.</param>
        /// <param name="noticeCode">noticeCode.</param>
        /// <param name="noticeDescription">noticeDescription.</param>
        /// <param name="courtTypeCode">courtTypeCode.</param>
        /// <param name="courtTypeDesc">courtTypeDesc.</param>
        /// <param name="courtCode">courtCode.</param>
        /// <param name="courtName">courtName.</param>
        /// <param name="amount">amount.</param>
        /// <param name="caseNumber">caseNumber.</param>
        /// <param name="noticeDate">noticeDate.</param>
        /// <param name="captureDate">captureDate.</param>
        /// <param name="masterNo">masterNo.</param>
        /// <param name="attorneyName">attorneyName.</param>
        /// <param name="attorneyReference">attorneyReference.</param>
        /// <param name="attorneyPhone">attorneyPhone.</param>
        /// <param name="remarks">remarks.</param>
        /// <param name="transType">transType.</param>
        /// <param name="message">message.</param>
        public TransunionCommercialConsumerNotice(string majorProduct = default(string), string consumerNumber = default(string), string defendantName = default(string), string defNo = default(string), string address1 = default(string), string dateOfBirth = default(string), string idNo = default(string), string plaintiffName = default(string), string noticeCode = default(string), string noticeDescription = default(string), string courtTypeCode = default(string), string courtTypeDesc = default(string), string courtCode = default(string), string courtName = default(string), string amount = default(string), string caseNumber = default(string), string noticeDate = default(string), string captureDate = default(string), string masterNo = default(string), string attorneyName = default(string), string attorneyReference = default(string), string attorneyPhone = default(string), string remarks = default(string), string transType = default(string), string message = default(string))
        {
            this.MajorProduct = majorProduct;
            this.ConsumerNumber = consumerNumber;
            this.DefendantName = defendantName;
            this.DefNo = defNo;
            this.Address1 = address1;
            this.DateOfBirth = dateOfBirth;
            this.IdNo = idNo;
            this.PlaintiffName = plaintiffName;
            this.NoticeCode = noticeCode;
            this.NoticeDescription = noticeDescription;
            this.CourtTypeCode = courtTypeCode;
            this.CourtTypeDesc = courtTypeDesc;
            this.CourtCode = courtCode;
            this.CourtName = courtName;
            this.Amount = amount;
            this.CaseNumber = caseNumber;
            this.NoticeDate = noticeDate;
            this.CaptureDate = captureDate;
            this.MasterNo = masterNo;
            this.AttorneyName = attorneyName;
            this.AttorneyReference = attorneyReference;
            this.AttorneyPhone = attorneyPhone;
            this.Remarks = remarks;
            this.TransType = transType;
            this.Message = message;
            this.MajorProduct = majorProduct;
            this.ConsumerNumber = consumerNumber;
            this.DefendantName = defendantName;
            this.DefNo = defNo;
            this.Address1 = address1;
            this.DateOfBirth = dateOfBirth;
            this.IdNo = idNo;
            this.PlaintiffName = plaintiffName;
            this.NoticeCode = noticeCode;
            this.NoticeDescription = noticeDescription;
            this.CourtTypeCode = courtTypeCode;
            this.CourtTypeDesc = courtTypeDesc;
            this.CourtCode = courtCode;
            this.CourtName = courtName;
            this.Amount = amount;
            this.CaseNumber = caseNumber;
            this.NoticeDate = noticeDate;
            this.CaptureDate = captureDate;
            this.MasterNo = masterNo;
            this.AttorneyName = attorneyName;
            this.AttorneyReference = attorneyReference;
            this.AttorneyPhone = attorneyPhone;
            this.Remarks = remarks;
            this.TransType = transType;
            this.Message = message;
        }

        /// <summary>
        /// Gets or Sets MajorProduct
        /// </summary>
        [DataMember(Name="majorProduct", EmitDefaultValue=true)]
        public string MajorProduct { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerNumber
        /// </summary>
        [DataMember(Name="consumerNumber", EmitDefaultValue=true)]
        public string ConsumerNumber { get; set; }

        /// <summary>
        /// Gets or Sets DefendantName
        /// </summary>
        [DataMember(Name="defendantName", EmitDefaultValue=true)]
        public string DefendantName { get; set; }

        /// <summary>
        /// Gets or Sets DefNo
        /// </summary>
        [DataMember(Name="defNo", EmitDefaultValue=true)]
        public string DefNo { get; set; }

        /// <summary>
        /// Gets or Sets Address1
        /// </summary>
        [DataMember(Name="address1", EmitDefaultValue=true)]
        public string Address1 { get; set; }

        /// <summary>
        /// Gets or Sets DateOfBirth
        /// </summary>
        [DataMember(Name="dateOfBirth", EmitDefaultValue=true)]
        public string DateOfBirth { get; set; }

        /// <summary>
        /// Gets or Sets IdNo
        /// </summary>
        [DataMember(Name="idNo", EmitDefaultValue=true)]
        public string IdNo { get; set; }

        /// <summary>
        /// Gets or Sets PlaintiffName
        /// </summary>
        [DataMember(Name="plaintiffName", EmitDefaultValue=true)]
        public string PlaintiffName { get; set; }

        /// <summary>
        /// Gets or Sets NoticeCode
        /// </summary>
        [DataMember(Name="noticeCode", EmitDefaultValue=true)]
        public string NoticeCode { get; set; }

        /// <summary>
        /// Gets or Sets NoticeDescription
        /// </summary>
        [DataMember(Name="noticeDescription", EmitDefaultValue=true)]
        public string NoticeDescription { get; set; }

        /// <summary>
        /// Gets or Sets CourtTypeCode
        /// </summary>
        [DataMember(Name="courtTypeCode", EmitDefaultValue=true)]
        public string CourtTypeCode { get; set; }

        /// <summary>
        /// Gets or Sets CourtTypeDesc
        /// </summary>
        [DataMember(Name="courtTypeDesc", EmitDefaultValue=true)]
        public string CourtTypeDesc { get; set; }

        /// <summary>
        /// Gets or Sets CourtCode
        /// </summary>
        [DataMember(Name="courtCode", EmitDefaultValue=true)]
        public string CourtCode { get; set; }

        /// <summary>
        /// Gets or Sets CourtName
        /// </summary>
        [DataMember(Name="courtName", EmitDefaultValue=true)]
        public string CourtName { get; set; }

        /// <summary>
        /// Gets or Sets Amount
        /// </summary>
        [DataMember(Name="amount", EmitDefaultValue=true)]
        public string Amount { get; set; }

        /// <summary>
        /// Gets or Sets CaseNumber
        /// </summary>
        [DataMember(Name="caseNumber", EmitDefaultValue=true)]
        public string CaseNumber { get; set; }

        /// <summary>
        /// Gets or Sets NoticeDate
        /// </summary>
        [DataMember(Name="noticeDate", EmitDefaultValue=true)]
        public string NoticeDate { get; set; }

        /// <summary>
        /// Gets or Sets CaptureDate
        /// </summary>
        [DataMember(Name="captureDate", EmitDefaultValue=true)]
        public string CaptureDate { get; set; }

        /// <summary>
        /// Gets or Sets MasterNo
        /// </summary>
        [DataMember(Name="masterNo", EmitDefaultValue=true)]
        public string MasterNo { get; set; }

        /// <summary>
        /// Gets or Sets AttorneyName
        /// </summary>
        [DataMember(Name="attorneyName", EmitDefaultValue=true)]
        public string AttorneyName { get; set; }

        /// <summary>
        /// Gets or Sets AttorneyReference
        /// </summary>
        [DataMember(Name="attorneyReference", EmitDefaultValue=true)]
        public string AttorneyReference { get; set; }

        /// <summary>
        /// Gets or Sets AttorneyPhone
        /// </summary>
        [DataMember(Name="attorneyPhone", EmitDefaultValue=true)]
        public string AttorneyPhone { get; set; }

        /// <summary>
        /// Gets or Sets Remarks
        /// </summary>
        [DataMember(Name="remarks", EmitDefaultValue=true)]
        public string Remarks { get; set; }

        /// <summary>
        /// Gets or Sets TransType
        /// </summary>
        [DataMember(Name="transType", EmitDefaultValue=true)]
        public string TransType { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name="message", EmitDefaultValue=true)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialConsumerNotice {\n");
            sb.Append("  MajorProduct: ").Append(MajorProduct).Append("\n");
            sb.Append("  ConsumerNumber: ").Append(ConsumerNumber).Append("\n");
            sb.Append("  DefendantName: ").Append(DefendantName).Append("\n");
            sb.Append("  DefNo: ").Append(DefNo).Append("\n");
            sb.Append("  Address1: ").Append(Address1).Append("\n");
            sb.Append("  DateOfBirth: ").Append(DateOfBirth).Append("\n");
            sb.Append("  IdNo: ").Append(IdNo).Append("\n");
            sb.Append("  PlaintiffName: ").Append(PlaintiffName).Append("\n");
            sb.Append("  NoticeCode: ").Append(NoticeCode).Append("\n");
            sb.Append("  NoticeDescription: ").Append(NoticeDescription).Append("\n");
            sb.Append("  CourtTypeCode: ").Append(CourtTypeCode).Append("\n");
            sb.Append("  CourtTypeDesc: ").Append(CourtTypeDesc).Append("\n");
            sb.Append("  CourtCode: ").Append(CourtCode).Append("\n");
            sb.Append("  CourtName: ").Append(CourtName).Append("\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  CaseNumber: ").Append(CaseNumber).Append("\n");
            sb.Append("  NoticeDate: ").Append(NoticeDate).Append("\n");
            sb.Append("  CaptureDate: ").Append(CaptureDate).Append("\n");
            sb.Append("  MasterNo: ").Append(MasterNo).Append("\n");
            sb.Append("  AttorneyName: ").Append(AttorneyName).Append("\n");
            sb.Append("  AttorneyReference: ").Append(AttorneyReference).Append("\n");
            sb.Append("  AttorneyPhone: ").Append(AttorneyPhone).Append("\n");
            sb.Append("  Remarks: ").Append(Remarks).Append("\n");
            sb.Append("  TransType: ").Append(TransType).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialConsumerNotice);
        }

        /// <summary>
        /// Returns true if TransunionCommercialConsumerNotice instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialConsumerNotice to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialConsumerNotice input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MajorProduct == input.MajorProduct ||
                    (this.MajorProduct != null &&
                    this.MajorProduct.Equals(input.MajorProduct))
                ) && 
                (
                    this.ConsumerNumber == input.ConsumerNumber ||
                    (this.ConsumerNumber != null &&
                    this.ConsumerNumber.Equals(input.ConsumerNumber))
                ) && 
                (
                    this.DefendantName == input.DefendantName ||
                    (this.DefendantName != null &&
                    this.DefendantName.Equals(input.DefendantName))
                ) && 
                (
                    this.DefNo == input.DefNo ||
                    (this.DefNo != null &&
                    this.DefNo.Equals(input.DefNo))
                ) && 
                (
                    this.Address1 == input.Address1 ||
                    (this.Address1 != null &&
                    this.Address1.Equals(input.Address1))
                ) && 
                (
                    this.DateOfBirth == input.DateOfBirth ||
                    (this.DateOfBirth != null &&
                    this.DateOfBirth.Equals(input.DateOfBirth))
                ) && 
                (
                    this.IdNo == input.IdNo ||
                    (this.IdNo != null &&
                    this.IdNo.Equals(input.IdNo))
                ) && 
                (
                    this.PlaintiffName == input.PlaintiffName ||
                    (this.PlaintiffName != null &&
                    this.PlaintiffName.Equals(input.PlaintiffName))
                ) && 
                (
                    this.NoticeCode == input.NoticeCode ||
                    (this.NoticeCode != null &&
                    this.NoticeCode.Equals(input.NoticeCode))
                ) && 
                (
                    this.NoticeDescription == input.NoticeDescription ||
                    (this.NoticeDescription != null &&
                    this.NoticeDescription.Equals(input.NoticeDescription))
                ) && 
                (
                    this.CourtTypeCode == input.CourtTypeCode ||
                    (this.CourtTypeCode != null &&
                    this.CourtTypeCode.Equals(input.CourtTypeCode))
                ) && 
                (
                    this.CourtTypeDesc == input.CourtTypeDesc ||
                    (this.CourtTypeDesc != null &&
                    this.CourtTypeDesc.Equals(input.CourtTypeDesc))
                ) && 
                (
                    this.CourtCode == input.CourtCode ||
                    (this.CourtCode != null &&
                    this.CourtCode.Equals(input.CourtCode))
                ) && 
                (
                    this.CourtName == input.CourtName ||
                    (this.CourtName != null &&
                    this.CourtName.Equals(input.CourtName))
                ) && 
                (
                    this.Amount == input.Amount ||
                    (this.Amount != null &&
                    this.Amount.Equals(input.Amount))
                ) && 
                (
                    this.CaseNumber == input.CaseNumber ||
                    (this.CaseNumber != null &&
                    this.CaseNumber.Equals(input.CaseNumber))
                ) && 
                (
                    this.NoticeDate == input.NoticeDate ||
                    (this.NoticeDate != null &&
                    this.NoticeDate.Equals(input.NoticeDate))
                ) && 
                (
                    this.CaptureDate == input.CaptureDate ||
                    (this.CaptureDate != null &&
                    this.CaptureDate.Equals(input.CaptureDate))
                ) && 
                (
                    this.MasterNo == input.MasterNo ||
                    (this.MasterNo != null &&
                    this.MasterNo.Equals(input.MasterNo))
                ) && 
                (
                    this.AttorneyName == input.AttorneyName ||
                    (this.AttorneyName != null &&
                    this.AttorneyName.Equals(input.AttorneyName))
                ) && 
                (
                    this.AttorneyReference == input.AttorneyReference ||
                    (this.AttorneyReference != null &&
                    this.AttorneyReference.Equals(input.AttorneyReference))
                ) && 
                (
                    this.AttorneyPhone == input.AttorneyPhone ||
                    (this.AttorneyPhone != null &&
                    this.AttorneyPhone.Equals(input.AttorneyPhone))
                ) && 
                (
                    this.Remarks == input.Remarks ||
                    (this.Remarks != null &&
                    this.Remarks.Equals(input.Remarks))
                ) && 
                (
                    this.TransType == input.TransType ||
                    (this.TransType != null &&
                    this.TransType.Equals(input.TransType))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MajorProduct != null)
                    hashCode = hashCode * 59 + this.MajorProduct.GetHashCode();
                if (this.ConsumerNumber != null)
                    hashCode = hashCode * 59 + this.ConsumerNumber.GetHashCode();
                if (this.DefendantName != null)
                    hashCode = hashCode * 59 + this.DefendantName.GetHashCode();
                if (this.DefNo != null)
                    hashCode = hashCode * 59 + this.DefNo.GetHashCode();
                if (this.Address1 != null)
                    hashCode = hashCode * 59 + this.Address1.GetHashCode();
                if (this.DateOfBirth != null)
                    hashCode = hashCode * 59 + this.DateOfBirth.GetHashCode();
                if (this.IdNo != null)
                    hashCode = hashCode * 59 + this.IdNo.GetHashCode();
                if (this.PlaintiffName != null)
                    hashCode = hashCode * 59 + this.PlaintiffName.GetHashCode();
                if (this.NoticeCode != null)
                    hashCode = hashCode * 59 + this.NoticeCode.GetHashCode();
                if (this.NoticeDescription != null)
                    hashCode = hashCode * 59 + this.NoticeDescription.GetHashCode();
                if (this.CourtTypeCode != null)
                    hashCode = hashCode * 59 + this.CourtTypeCode.GetHashCode();
                if (this.CourtTypeDesc != null)
                    hashCode = hashCode * 59 + this.CourtTypeDesc.GetHashCode();
                if (this.CourtCode != null)
                    hashCode = hashCode * 59 + this.CourtCode.GetHashCode();
                if (this.CourtName != null)
                    hashCode = hashCode * 59 + this.CourtName.GetHashCode();
                if (this.Amount != null)
                    hashCode = hashCode * 59 + this.Amount.GetHashCode();
                if (this.CaseNumber != null)
                    hashCode = hashCode * 59 + this.CaseNumber.GetHashCode();
                if (this.NoticeDate != null)
                    hashCode = hashCode * 59 + this.NoticeDate.GetHashCode();
                if (this.CaptureDate != null)
                    hashCode = hashCode * 59 + this.CaptureDate.GetHashCode();
                if (this.MasterNo != null)
                    hashCode = hashCode * 59 + this.MasterNo.GetHashCode();
                if (this.AttorneyName != null)
                    hashCode = hashCode * 59 + this.AttorneyName.GetHashCode();
                if (this.AttorneyReference != null)
                    hashCode = hashCode * 59 + this.AttorneyReference.GetHashCode();
                if (this.AttorneyPhone != null)
                    hashCode = hashCode * 59 + this.AttorneyPhone.GetHashCode();
                if (this.Remarks != null)
                    hashCode = hashCode * 59 + this.Remarks.GetHashCode();
                if (this.TransType != null)
                    hashCode = hashCode * 59 + this.TransType.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
