/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118DriversLicenseInformationUX
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118DriversLicenseInformationUX :  IEquatable<TransunionConsumer118DriversLicenseInformationUX>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118DriversLicenseInformationUX" /> class.
        /// </summary>
        /// <param name="driversLicenseNumber">driversLicenseNumber.</param>
        /// <param name="validFromDate">validFromDate.</param>
        /// <param name="validToDate">validToDate.</param>
        /// <param name="licenseCode">licenseCode.</param>
        /// <param name="licenseCodeDescription">licenseCodeDescription.</param>
        /// <param name="dateOfFirstIssue">dateOfFirstIssue.</param>
        /// <param name="idDocumentTypeCode">idDocumentTypeCode.</param>
        /// <param name="idDocumentDesciption">idDocumentDesciption.</param>
        /// <param name="idDocumentNumber">idDocumentNumber.</param>
        /// <param name="surname">surname.</param>
        /// <param name="driverRestrictionCode">driverRestrictionCode.</param>
        /// <param name="driverRestrictionDescription">driverRestrictionDescription.</param>
        /// <param name="vehicleRestrictionCode">vehicleRestrictionCode.</param>
        /// <param name="vehicleRestrictionDescription">vehicleRestrictionDescription.</param>
        /// <param name="driverRestrictionCodeD">driverRestrictionCodeD.</param>
        /// <param name="driverRestrictionDescriptionD">driverRestrictionDescriptionD.</param>
        /// <param name="driverRestrictionCodeG">driverRestrictionCodeG.</param>
        /// <param name="driverRestrictionDescriptionG">driverRestrictionDescriptionG.</param>
        /// <param name="driverRestrictionCodeP">driverRestrictionCodeP.</param>
        /// <param name="driverRestrictionDescriptionP">driverRestrictionDescriptionP.</param>
        /// <param name="driverRestrictionCodeX">driverRestrictionCodeX.</param>
        /// <param name="driverRestrictionDescriptionX">driverRestrictionDescriptionX.</param>
        /// <param name="driverRestrictionCodeY">driverRestrictionCodeY.</param>
        /// <param name="driverRestrictionDescriptionY">driverRestrictionDescriptionY.</param>
        /// <param name="naTISEnquiryDate">naTISEnquiryDate.</param>
        public TransunionConsumer118DriversLicenseInformationUX(string driversLicenseNumber = default(string), string validFromDate = default(string), string validToDate = default(string), string licenseCode = default(string), string licenseCodeDescription = default(string), string dateOfFirstIssue = default(string), string idDocumentTypeCode = default(string), string idDocumentDesciption = default(string), string idDocumentNumber = default(string), string surname = default(string), string driverRestrictionCode = default(string), string driverRestrictionDescription = default(string), string vehicleRestrictionCode = default(string), string vehicleRestrictionDescription = default(string), string driverRestrictionCodeD = default(string), string driverRestrictionDescriptionD = default(string), string driverRestrictionCodeG = default(string), string driverRestrictionDescriptionG = default(string), string driverRestrictionCodeP = default(string), string driverRestrictionDescriptionP = default(string), string driverRestrictionCodeX = default(string), string driverRestrictionDescriptionX = default(string), string driverRestrictionCodeY = default(string), string driverRestrictionDescriptionY = default(string), string naTISEnquiryDate = default(string))
        {
            this.DriversLicenseNumber = driversLicenseNumber;
            this.ValidFromDate = validFromDate;
            this.ValidToDate = validToDate;
            this.LicenseCode = licenseCode;
            this.LicenseCodeDescription = licenseCodeDescription;
            this.DateOfFirstIssue = dateOfFirstIssue;
            this.IdDocumentTypeCode = idDocumentTypeCode;
            this.IdDocumentDesciption = idDocumentDesciption;
            this.IdDocumentNumber = idDocumentNumber;
            this.Surname = surname;
            this.DriverRestrictionCode = driverRestrictionCode;
            this.DriverRestrictionDescription = driverRestrictionDescription;
            this.VehicleRestrictionCode = vehicleRestrictionCode;
            this.VehicleRestrictionDescription = vehicleRestrictionDescription;
            this.DriverRestrictionCodeD = driverRestrictionCodeD;
            this.DriverRestrictionDescriptionD = driverRestrictionDescriptionD;
            this.DriverRestrictionCodeG = driverRestrictionCodeG;
            this.DriverRestrictionDescriptionG = driverRestrictionDescriptionG;
            this.DriverRestrictionCodeP = driverRestrictionCodeP;
            this.DriverRestrictionDescriptionP = driverRestrictionDescriptionP;
            this.DriverRestrictionCodeX = driverRestrictionCodeX;
            this.DriverRestrictionDescriptionX = driverRestrictionDescriptionX;
            this.DriverRestrictionCodeY = driverRestrictionCodeY;
            this.DriverRestrictionDescriptionY = driverRestrictionDescriptionY;
            this.NaTISEnquiryDate = naTISEnquiryDate;
            this.DriversLicenseNumber = driversLicenseNumber;
            this.ValidFromDate = validFromDate;
            this.ValidToDate = validToDate;
            this.LicenseCode = licenseCode;
            this.LicenseCodeDescription = licenseCodeDescription;
            this.DateOfFirstIssue = dateOfFirstIssue;
            this.IdDocumentTypeCode = idDocumentTypeCode;
            this.IdDocumentDesciption = idDocumentDesciption;
            this.IdDocumentNumber = idDocumentNumber;
            this.Surname = surname;
            this.DriverRestrictionCode = driverRestrictionCode;
            this.DriverRestrictionDescription = driverRestrictionDescription;
            this.VehicleRestrictionCode = vehicleRestrictionCode;
            this.VehicleRestrictionDescription = vehicleRestrictionDescription;
            this.DriverRestrictionCodeD = driverRestrictionCodeD;
            this.DriverRestrictionDescriptionD = driverRestrictionDescriptionD;
            this.DriverRestrictionCodeG = driverRestrictionCodeG;
            this.DriverRestrictionDescriptionG = driverRestrictionDescriptionG;
            this.DriverRestrictionCodeP = driverRestrictionCodeP;
            this.DriverRestrictionDescriptionP = driverRestrictionDescriptionP;
            this.DriverRestrictionCodeX = driverRestrictionCodeX;
            this.DriverRestrictionDescriptionX = driverRestrictionDescriptionX;
            this.DriverRestrictionCodeY = driverRestrictionCodeY;
            this.DriverRestrictionDescriptionY = driverRestrictionDescriptionY;
            this.NaTISEnquiryDate = naTISEnquiryDate;
        }

        /// <summary>
        /// Gets or Sets DriversLicenseNumber
        /// </summary>
        [DataMember(Name="driversLicenseNumber", EmitDefaultValue=true)]
        public string DriversLicenseNumber { get; set; }

        /// <summary>
        /// Gets or Sets ValidFromDate
        /// </summary>
        [DataMember(Name="validFromDate", EmitDefaultValue=true)]
        public string ValidFromDate { get; set; }

        /// <summary>
        /// Gets or Sets ValidToDate
        /// </summary>
        [DataMember(Name="validToDate", EmitDefaultValue=true)]
        public string ValidToDate { get; set; }

        /// <summary>
        /// Gets or Sets LicenseCode
        /// </summary>
        [DataMember(Name="licenseCode", EmitDefaultValue=true)]
        public string LicenseCode { get; set; }

        /// <summary>
        /// Gets or Sets LicenseCodeDescription
        /// </summary>
        [DataMember(Name="licenseCodeDescription", EmitDefaultValue=true)]
        public string LicenseCodeDescription { get; set; }

        /// <summary>
        /// Gets or Sets DateOfFirstIssue
        /// </summary>
        [DataMember(Name="dateOfFirstIssue", EmitDefaultValue=true)]
        public string DateOfFirstIssue { get; set; }

        /// <summary>
        /// Gets or Sets IdDocumentTypeCode
        /// </summary>
        [DataMember(Name="idDocumentTypeCode", EmitDefaultValue=true)]
        public string IdDocumentTypeCode { get; set; }

        /// <summary>
        /// Gets or Sets IdDocumentDesciption
        /// </summary>
        [DataMember(Name="idDocumentDesciption", EmitDefaultValue=true)]
        public string IdDocumentDesciption { get; set; }

        /// <summary>
        /// Gets or Sets IdDocumentNumber
        /// </summary>
        [DataMember(Name="idDocumentNumber", EmitDefaultValue=true)]
        public string IdDocumentNumber { get; set; }

        /// <summary>
        /// Gets or Sets Surname
        /// </summary>
        [DataMember(Name="surname", EmitDefaultValue=true)]
        public string Surname { get; set; }

        /// <summary>
        /// Gets or Sets DriverRestrictionCode
        /// </summary>
        [DataMember(Name="driverRestrictionCode", EmitDefaultValue=true)]
        public string DriverRestrictionCode { get; set; }

        /// <summary>
        /// Gets or Sets DriverRestrictionDescription
        /// </summary>
        [DataMember(Name="driverRestrictionDescription", EmitDefaultValue=true)]
        public string DriverRestrictionDescription { get; set; }

        /// <summary>
        /// Gets or Sets VehicleRestrictionCode
        /// </summary>
        [DataMember(Name="vehicleRestrictionCode", EmitDefaultValue=true)]
        public string VehicleRestrictionCode { get; set; }

        /// <summary>
        /// Gets or Sets VehicleRestrictionDescription
        /// </summary>
        [DataMember(Name="vehicleRestrictionDescription", EmitDefaultValue=true)]
        public string VehicleRestrictionDescription { get; set; }

        /// <summary>
        /// Gets or Sets DriverRestrictionCodeD
        /// </summary>
        [DataMember(Name="driverRestrictionCodeD", EmitDefaultValue=true)]
        public string DriverRestrictionCodeD { get; set; }

        /// <summary>
        /// Gets or Sets DriverRestrictionDescriptionD
        /// </summary>
        [DataMember(Name="driverRestrictionDescriptionD", EmitDefaultValue=true)]
        public string DriverRestrictionDescriptionD { get; set; }

        /// <summary>
        /// Gets or Sets DriverRestrictionCodeG
        /// </summary>
        [DataMember(Name="driverRestrictionCodeG", EmitDefaultValue=true)]
        public string DriverRestrictionCodeG { get; set; }

        /// <summary>
        /// Gets or Sets DriverRestrictionDescriptionG
        /// </summary>
        [DataMember(Name="driverRestrictionDescriptionG", EmitDefaultValue=true)]
        public string DriverRestrictionDescriptionG { get; set; }

        /// <summary>
        /// Gets or Sets DriverRestrictionCodeP
        /// </summary>
        [DataMember(Name="driverRestrictionCodeP", EmitDefaultValue=true)]
        public string DriverRestrictionCodeP { get; set; }

        /// <summary>
        /// Gets or Sets DriverRestrictionDescriptionP
        /// </summary>
        [DataMember(Name="driverRestrictionDescriptionP", EmitDefaultValue=true)]
        public string DriverRestrictionDescriptionP { get; set; }

        /// <summary>
        /// Gets or Sets DriverRestrictionCodeX
        /// </summary>
        [DataMember(Name="driverRestrictionCodeX", EmitDefaultValue=true)]
        public string DriverRestrictionCodeX { get; set; }

        /// <summary>
        /// Gets or Sets DriverRestrictionDescriptionX
        /// </summary>
        [DataMember(Name="driverRestrictionDescriptionX", EmitDefaultValue=true)]
        public string DriverRestrictionDescriptionX { get; set; }

        /// <summary>
        /// Gets or Sets DriverRestrictionCodeY
        /// </summary>
        [DataMember(Name="driverRestrictionCodeY", EmitDefaultValue=true)]
        public string DriverRestrictionCodeY { get; set; }

        /// <summary>
        /// Gets or Sets DriverRestrictionDescriptionY
        /// </summary>
        [DataMember(Name="driverRestrictionDescriptionY", EmitDefaultValue=true)]
        public string DriverRestrictionDescriptionY { get; set; }

        /// <summary>
        /// Gets or Sets NaTISEnquiryDate
        /// </summary>
        [DataMember(Name="naTISEnquiryDate", EmitDefaultValue=true)]
        public string NaTISEnquiryDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118DriversLicenseInformationUX {\n");
            sb.Append("  DriversLicenseNumber: ").Append(DriversLicenseNumber).Append("\n");
            sb.Append("  ValidFromDate: ").Append(ValidFromDate).Append("\n");
            sb.Append("  ValidToDate: ").Append(ValidToDate).Append("\n");
            sb.Append("  LicenseCode: ").Append(LicenseCode).Append("\n");
            sb.Append("  LicenseCodeDescription: ").Append(LicenseCodeDescription).Append("\n");
            sb.Append("  DateOfFirstIssue: ").Append(DateOfFirstIssue).Append("\n");
            sb.Append("  IdDocumentTypeCode: ").Append(IdDocumentTypeCode).Append("\n");
            sb.Append("  IdDocumentDesciption: ").Append(IdDocumentDesciption).Append("\n");
            sb.Append("  IdDocumentNumber: ").Append(IdDocumentNumber).Append("\n");
            sb.Append("  Surname: ").Append(Surname).Append("\n");
            sb.Append("  DriverRestrictionCode: ").Append(DriverRestrictionCode).Append("\n");
            sb.Append("  DriverRestrictionDescription: ").Append(DriverRestrictionDescription).Append("\n");
            sb.Append("  VehicleRestrictionCode: ").Append(VehicleRestrictionCode).Append("\n");
            sb.Append("  VehicleRestrictionDescription: ").Append(VehicleRestrictionDescription).Append("\n");
            sb.Append("  DriverRestrictionCodeD: ").Append(DriverRestrictionCodeD).Append("\n");
            sb.Append("  DriverRestrictionDescriptionD: ").Append(DriverRestrictionDescriptionD).Append("\n");
            sb.Append("  DriverRestrictionCodeG: ").Append(DriverRestrictionCodeG).Append("\n");
            sb.Append("  DriverRestrictionDescriptionG: ").Append(DriverRestrictionDescriptionG).Append("\n");
            sb.Append("  DriverRestrictionCodeP: ").Append(DriverRestrictionCodeP).Append("\n");
            sb.Append("  DriverRestrictionDescriptionP: ").Append(DriverRestrictionDescriptionP).Append("\n");
            sb.Append("  DriverRestrictionCodeX: ").Append(DriverRestrictionCodeX).Append("\n");
            sb.Append("  DriverRestrictionDescriptionX: ").Append(DriverRestrictionDescriptionX).Append("\n");
            sb.Append("  DriverRestrictionCodeY: ").Append(DriverRestrictionCodeY).Append("\n");
            sb.Append("  DriverRestrictionDescriptionY: ").Append(DriverRestrictionDescriptionY).Append("\n");
            sb.Append("  NaTISEnquiryDate: ").Append(NaTISEnquiryDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118DriversLicenseInformationUX);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118DriversLicenseInformationUX instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118DriversLicenseInformationUX to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118DriversLicenseInformationUX input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DriversLicenseNumber == input.DriversLicenseNumber ||
                    (this.DriversLicenseNumber != null &&
                    this.DriversLicenseNumber.Equals(input.DriversLicenseNumber))
                ) && 
                (
                    this.ValidFromDate == input.ValidFromDate ||
                    (this.ValidFromDate != null &&
                    this.ValidFromDate.Equals(input.ValidFromDate))
                ) && 
                (
                    this.ValidToDate == input.ValidToDate ||
                    (this.ValidToDate != null &&
                    this.ValidToDate.Equals(input.ValidToDate))
                ) && 
                (
                    this.LicenseCode == input.LicenseCode ||
                    (this.LicenseCode != null &&
                    this.LicenseCode.Equals(input.LicenseCode))
                ) && 
                (
                    this.LicenseCodeDescription == input.LicenseCodeDescription ||
                    (this.LicenseCodeDescription != null &&
                    this.LicenseCodeDescription.Equals(input.LicenseCodeDescription))
                ) && 
                (
                    this.DateOfFirstIssue == input.DateOfFirstIssue ||
                    (this.DateOfFirstIssue != null &&
                    this.DateOfFirstIssue.Equals(input.DateOfFirstIssue))
                ) && 
                (
                    this.IdDocumentTypeCode == input.IdDocumentTypeCode ||
                    (this.IdDocumentTypeCode != null &&
                    this.IdDocumentTypeCode.Equals(input.IdDocumentTypeCode))
                ) && 
                (
                    this.IdDocumentDesciption == input.IdDocumentDesciption ||
                    (this.IdDocumentDesciption != null &&
                    this.IdDocumentDesciption.Equals(input.IdDocumentDesciption))
                ) && 
                (
                    this.IdDocumentNumber == input.IdDocumentNumber ||
                    (this.IdDocumentNumber != null &&
                    this.IdDocumentNumber.Equals(input.IdDocumentNumber))
                ) && 
                (
                    this.Surname == input.Surname ||
                    (this.Surname != null &&
                    this.Surname.Equals(input.Surname))
                ) && 
                (
                    this.DriverRestrictionCode == input.DriverRestrictionCode ||
                    (this.DriverRestrictionCode != null &&
                    this.DriverRestrictionCode.Equals(input.DriverRestrictionCode))
                ) && 
                (
                    this.DriverRestrictionDescription == input.DriverRestrictionDescription ||
                    (this.DriverRestrictionDescription != null &&
                    this.DriverRestrictionDescription.Equals(input.DriverRestrictionDescription))
                ) && 
                (
                    this.VehicleRestrictionCode == input.VehicleRestrictionCode ||
                    (this.VehicleRestrictionCode != null &&
                    this.VehicleRestrictionCode.Equals(input.VehicleRestrictionCode))
                ) && 
                (
                    this.VehicleRestrictionDescription == input.VehicleRestrictionDescription ||
                    (this.VehicleRestrictionDescription != null &&
                    this.VehicleRestrictionDescription.Equals(input.VehicleRestrictionDescription))
                ) && 
                (
                    this.DriverRestrictionCodeD == input.DriverRestrictionCodeD ||
                    (this.DriverRestrictionCodeD != null &&
                    this.DriverRestrictionCodeD.Equals(input.DriverRestrictionCodeD))
                ) && 
                (
                    this.DriverRestrictionDescriptionD == input.DriverRestrictionDescriptionD ||
                    (this.DriverRestrictionDescriptionD != null &&
                    this.DriverRestrictionDescriptionD.Equals(input.DriverRestrictionDescriptionD))
                ) && 
                (
                    this.DriverRestrictionCodeG == input.DriverRestrictionCodeG ||
                    (this.DriverRestrictionCodeG != null &&
                    this.DriverRestrictionCodeG.Equals(input.DriverRestrictionCodeG))
                ) && 
                (
                    this.DriverRestrictionDescriptionG == input.DriverRestrictionDescriptionG ||
                    (this.DriverRestrictionDescriptionG != null &&
                    this.DriverRestrictionDescriptionG.Equals(input.DriverRestrictionDescriptionG))
                ) && 
                (
                    this.DriverRestrictionCodeP == input.DriverRestrictionCodeP ||
                    (this.DriverRestrictionCodeP != null &&
                    this.DriverRestrictionCodeP.Equals(input.DriverRestrictionCodeP))
                ) && 
                (
                    this.DriverRestrictionDescriptionP == input.DriverRestrictionDescriptionP ||
                    (this.DriverRestrictionDescriptionP != null &&
                    this.DriverRestrictionDescriptionP.Equals(input.DriverRestrictionDescriptionP))
                ) && 
                (
                    this.DriverRestrictionCodeX == input.DriverRestrictionCodeX ||
                    (this.DriverRestrictionCodeX != null &&
                    this.DriverRestrictionCodeX.Equals(input.DriverRestrictionCodeX))
                ) && 
                (
                    this.DriverRestrictionDescriptionX == input.DriverRestrictionDescriptionX ||
                    (this.DriverRestrictionDescriptionX != null &&
                    this.DriverRestrictionDescriptionX.Equals(input.DriverRestrictionDescriptionX))
                ) && 
                (
                    this.DriverRestrictionCodeY == input.DriverRestrictionCodeY ||
                    (this.DriverRestrictionCodeY != null &&
                    this.DriverRestrictionCodeY.Equals(input.DriverRestrictionCodeY))
                ) && 
                (
                    this.DriverRestrictionDescriptionY == input.DriverRestrictionDescriptionY ||
                    (this.DriverRestrictionDescriptionY != null &&
                    this.DriverRestrictionDescriptionY.Equals(input.DriverRestrictionDescriptionY))
                ) && 
                (
                    this.NaTISEnquiryDate == input.NaTISEnquiryDate ||
                    (this.NaTISEnquiryDate != null &&
                    this.NaTISEnquiryDate.Equals(input.NaTISEnquiryDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DriversLicenseNumber != null)
                    hashCode = hashCode * 59 + this.DriversLicenseNumber.GetHashCode();
                if (this.ValidFromDate != null)
                    hashCode = hashCode * 59 + this.ValidFromDate.GetHashCode();
                if (this.ValidToDate != null)
                    hashCode = hashCode * 59 + this.ValidToDate.GetHashCode();
                if (this.LicenseCode != null)
                    hashCode = hashCode * 59 + this.LicenseCode.GetHashCode();
                if (this.LicenseCodeDescription != null)
                    hashCode = hashCode * 59 + this.LicenseCodeDescription.GetHashCode();
                if (this.DateOfFirstIssue != null)
                    hashCode = hashCode * 59 + this.DateOfFirstIssue.GetHashCode();
                if (this.IdDocumentTypeCode != null)
                    hashCode = hashCode * 59 + this.IdDocumentTypeCode.GetHashCode();
                if (this.IdDocumentDesciption != null)
                    hashCode = hashCode * 59 + this.IdDocumentDesciption.GetHashCode();
                if (this.IdDocumentNumber != null)
                    hashCode = hashCode * 59 + this.IdDocumentNumber.GetHashCode();
                if (this.Surname != null)
                    hashCode = hashCode * 59 + this.Surname.GetHashCode();
                if (this.DriverRestrictionCode != null)
                    hashCode = hashCode * 59 + this.DriverRestrictionCode.GetHashCode();
                if (this.DriverRestrictionDescription != null)
                    hashCode = hashCode * 59 + this.DriverRestrictionDescription.GetHashCode();
                if (this.VehicleRestrictionCode != null)
                    hashCode = hashCode * 59 + this.VehicleRestrictionCode.GetHashCode();
                if (this.VehicleRestrictionDescription != null)
                    hashCode = hashCode * 59 + this.VehicleRestrictionDescription.GetHashCode();
                if (this.DriverRestrictionCodeD != null)
                    hashCode = hashCode * 59 + this.DriverRestrictionCodeD.GetHashCode();
                if (this.DriverRestrictionDescriptionD != null)
                    hashCode = hashCode * 59 + this.DriverRestrictionDescriptionD.GetHashCode();
                if (this.DriverRestrictionCodeG != null)
                    hashCode = hashCode * 59 + this.DriverRestrictionCodeG.GetHashCode();
                if (this.DriverRestrictionDescriptionG != null)
                    hashCode = hashCode * 59 + this.DriverRestrictionDescriptionG.GetHashCode();
                if (this.DriverRestrictionCodeP != null)
                    hashCode = hashCode * 59 + this.DriverRestrictionCodeP.GetHashCode();
                if (this.DriverRestrictionDescriptionP != null)
                    hashCode = hashCode * 59 + this.DriverRestrictionDescriptionP.GetHashCode();
                if (this.DriverRestrictionCodeX != null)
                    hashCode = hashCode * 59 + this.DriverRestrictionCodeX.GetHashCode();
                if (this.DriverRestrictionDescriptionX != null)
                    hashCode = hashCode * 59 + this.DriverRestrictionDescriptionX.GetHashCode();
                if (this.DriverRestrictionCodeY != null)
                    hashCode = hashCode * 59 + this.DriverRestrictionCodeY.GetHashCode();
                if (this.DriverRestrictionDescriptionY != null)
                    hashCode = hashCode * 59 + this.DriverRestrictionDescriptionY.GetHashCode();
                if (this.NaTISEnquiryDate != null)
                    hashCode = hashCode * 59 + this.NaTISEnquiryDate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
