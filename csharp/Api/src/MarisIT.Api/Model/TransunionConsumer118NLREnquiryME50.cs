/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118NLREnquiryME50
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118NLREnquiryME50 :  IEquatable<TransunionConsumer118NLREnquiryME50>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118NLREnquiryME50" /> class.
        /// </summary>
        /// <param name="consumerNo">consumerNo.</param>
        /// <param name="enquiryStatus">enquiryStatus.</param>
        /// <param name="enquiryReason">enquiryReason.</param>
        /// <param name="enquiryReferenceNumber">enquiryReferenceNumber.</param>
        /// <param name="enquiryType">enquiryType.</param>
        /// <param name="enquiryDate">enquiryDate.</param>
        /// <param name="enquirySubscriberNumber">enquirySubscriberNumber.</param>
        /// <param name="enquirySubscriberName">enquirySubscriberName.</param>
        /// <param name="enquirySubscriberContact">enquirySubscriberContact.</param>
        public TransunionConsumer118NLREnquiryME50(string consumerNo = default(string), string enquiryStatus = default(string), string enquiryReason = default(string), string enquiryReferenceNumber = default(string), string enquiryType = default(string), string enquiryDate = default(string), string enquirySubscriberNumber = default(string), string enquirySubscriberName = default(string), string enquirySubscriberContact = default(string))
        {
            this.ConsumerNo = consumerNo;
            this.EnquiryStatus = enquiryStatus;
            this.EnquiryReason = enquiryReason;
            this.EnquiryReferenceNumber = enquiryReferenceNumber;
            this.EnquiryType = enquiryType;
            this.EnquiryDate = enquiryDate;
            this.EnquirySubscriberNumber = enquirySubscriberNumber;
            this.EnquirySubscriberName = enquirySubscriberName;
            this.EnquirySubscriberContact = enquirySubscriberContact;
            this.ConsumerNo = consumerNo;
            this.EnquiryStatus = enquiryStatus;
            this.EnquiryReason = enquiryReason;
            this.EnquiryReferenceNumber = enquiryReferenceNumber;
            this.EnquiryType = enquiryType;
            this.EnquiryDate = enquiryDate;
            this.EnquirySubscriberNumber = enquirySubscriberNumber;
            this.EnquirySubscriberName = enquirySubscriberName;
            this.EnquirySubscriberContact = enquirySubscriberContact;
        }

        /// <summary>
        /// Gets or Sets ConsumerNo
        /// </summary>
        [DataMember(Name="consumerNo", EmitDefaultValue=true)]
        public string ConsumerNo { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryStatus
        /// </summary>
        [DataMember(Name="enquiryStatus", EmitDefaultValue=true)]
        public string EnquiryStatus { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryReason
        /// </summary>
        [DataMember(Name="enquiryReason", EmitDefaultValue=true)]
        public string EnquiryReason { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryReferenceNumber
        /// </summary>
        [DataMember(Name="enquiryReferenceNumber", EmitDefaultValue=true)]
        public string EnquiryReferenceNumber { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryType
        /// </summary>
        [DataMember(Name="enquiryType", EmitDefaultValue=true)]
        public string EnquiryType { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryDate
        /// </summary>
        [DataMember(Name="enquiryDate", EmitDefaultValue=true)]
        public string EnquiryDate { get; set; }

        /// <summary>
        /// Gets or Sets EnquirySubscriberNumber
        /// </summary>
        [DataMember(Name="enquirySubscriberNumber", EmitDefaultValue=true)]
        public string EnquirySubscriberNumber { get; set; }

        /// <summary>
        /// Gets or Sets EnquirySubscriberName
        /// </summary>
        [DataMember(Name="enquirySubscriberName", EmitDefaultValue=true)]
        public string EnquirySubscriberName { get; set; }

        /// <summary>
        /// Gets or Sets EnquirySubscriberContact
        /// </summary>
        [DataMember(Name="enquirySubscriberContact", EmitDefaultValue=true)]
        public string EnquirySubscriberContact { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118NLREnquiryME50 {\n");
            sb.Append("  ConsumerNo: ").Append(ConsumerNo).Append("\n");
            sb.Append("  EnquiryStatus: ").Append(EnquiryStatus).Append("\n");
            sb.Append("  EnquiryReason: ").Append(EnquiryReason).Append("\n");
            sb.Append("  EnquiryReferenceNumber: ").Append(EnquiryReferenceNumber).Append("\n");
            sb.Append("  EnquiryType: ").Append(EnquiryType).Append("\n");
            sb.Append("  EnquiryDate: ").Append(EnquiryDate).Append("\n");
            sb.Append("  EnquirySubscriberNumber: ").Append(EnquirySubscriberNumber).Append("\n");
            sb.Append("  EnquirySubscriberName: ").Append(EnquirySubscriberName).Append("\n");
            sb.Append("  EnquirySubscriberContact: ").Append(EnquirySubscriberContact).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118NLREnquiryME50);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118NLREnquiryME50 instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118NLREnquiryME50 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118NLREnquiryME50 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConsumerNo == input.ConsumerNo ||
                    (this.ConsumerNo != null &&
                    this.ConsumerNo.Equals(input.ConsumerNo))
                ) && 
                (
                    this.EnquiryStatus == input.EnquiryStatus ||
                    (this.EnquiryStatus != null &&
                    this.EnquiryStatus.Equals(input.EnquiryStatus))
                ) && 
                (
                    this.EnquiryReason == input.EnquiryReason ||
                    (this.EnquiryReason != null &&
                    this.EnquiryReason.Equals(input.EnquiryReason))
                ) && 
                (
                    this.EnquiryReferenceNumber == input.EnquiryReferenceNumber ||
                    (this.EnquiryReferenceNumber != null &&
                    this.EnquiryReferenceNumber.Equals(input.EnquiryReferenceNumber))
                ) && 
                (
                    this.EnquiryType == input.EnquiryType ||
                    (this.EnquiryType != null &&
                    this.EnquiryType.Equals(input.EnquiryType))
                ) && 
                (
                    this.EnquiryDate == input.EnquiryDate ||
                    (this.EnquiryDate != null &&
                    this.EnquiryDate.Equals(input.EnquiryDate))
                ) && 
                (
                    this.EnquirySubscriberNumber == input.EnquirySubscriberNumber ||
                    (this.EnquirySubscriberNumber != null &&
                    this.EnquirySubscriberNumber.Equals(input.EnquirySubscriberNumber))
                ) && 
                (
                    this.EnquirySubscriberName == input.EnquirySubscriberName ||
                    (this.EnquirySubscriberName != null &&
                    this.EnquirySubscriberName.Equals(input.EnquirySubscriberName))
                ) && 
                (
                    this.EnquirySubscriberContact == input.EnquirySubscriberContact ||
                    (this.EnquirySubscriberContact != null &&
                    this.EnquirySubscriberContact.Equals(input.EnquirySubscriberContact))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConsumerNo != null)
                    hashCode = hashCode * 59 + this.ConsumerNo.GetHashCode();
                if (this.EnquiryStatus != null)
                    hashCode = hashCode * 59 + this.EnquiryStatus.GetHashCode();
                if (this.EnquiryReason != null)
                    hashCode = hashCode * 59 + this.EnquiryReason.GetHashCode();
                if (this.EnquiryReferenceNumber != null)
                    hashCode = hashCode * 59 + this.EnquiryReferenceNumber.GetHashCode();
                if (this.EnquiryType != null)
                    hashCode = hashCode * 59 + this.EnquiryType.GetHashCode();
                if (this.EnquiryDate != null)
                    hashCode = hashCode * 59 + this.EnquiryDate.GetHashCode();
                if (this.EnquirySubscriberNumber != null)
                    hashCode = hashCode * 59 + this.EnquirySubscriberNumber.GetHashCode();
                if (this.EnquirySubscriberName != null)
                    hashCode = hashCode * 59 + this.EnquirySubscriberName.GetHashCode();
                if (this.EnquirySubscriberContact != null)
                    hashCode = hashCode * 59 + this.EnquirySubscriberContact.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
