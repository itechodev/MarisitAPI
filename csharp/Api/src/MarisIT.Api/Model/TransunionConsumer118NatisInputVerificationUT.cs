/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118NatisInputVerificationUT
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118NatisInputVerificationUT :  IEquatable<TransunionConsumer118NatisInputVerificationUT>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118NatisInputVerificationUT" /> class.
        /// </summary>
        /// <param name="vinChassisMatched">vinChassisMatched.</param>
        /// <param name="licenceNumberMatched">licenceNumberMatched.</param>
        /// <param name="registerNumberMatched">registerNumberMatched.</param>
        /// <param name="engineNumbersMatched">engineNumbersMatched.</param>
        /// <param name="vehicleMakeMatched">vehicleMakeMatched.</param>
        /// <param name="vehicleModelMatched">vehicleModelMatched.</param>
        public TransunionConsumer118NatisInputVerificationUT(string vinChassisMatched = default(string), string licenceNumberMatched = default(string), string registerNumberMatched = default(string), string engineNumbersMatched = default(string), string vehicleMakeMatched = default(string), string vehicleModelMatched = default(string))
        {
            this.VinChassisMatched = vinChassisMatched;
            this.LicenceNumberMatched = licenceNumberMatched;
            this.RegisterNumberMatched = registerNumberMatched;
            this.EngineNumbersMatched = engineNumbersMatched;
            this.VehicleMakeMatched = vehicleMakeMatched;
            this.VehicleModelMatched = vehicleModelMatched;
            this.VinChassisMatched = vinChassisMatched;
            this.LicenceNumberMatched = licenceNumberMatched;
            this.RegisterNumberMatched = registerNumberMatched;
            this.EngineNumbersMatched = engineNumbersMatched;
            this.VehicleMakeMatched = vehicleMakeMatched;
            this.VehicleModelMatched = vehicleModelMatched;
        }

        /// <summary>
        /// Gets or Sets VinChassisMatched
        /// </summary>
        [DataMember(Name="vinChassisMatched", EmitDefaultValue=true)]
        public string VinChassisMatched { get; set; }

        /// <summary>
        /// Gets or Sets LicenceNumberMatched
        /// </summary>
        [DataMember(Name="licenceNumberMatched", EmitDefaultValue=true)]
        public string LicenceNumberMatched { get; set; }

        /// <summary>
        /// Gets or Sets RegisterNumberMatched
        /// </summary>
        [DataMember(Name="registerNumberMatched", EmitDefaultValue=true)]
        public string RegisterNumberMatched { get; set; }

        /// <summary>
        /// Gets or Sets EngineNumbersMatched
        /// </summary>
        [DataMember(Name="engineNumbersMatched", EmitDefaultValue=true)]
        public string EngineNumbersMatched { get; set; }

        /// <summary>
        /// Gets or Sets VehicleMakeMatched
        /// </summary>
        [DataMember(Name="vehicleMakeMatched", EmitDefaultValue=true)]
        public string VehicleMakeMatched { get; set; }

        /// <summary>
        /// Gets or Sets VehicleModelMatched
        /// </summary>
        [DataMember(Name="vehicleModelMatched", EmitDefaultValue=true)]
        public string VehicleModelMatched { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118NatisInputVerificationUT {\n");
            sb.Append("  VinChassisMatched: ").Append(VinChassisMatched).Append("\n");
            sb.Append("  LicenceNumberMatched: ").Append(LicenceNumberMatched).Append("\n");
            sb.Append("  RegisterNumberMatched: ").Append(RegisterNumberMatched).Append("\n");
            sb.Append("  EngineNumbersMatched: ").Append(EngineNumbersMatched).Append("\n");
            sb.Append("  VehicleMakeMatched: ").Append(VehicleMakeMatched).Append("\n");
            sb.Append("  VehicleModelMatched: ").Append(VehicleModelMatched).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118NatisInputVerificationUT);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118NatisInputVerificationUT instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118NatisInputVerificationUT to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118NatisInputVerificationUT input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.VinChassisMatched == input.VinChassisMatched ||
                    (this.VinChassisMatched != null &&
                    this.VinChassisMatched.Equals(input.VinChassisMatched))
                ) && 
                (
                    this.LicenceNumberMatched == input.LicenceNumberMatched ||
                    (this.LicenceNumberMatched != null &&
                    this.LicenceNumberMatched.Equals(input.LicenceNumberMatched))
                ) && 
                (
                    this.RegisterNumberMatched == input.RegisterNumberMatched ||
                    (this.RegisterNumberMatched != null &&
                    this.RegisterNumberMatched.Equals(input.RegisterNumberMatched))
                ) && 
                (
                    this.EngineNumbersMatched == input.EngineNumbersMatched ||
                    (this.EngineNumbersMatched != null &&
                    this.EngineNumbersMatched.Equals(input.EngineNumbersMatched))
                ) && 
                (
                    this.VehicleMakeMatched == input.VehicleMakeMatched ||
                    (this.VehicleMakeMatched != null &&
                    this.VehicleMakeMatched.Equals(input.VehicleMakeMatched))
                ) && 
                (
                    this.VehicleModelMatched == input.VehicleModelMatched ||
                    (this.VehicleModelMatched != null &&
                    this.VehicleModelMatched.Equals(input.VehicleModelMatched))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.VinChassisMatched != null)
                    hashCode = hashCode * 59 + this.VinChassisMatched.GetHashCode();
                if (this.LicenceNumberMatched != null)
                    hashCode = hashCode * 59 + this.LicenceNumberMatched.GetHashCode();
                if (this.RegisterNumberMatched != null)
                    hashCode = hashCode * 59 + this.RegisterNumberMatched.GetHashCode();
                if (this.EngineNumbersMatched != null)
                    hashCode = hashCode * 59 + this.EngineNumbersMatched.GetHashCode();
                if (this.VehicleMakeMatched != null)
                    hashCode = hashCode * 59 + this.VehicleMakeMatched.GetHashCode();
                if (this.VehicleModelMatched != null)
                    hashCode = hashCode * 59 + this.VehicleModelMatched.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
