/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// XdsSubscriberInputDetails
    /// </summary>
    [DataContract]
    public partial class XdsSubscriberInputDetails :  IEquatable<XdsSubscriberInputDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XdsSubscriberInputDetails" /> class.
        /// </summary>
        /// <param name="accountNo">accountNo.</param>
        /// <param name="accountType">accountType.</param>
        /// <param name="bankName">bankName.</param>
        /// <param name="branchCode">branchCode.</param>
        /// <param name="enquiryStatus">enquiryStatus.</param>
        /// <param name="externalRef">externalRef.</param>
        /// <param name="referenceNo">referenceNo.</param>
        /// <param name="xdsRefNo">xdsRefNo.</param>
        /// <param name="enquiryDate">enquiryDate.</param>
        /// <param name="enquiryType">enquiryType.</param>
        /// <param name="subscriberName">subscriberName.</param>
        /// <param name="subscriberUsername">subscriberUsername.</param>
        /// <param name="enquiryInput">enquiryInput.</param>
        /// <param name="trustNumber">trustNumber.</param>
        /// <param name="prebuiltPackage">prebuiltPackage.</param>
        /// <param name="country">country.</param>
        /// <param name="registrationNumber">registrationNumber.</param>
        /// <param name="businessName">businessName.</param>
        /// <param name="vatNumber">vatNumber.</param>
        /// <param name="idNumber">idNumber.</param>
        /// <param name="npoNumber">npoNumber.</param>
        /// <param name="enquiryReference">enquiryReference.</param>
        /// <param name="externalReference">externalReference.</param>
        /// <param name="reference">reference.</param>
        /// <param name="yourReference">yourReference.</param>
        /// <param name="legalEntity">legalEntity.</param>
        /// <param name="voucherCode">voucherCode.</param>
        /// <param name="enquiryReason">enquiryReason.</param>
        /// <param name="idNo">idNo.</param>
        /// <param name="surname">surname.</param>
        /// <param name="initials">initials.</param>
        /// <param name="emailAddress">emailAddress.</param>
        /// <param name="contactNumber">contactNumber.</param>
        /// <param name="requesterFirstName">requesterFirstName.</param>
        /// <param name="requesterSurname">requesterSurname.</param>
        /// <param name="refNumber">refNumber.</param>
        public XdsSubscriberInputDetails(string accountNo = default(string), string accountType = default(string), string bankName = default(string), string branchCode = default(string), string enquiryStatus = default(string), string externalRef = default(string), string referenceNo = default(string), string xdsRefNo = default(string), string enquiryDate = default(string), string enquiryType = default(string), string subscriberName = default(string), string subscriberUsername = default(string), string enquiryInput = default(string), string trustNumber = default(string), string prebuiltPackage = default(string), string country = default(string), string registrationNumber = default(string), string businessName = default(string), string vatNumber = default(string), string idNumber = default(string), string npoNumber = default(string), string enquiryReference = default(string), string externalReference = default(string), string reference = default(string), string yourReference = default(string), string legalEntity = default(string), string voucherCode = default(string), string enquiryReason = default(string), string idNo = default(string), string surname = default(string), string initials = default(string), string emailAddress = default(string), string contactNumber = default(string), string requesterFirstName = default(string), string requesterSurname = default(string), string refNumber = default(string))
        {
            this.AccountNo = accountNo;
            this.AccountType = accountType;
            this.BankName = bankName;
            this.BranchCode = branchCode;
            this.EnquiryStatus = enquiryStatus;
            this.ExternalRef = externalRef;
            this.ReferenceNo = referenceNo;
            this.XdsRefNo = xdsRefNo;
            this.EnquiryDate = enquiryDate;
            this.EnquiryType = enquiryType;
            this.SubscriberName = subscriberName;
            this.SubscriberUsername = subscriberUsername;
            this.EnquiryInput = enquiryInput;
            this.TrustNumber = trustNumber;
            this.PrebuiltPackage = prebuiltPackage;
            this.Country = country;
            this.RegistrationNumber = registrationNumber;
            this.BusinessName = businessName;
            this.VatNumber = vatNumber;
            this.IdNumber = idNumber;
            this.NpoNumber = npoNumber;
            this.EnquiryReference = enquiryReference;
            this.ExternalReference = externalReference;
            this.Reference = reference;
            this.YourReference = yourReference;
            this.LegalEntity = legalEntity;
            this.VoucherCode = voucherCode;
            this.EnquiryReason = enquiryReason;
            this.IdNo = idNo;
            this.Surname = surname;
            this.Initials = initials;
            this.EmailAddress = emailAddress;
            this.ContactNumber = contactNumber;
            this.RequesterFirstName = requesterFirstName;
            this.RequesterSurname = requesterSurname;
            this.RefNumber = refNumber;
            this.AccountNo = accountNo;
            this.AccountType = accountType;
            this.BankName = bankName;
            this.BranchCode = branchCode;
            this.EnquiryStatus = enquiryStatus;
            this.ExternalRef = externalRef;
            this.ReferenceNo = referenceNo;
            this.XdsRefNo = xdsRefNo;
            this.EnquiryDate = enquiryDate;
            this.EnquiryType = enquiryType;
            this.SubscriberName = subscriberName;
            this.SubscriberUsername = subscriberUsername;
            this.EnquiryInput = enquiryInput;
            this.TrustNumber = trustNumber;
            this.PrebuiltPackage = prebuiltPackage;
            this.Country = country;
            this.RegistrationNumber = registrationNumber;
            this.BusinessName = businessName;
            this.VatNumber = vatNumber;
            this.IdNumber = idNumber;
            this.NpoNumber = npoNumber;
            this.EnquiryReference = enquiryReference;
            this.ExternalReference = externalReference;
            this.Reference = reference;
            this.YourReference = yourReference;
            this.LegalEntity = legalEntity;
            this.VoucherCode = voucherCode;
            this.EnquiryReason = enquiryReason;
            this.IdNo = idNo;
            this.Surname = surname;
            this.Initials = initials;
            this.EmailAddress = emailAddress;
            this.ContactNumber = contactNumber;
            this.RequesterFirstName = requesterFirstName;
            this.RequesterSurname = requesterSurname;
            this.RefNumber = refNumber;
        }

        /// <summary>
        /// Gets or Sets AccountNo
        /// </summary>
        [DataMember(Name="accountNo", EmitDefaultValue=true)]
        public string AccountNo { get; set; }

        /// <summary>
        /// Gets or Sets AccountType
        /// </summary>
        [DataMember(Name="accountType", EmitDefaultValue=true)]
        public string AccountType { get; set; }

        /// <summary>
        /// Gets or Sets BankName
        /// </summary>
        [DataMember(Name="bankName", EmitDefaultValue=true)]
        public string BankName { get; set; }

        /// <summary>
        /// Gets or Sets BranchCode
        /// </summary>
        [DataMember(Name="branchCode", EmitDefaultValue=true)]
        public string BranchCode { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryStatus
        /// </summary>
        [DataMember(Name="enquiryStatus", EmitDefaultValue=true)]
        public string EnquiryStatus { get; set; }

        /// <summary>
        /// Gets or Sets ExternalRef
        /// </summary>
        [DataMember(Name="externalRef", EmitDefaultValue=true)]
        public string ExternalRef { get; set; }

        /// <summary>
        /// Gets or Sets ReferenceNo
        /// </summary>
        [DataMember(Name="referenceNo", EmitDefaultValue=true)]
        public string ReferenceNo { get; set; }

        /// <summary>
        /// Gets or Sets XdsRefNo
        /// </summary>
        [DataMember(Name="xdsRefNo", EmitDefaultValue=true)]
        public string XdsRefNo { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryDate
        /// </summary>
        [DataMember(Name="enquiryDate", EmitDefaultValue=true)]
        public string EnquiryDate { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryType
        /// </summary>
        [DataMember(Name="enquiryType", EmitDefaultValue=true)]
        public string EnquiryType { get; set; }

        /// <summary>
        /// Gets or Sets SubscriberName
        /// </summary>
        [DataMember(Name="subscriberName", EmitDefaultValue=true)]
        public string SubscriberName { get; set; }

        /// <summary>
        /// Gets or Sets SubscriberUsername
        /// </summary>
        [DataMember(Name="subscriberUsername", EmitDefaultValue=true)]
        public string SubscriberUsername { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryInput
        /// </summary>
        [DataMember(Name="enquiryInput", EmitDefaultValue=true)]
        public string EnquiryInput { get; set; }

        /// <summary>
        /// Gets or Sets TrustNumber
        /// </summary>
        [DataMember(Name="trustNumber", EmitDefaultValue=true)]
        public string TrustNumber { get; set; }

        /// <summary>
        /// Gets or Sets PrebuiltPackage
        /// </summary>
        [DataMember(Name="prebuiltPackage", EmitDefaultValue=true)]
        public string PrebuiltPackage { get; set; }

        /// <summary>
        /// Gets or Sets Country
        /// </summary>
        [DataMember(Name="country", EmitDefaultValue=true)]
        public string Country { get; set; }

        /// <summary>
        /// Gets or Sets RegistrationNumber
        /// </summary>
        [DataMember(Name="registrationNumber", EmitDefaultValue=true)]
        public string RegistrationNumber { get; set; }

        /// <summary>
        /// Gets or Sets BusinessName
        /// </summary>
        [DataMember(Name="businessName", EmitDefaultValue=true)]
        public string BusinessName { get; set; }

        /// <summary>
        /// Gets or Sets VatNumber
        /// </summary>
        [DataMember(Name="vatNumber", EmitDefaultValue=true)]
        public string VatNumber { get; set; }

        /// <summary>
        /// Gets or Sets IdNumber
        /// </summary>
        [DataMember(Name="idNumber", EmitDefaultValue=true)]
        public string IdNumber { get; set; }

        /// <summary>
        /// Gets or Sets NpoNumber
        /// </summary>
        [DataMember(Name="npoNumber", EmitDefaultValue=true)]
        public string NpoNumber { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryReference
        /// </summary>
        [DataMember(Name="enquiryReference", EmitDefaultValue=true)]
        public string EnquiryReference { get; set; }

        /// <summary>
        /// Gets or Sets ExternalReference
        /// </summary>
        [DataMember(Name="externalReference", EmitDefaultValue=true)]
        public string ExternalReference { get; set; }

        /// <summary>
        /// Gets or Sets Reference
        /// </summary>
        [DataMember(Name="reference", EmitDefaultValue=true)]
        public string Reference { get; set; }

        /// <summary>
        /// Gets or Sets YourReference
        /// </summary>
        [DataMember(Name="yourReference", EmitDefaultValue=true)]
        public string YourReference { get; set; }

        /// <summary>
        /// Gets or Sets LegalEntity
        /// </summary>
        [DataMember(Name="legalEntity", EmitDefaultValue=true)]
        public string LegalEntity { get; set; }

        /// <summary>
        /// Gets or Sets VoucherCode
        /// </summary>
        [DataMember(Name="voucherCode", EmitDefaultValue=true)]
        public string VoucherCode { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryReason
        /// </summary>
        [DataMember(Name="enquiryReason", EmitDefaultValue=true)]
        public string EnquiryReason { get; set; }

        /// <summary>
        /// Gets or Sets IdNo
        /// </summary>
        [DataMember(Name="idNo", EmitDefaultValue=true)]
        public string IdNo { get; set; }

        /// <summary>
        /// Gets or Sets Surname
        /// </summary>
        [DataMember(Name="surname", EmitDefaultValue=true)]
        public string Surname { get; set; }

        /// <summary>
        /// Gets or Sets Initials
        /// </summary>
        [DataMember(Name="initials", EmitDefaultValue=true)]
        public string Initials { get; set; }

        /// <summary>
        /// Gets or Sets EmailAddress
        /// </summary>
        [DataMember(Name="emailAddress", EmitDefaultValue=true)]
        public string EmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets ContactNumber
        /// </summary>
        [DataMember(Name="contactNumber", EmitDefaultValue=true)]
        public string ContactNumber { get; set; }

        /// <summary>
        /// Gets or Sets RequesterFirstName
        /// </summary>
        [DataMember(Name="requesterFirstName", EmitDefaultValue=true)]
        public string RequesterFirstName { get; set; }

        /// <summary>
        /// Gets or Sets RequesterSurname
        /// </summary>
        [DataMember(Name="requesterSurname", EmitDefaultValue=true)]
        public string RequesterSurname { get; set; }

        /// <summary>
        /// Gets or Sets RefNumber
        /// </summary>
        [DataMember(Name="refNumber", EmitDefaultValue=true)]
        public string RefNumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class XdsSubscriberInputDetails {\n");
            sb.Append("  AccountNo: ").Append(AccountNo).Append("\n");
            sb.Append("  AccountType: ").Append(AccountType).Append("\n");
            sb.Append("  BankName: ").Append(BankName).Append("\n");
            sb.Append("  BranchCode: ").Append(BranchCode).Append("\n");
            sb.Append("  EnquiryStatus: ").Append(EnquiryStatus).Append("\n");
            sb.Append("  ExternalRef: ").Append(ExternalRef).Append("\n");
            sb.Append("  ReferenceNo: ").Append(ReferenceNo).Append("\n");
            sb.Append("  XdsRefNo: ").Append(XdsRefNo).Append("\n");
            sb.Append("  EnquiryDate: ").Append(EnquiryDate).Append("\n");
            sb.Append("  EnquiryType: ").Append(EnquiryType).Append("\n");
            sb.Append("  SubscriberName: ").Append(SubscriberName).Append("\n");
            sb.Append("  SubscriberUsername: ").Append(SubscriberUsername).Append("\n");
            sb.Append("  EnquiryInput: ").Append(EnquiryInput).Append("\n");
            sb.Append("  TrustNumber: ").Append(TrustNumber).Append("\n");
            sb.Append("  PrebuiltPackage: ").Append(PrebuiltPackage).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  RegistrationNumber: ").Append(RegistrationNumber).Append("\n");
            sb.Append("  BusinessName: ").Append(BusinessName).Append("\n");
            sb.Append("  VatNumber: ").Append(VatNumber).Append("\n");
            sb.Append("  IdNumber: ").Append(IdNumber).Append("\n");
            sb.Append("  NpoNumber: ").Append(NpoNumber).Append("\n");
            sb.Append("  EnquiryReference: ").Append(EnquiryReference).Append("\n");
            sb.Append("  ExternalReference: ").Append(ExternalReference).Append("\n");
            sb.Append("  Reference: ").Append(Reference).Append("\n");
            sb.Append("  YourReference: ").Append(YourReference).Append("\n");
            sb.Append("  LegalEntity: ").Append(LegalEntity).Append("\n");
            sb.Append("  VoucherCode: ").Append(VoucherCode).Append("\n");
            sb.Append("  EnquiryReason: ").Append(EnquiryReason).Append("\n");
            sb.Append("  IdNo: ").Append(IdNo).Append("\n");
            sb.Append("  Surname: ").Append(Surname).Append("\n");
            sb.Append("  Initials: ").Append(Initials).Append("\n");
            sb.Append("  EmailAddress: ").Append(EmailAddress).Append("\n");
            sb.Append("  ContactNumber: ").Append(ContactNumber).Append("\n");
            sb.Append("  RequesterFirstName: ").Append(RequesterFirstName).Append("\n");
            sb.Append("  RequesterSurname: ").Append(RequesterSurname).Append("\n");
            sb.Append("  RefNumber: ").Append(RefNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as XdsSubscriberInputDetails);
        }

        /// <summary>
        /// Returns true if XdsSubscriberInputDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of XdsSubscriberInputDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(XdsSubscriberInputDetails input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AccountNo == input.AccountNo ||
                    (this.AccountNo != null &&
                    this.AccountNo.Equals(input.AccountNo))
                ) && 
                (
                    this.AccountType == input.AccountType ||
                    (this.AccountType != null &&
                    this.AccountType.Equals(input.AccountType))
                ) && 
                (
                    this.BankName == input.BankName ||
                    (this.BankName != null &&
                    this.BankName.Equals(input.BankName))
                ) && 
                (
                    this.BranchCode == input.BranchCode ||
                    (this.BranchCode != null &&
                    this.BranchCode.Equals(input.BranchCode))
                ) && 
                (
                    this.EnquiryStatus == input.EnquiryStatus ||
                    (this.EnquiryStatus != null &&
                    this.EnquiryStatus.Equals(input.EnquiryStatus))
                ) && 
                (
                    this.ExternalRef == input.ExternalRef ||
                    (this.ExternalRef != null &&
                    this.ExternalRef.Equals(input.ExternalRef))
                ) && 
                (
                    this.ReferenceNo == input.ReferenceNo ||
                    (this.ReferenceNo != null &&
                    this.ReferenceNo.Equals(input.ReferenceNo))
                ) && 
                (
                    this.XdsRefNo == input.XdsRefNo ||
                    (this.XdsRefNo != null &&
                    this.XdsRefNo.Equals(input.XdsRefNo))
                ) && 
                (
                    this.EnquiryDate == input.EnquiryDate ||
                    (this.EnquiryDate != null &&
                    this.EnquiryDate.Equals(input.EnquiryDate))
                ) && 
                (
                    this.EnquiryType == input.EnquiryType ||
                    (this.EnquiryType != null &&
                    this.EnquiryType.Equals(input.EnquiryType))
                ) && 
                (
                    this.SubscriberName == input.SubscriberName ||
                    (this.SubscriberName != null &&
                    this.SubscriberName.Equals(input.SubscriberName))
                ) && 
                (
                    this.SubscriberUsername == input.SubscriberUsername ||
                    (this.SubscriberUsername != null &&
                    this.SubscriberUsername.Equals(input.SubscriberUsername))
                ) && 
                (
                    this.EnquiryInput == input.EnquiryInput ||
                    (this.EnquiryInput != null &&
                    this.EnquiryInput.Equals(input.EnquiryInput))
                ) && 
                (
                    this.TrustNumber == input.TrustNumber ||
                    (this.TrustNumber != null &&
                    this.TrustNumber.Equals(input.TrustNumber))
                ) && 
                (
                    this.PrebuiltPackage == input.PrebuiltPackage ||
                    (this.PrebuiltPackage != null &&
                    this.PrebuiltPackage.Equals(input.PrebuiltPackage))
                ) && 
                (
                    this.Country == input.Country ||
                    (this.Country != null &&
                    this.Country.Equals(input.Country))
                ) && 
                (
                    this.RegistrationNumber == input.RegistrationNumber ||
                    (this.RegistrationNumber != null &&
                    this.RegistrationNumber.Equals(input.RegistrationNumber))
                ) && 
                (
                    this.BusinessName == input.BusinessName ||
                    (this.BusinessName != null &&
                    this.BusinessName.Equals(input.BusinessName))
                ) && 
                (
                    this.VatNumber == input.VatNumber ||
                    (this.VatNumber != null &&
                    this.VatNumber.Equals(input.VatNumber))
                ) && 
                (
                    this.IdNumber == input.IdNumber ||
                    (this.IdNumber != null &&
                    this.IdNumber.Equals(input.IdNumber))
                ) && 
                (
                    this.NpoNumber == input.NpoNumber ||
                    (this.NpoNumber != null &&
                    this.NpoNumber.Equals(input.NpoNumber))
                ) && 
                (
                    this.EnquiryReference == input.EnquiryReference ||
                    (this.EnquiryReference != null &&
                    this.EnquiryReference.Equals(input.EnquiryReference))
                ) && 
                (
                    this.ExternalReference == input.ExternalReference ||
                    (this.ExternalReference != null &&
                    this.ExternalReference.Equals(input.ExternalReference))
                ) && 
                (
                    this.Reference == input.Reference ||
                    (this.Reference != null &&
                    this.Reference.Equals(input.Reference))
                ) && 
                (
                    this.YourReference == input.YourReference ||
                    (this.YourReference != null &&
                    this.YourReference.Equals(input.YourReference))
                ) && 
                (
                    this.LegalEntity == input.LegalEntity ||
                    (this.LegalEntity != null &&
                    this.LegalEntity.Equals(input.LegalEntity))
                ) && 
                (
                    this.VoucherCode == input.VoucherCode ||
                    (this.VoucherCode != null &&
                    this.VoucherCode.Equals(input.VoucherCode))
                ) && 
                (
                    this.EnquiryReason == input.EnquiryReason ||
                    (this.EnquiryReason != null &&
                    this.EnquiryReason.Equals(input.EnquiryReason))
                ) && 
                (
                    this.IdNo == input.IdNo ||
                    (this.IdNo != null &&
                    this.IdNo.Equals(input.IdNo))
                ) && 
                (
                    this.Surname == input.Surname ||
                    (this.Surname != null &&
                    this.Surname.Equals(input.Surname))
                ) && 
                (
                    this.Initials == input.Initials ||
                    (this.Initials != null &&
                    this.Initials.Equals(input.Initials))
                ) && 
                (
                    this.EmailAddress == input.EmailAddress ||
                    (this.EmailAddress != null &&
                    this.EmailAddress.Equals(input.EmailAddress))
                ) && 
                (
                    this.ContactNumber == input.ContactNumber ||
                    (this.ContactNumber != null &&
                    this.ContactNumber.Equals(input.ContactNumber))
                ) && 
                (
                    this.RequesterFirstName == input.RequesterFirstName ||
                    (this.RequesterFirstName != null &&
                    this.RequesterFirstName.Equals(input.RequesterFirstName))
                ) && 
                (
                    this.RequesterSurname == input.RequesterSurname ||
                    (this.RequesterSurname != null &&
                    this.RequesterSurname.Equals(input.RequesterSurname))
                ) && 
                (
                    this.RefNumber == input.RefNumber ||
                    (this.RefNumber != null &&
                    this.RefNumber.Equals(input.RefNumber))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountNo != null)
                    hashCode = hashCode * 59 + this.AccountNo.GetHashCode();
                if (this.AccountType != null)
                    hashCode = hashCode * 59 + this.AccountType.GetHashCode();
                if (this.BankName != null)
                    hashCode = hashCode * 59 + this.BankName.GetHashCode();
                if (this.BranchCode != null)
                    hashCode = hashCode * 59 + this.BranchCode.GetHashCode();
                if (this.EnquiryStatus != null)
                    hashCode = hashCode * 59 + this.EnquiryStatus.GetHashCode();
                if (this.ExternalRef != null)
                    hashCode = hashCode * 59 + this.ExternalRef.GetHashCode();
                if (this.ReferenceNo != null)
                    hashCode = hashCode * 59 + this.ReferenceNo.GetHashCode();
                if (this.XdsRefNo != null)
                    hashCode = hashCode * 59 + this.XdsRefNo.GetHashCode();
                if (this.EnquiryDate != null)
                    hashCode = hashCode * 59 + this.EnquiryDate.GetHashCode();
                if (this.EnquiryType != null)
                    hashCode = hashCode * 59 + this.EnquiryType.GetHashCode();
                if (this.SubscriberName != null)
                    hashCode = hashCode * 59 + this.SubscriberName.GetHashCode();
                if (this.SubscriberUsername != null)
                    hashCode = hashCode * 59 + this.SubscriberUsername.GetHashCode();
                if (this.EnquiryInput != null)
                    hashCode = hashCode * 59 + this.EnquiryInput.GetHashCode();
                if (this.TrustNumber != null)
                    hashCode = hashCode * 59 + this.TrustNumber.GetHashCode();
                if (this.PrebuiltPackage != null)
                    hashCode = hashCode * 59 + this.PrebuiltPackage.GetHashCode();
                if (this.Country != null)
                    hashCode = hashCode * 59 + this.Country.GetHashCode();
                if (this.RegistrationNumber != null)
                    hashCode = hashCode * 59 + this.RegistrationNumber.GetHashCode();
                if (this.BusinessName != null)
                    hashCode = hashCode * 59 + this.BusinessName.GetHashCode();
                if (this.VatNumber != null)
                    hashCode = hashCode * 59 + this.VatNumber.GetHashCode();
                if (this.IdNumber != null)
                    hashCode = hashCode * 59 + this.IdNumber.GetHashCode();
                if (this.NpoNumber != null)
                    hashCode = hashCode * 59 + this.NpoNumber.GetHashCode();
                if (this.EnquiryReference != null)
                    hashCode = hashCode * 59 + this.EnquiryReference.GetHashCode();
                if (this.ExternalReference != null)
                    hashCode = hashCode * 59 + this.ExternalReference.GetHashCode();
                if (this.Reference != null)
                    hashCode = hashCode * 59 + this.Reference.GetHashCode();
                if (this.YourReference != null)
                    hashCode = hashCode * 59 + this.YourReference.GetHashCode();
                if (this.LegalEntity != null)
                    hashCode = hashCode * 59 + this.LegalEntity.GetHashCode();
                if (this.VoucherCode != null)
                    hashCode = hashCode * 59 + this.VoucherCode.GetHashCode();
                if (this.EnquiryReason != null)
                    hashCode = hashCode * 59 + this.EnquiryReason.GetHashCode();
                if (this.IdNo != null)
                    hashCode = hashCode * 59 + this.IdNo.GetHashCode();
                if (this.Surname != null)
                    hashCode = hashCode * 59 + this.Surname.GetHashCode();
                if (this.Initials != null)
                    hashCode = hashCode * 59 + this.Initials.GetHashCode();
                if (this.EmailAddress != null)
                    hashCode = hashCode * 59 + this.EmailAddress.GetHashCode();
                if (this.ContactNumber != null)
                    hashCode = hashCode * 59 + this.ContactNumber.GetHashCode();
                if (this.RequesterFirstName != null)
                    hashCode = hashCode * 59 + this.RequesterFirstName.GetHashCode();
                if (this.RequesterSurname != null)
                    hashCode = hashCode * 59 + this.RequesterSurname.GetHashCode();
                if (this.RefNumber != null)
                    hashCode = hashCode * 59 + this.RefNumber.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
