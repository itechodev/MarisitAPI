/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialAccountSynopsisDetail
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialAccountSynopsisDetail :  IEquatable<TransunionCommercialAccountSynopsisDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialAccountSynopsisDetail" /> class.
        /// </summary>
        /// <param name="supplier">supplier.</param>
        /// <param name="term">term.</param>
        /// <param name="termExt">termExt.</param>
        /// <param name="status">status.</param>
        /// <param name="accountNumber">accountNumber.</param>
        /// <param name="creditLimit">creditLimit.</param>
        public TransunionCommercialAccountSynopsisDetail(string supplier = default(string), string term = default(string), string termExt = default(string), string status = default(string), string accountNumber = default(string), string creditLimit = default(string))
        {
            this.Supplier = supplier;
            this.Term = term;
            this.TermExt = termExt;
            this.Status = status;
            this.AccountNumber = accountNumber;
            this.CreditLimit = creditLimit;
            this.Supplier = supplier;
            this.Term = term;
            this.TermExt = termExt;
            this.Status = status;
            this.AccountNumber = accountNumber;
            this.CreditLimit = creditLimit;
        }

        /// <summary>
        /// Gets or Sets Supplier
        /// </summary>
        [DataMember(Name="supplier", EmitDefaultValue=true)]
        public string Supplier { get; set; }

        /// <summary>
        /// Gets or Sets Term
        /// </summary>
        [DataMember(Name="term", EmitDefaultValue=true)]
        public string Term { get; set; }

        /// <summary>
        /// Gets or Sets TermExt
        /// </summary>
        [DataMember(Name="termExt", EmitDefaultValue=true)]
        public string TermExt { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=true)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name="accountNumber", EmitDefaultValue=true)]
        public string AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets CreditLimit
        /// </summary>
        [DataMember(Name="creditLimit", EmitDefaultValue=true)]
        public string CreditLimit { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialAccountSynopsisDetail {\n");
            sb.Append("  Supplier: ").Append(Supplier).Append("\n");
            sb.Append("  Term: ").Append(Term).Append("\n");
            sb.Append("  TermExt: ").Append(TermExt).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  CreditLimit: ").Append(CreditLimit).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialAccountSynopsisDetail);
        }

        /// <summary>
        /// Returns true if TransunionCommercialAccountSynopsisDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialAccountSynopsisDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialAccountSynopsisDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Supplier == input.Supplier ||
                    (this.Supplier != null &&
                    this.Supplier.Equals(input.Supplier))
                ) && 
                (
                    this.Term == input.Term ||
                    (this.Term != null &&
                    this.Term.Equals(input.Term))
                ) && 
                (
                    this.TermExt == input.TermExt ||
                    (this.TermExt != null &&
                    this.TermExt.Equals(input.TermExt))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.CreditLimit == input.CreditLimit ||
                    (this.CreditLimit != null &&
                    this.CreditLimit.Equals(input.CreditLimit))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Supplier != null)
                    hashCode = hashCode * 59 + this.Supplier.GetHashCode();
                if (this.Term != null)
                    hashCode = hashCode * 59 + this.Term.GetHashCode();
                if (this.TermExt != null)
                    hashCode = hashCode * 59 + this.TermExt.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.AccountNumber != null)
                    hashCode = hashCode * 59 + this.AccountNumber.GetHashCode();
                if (this.CreditLimit != null)
                    hashCode = hashCode * 59 + this.CreditLimit.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
