/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118EmploymentClientDetails
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118EmploymentClientDetails :  IEquatable<TransunionConsumer118EmploymentClientDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118EmploymentClientDetails" /> class.
        /// </summary>
        /// <param name="employers">employers.</param>
        /// <param name="currentPage">currentPage.</param>
        /// <param name="totalPage">totalPage.</param>
        public TransunionConsumer118EmploymentClientDetails(List<TransunionConsumer118Employer> employers = default(List<TransunionConsumer118Employer>), int currentPage = default(int), int totalPage = default(int))
        {
            this.Employers = employers;
            this.Employers = employers;
            this.CurrentPage = currentPage;
            this.TotalPage = totalPage;
        }

        /// <summary>
        /// Gets or Sets Employers
        /// </summary>
        [DataMember(Name="employers", EmitDefaultValue=true)]
        public List<TransunionConsumer118Employer> Employers { get; set; }

        /// <summary>
        /// Gets or Sets CurrentPage
        /// </summary>
        [DataMember(Name="currentPage", EmitDefaultValue=false)]
        public int CurrentPage { get; set; }

        /// <summary>
        /// Gets or Sets TotalPage
        /// </summary>
        [DataMember(Name="totalPage", EmitDefaultValue=false)]
        public int TotalPage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118EmploymentClientDetails {\n");
            sb.Append("  Employers: ").Append(Employers).Append("\n");
            sb.Append("  CurrentPage: ").Append(CurrentPage).Append("\n");
            sb.Append("  TotalPage: ").Append(TotalPage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118EmploymentClientDetails);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118EmploymentClientDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118EmploymentClientDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118EmploymentClientDetails input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Employers == input.Employers ||
                    this.Employers != null &&
                    input.Employers != null &&
                    this.Employers.SequenceEqual(input.Employers)
                ) && 
                (
                    this.CurrentPage == input.CurrentPage ||
                    (this.CurrentPage != null &&
                    this.CurrentPage.Equals(input.CurrentPage))
                ) && 
                (
                    this.TotalPage == input.TotalPage ||
                    (this.TotalPage != null &&
                    this.TotalPage.Equals(input.TotalPage))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Employers != null)
                    hashCode = hashCode * 59 + this.Employers.GetHashCode();
                if (this.CurrentPage != null)
                    hashCode = hashCode * 59 + this.CurrentPage.GetHashCode();
                if (this.TotalPage != null)
                    hashCode = hashCode * 59 + this.TotalPage.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
