/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// CompuscanLINKADRSINFOCOMPDIRADRS
    /// </summary>
    [DataContract]
    public partial class CompuscanLINKADRSINFOCOMPDIRADRS :  IEquatable<CompuscanLINKADRSINFOCOMPDIRADRS>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompuscanLINKADRSINFOCOMPDIRADRS" /> class.
        /// </summary>
        /// <param name="iDNUMBER">iDNUMBER.</param>
        /// <param name="address">address.</param>
        /// <param name="postaLCODE">postaLCODE.</param>
        /// <param name="addresSTYPE">addresSTYPE.</param>
        /// <param name="datECREATED">datECREATED.</param>
        /// <param name="ac">ac.</param>
        public CompuscanLINKADRSINFOCOMPDIRADRS(string iDNUMBER = default(string), string address = default(string), string postaLCODE = default(string), string addresSTYPE = default(string), string datECREATED = default(string), string ac = default(string))
        {
            this.IDNUMBER = iDNUMBER;
            this.Address = address;
            this.PostaLCODE = postaLCODE;
            this.AddresSTYPE = addresSTYPE;
            this.DatECREATED = datECREATED;
            this.Ac = ac;
            this.IDNUMBER = iDNUMBER;
            this.Address = address;
            this.PostaLCODE = postaLCODE;
            this.AddresSTYPE = addresSTYPE;
            this.DatECREATED = datECREATED;
            this.Ac = ac;
        }

        /// <summary>
        /// Gets or Sets IDNUMBER
        /// </summary>
        [DataMember(Name="iD_NUMBER", EmitDefaultValue=true)]
        public string IDNUMBER { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=true)]
        public string Address { get; set; }

        /// <summary>
        /// Gets or Sets PostaLCODE
        /// </summary>
        [DataMember(Name="postaL_CODE", EmitDefaultValue=true)]
        public string PostaLCODE { get; set; }

        /// <summary>
        /// Gets or Sets AddresSTYPE
        /// </summary>
        [DataMember(Name="addresS_TYPE", EmitDefaultValue=true)]
        public string AddresSTYPE { get; set; }

        /// <summary>
        /// Gets or Sets DatECREATED
        /// </summary>
        [DataMember(Name="datE_CREATED", EmitDefaultValue=true)]
        public string DatECREATED { get; set; }

        /// <summary>
        /// Gets or Sets Ac
        /// </summary>
        [DataMember(Name="ac", EmitDefaultValue=true)]
        public string Ac { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompuscanLINKADRSINFOCOMPDIRADRS {\n");
            sb.Append("  IDNUMBER: ").Append(IDNUMBER).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  PostaLCODE: ").Append(PostaLCODE).Append("\n");
            sb.Append("  AddresSTYPE: ").Append(AddresSTYPE).Append("\n");
            sb.Append("  DatECREATED: ").Append(DatECREATED).Append("\n");
            sb.Append("  Ac: ").Append(Ac).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompuscanLINKADRSINFOCOMPDIRADRS);
        }

        /// <summary>
        /// Returns true if CompuscanLINKADRSINFOCOMPDIRADRS instances are equal
        /// </summary>
        /// <param name="input">Instance of CompuscanLINKADRSINFOCOMPDIRADRS to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompuscanLINKADRSINFOCOMPDIRADRS input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.IDNUMBER == input.IDNUMBER ||
                    (this.IDNUMBER != null &&
                    this.IDNUMBER.Equals(input.IDNUMBER))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.PostaLCODE == input.PostaLCODE ||
                    (this.PostaLCODE != null &&
                    this.PostaLCODE.Equals(input.PostaLCODE))
                ) && 
                (
                    this.AddresSTYPE == input.AddresSTYPE ||
                    (this.AddresSTYPE != null &&
                    this.AddresSTYPE.Equals(input.AddresSTYPE))
                ) && 
                (
                    this.DatECREATED == input.DatECREATED ||
                    (this.DatECREATED != null &&
                    this.DatECREATED.Equals(input.DatECREATED))
                ) && 
                (
                    this.Ac == input.Ac ||
                    (this.Ac != null &&
                    this.Ac.Equals(input.Ac))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.IDNUMBER != null)
                    hashCode = hashCode * 59 + this.IDNUMBER.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.PostaLCODE != null)
                    hashCode = hashCode * 59 + this.PostaLCODE.GetHashCode();
                if (this.AddresSTYPE != null)
                    hashCode = hashCode * 59 + this.AddresSTYPE.GetHashCode();
                if (this.DatECREATED != null)
                    hashCode = hashCode * 59 + this.DatECREATED.GetHashCode();
                if (this.Ac != null)
                    hashCode = hashCode * 59 + this.Ac.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
