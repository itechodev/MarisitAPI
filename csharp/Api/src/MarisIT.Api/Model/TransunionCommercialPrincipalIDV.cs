/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialPrincipalIDV
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialPrincipalIDV :  IEquatable<TransunionCommercialPrincipalIDV>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialPrincipalIDV" /> class.
        /// </summary>
        /// <param name="recordSequence">recordSequence.</param>
        /// <param name="part">part.</param>
        /// <param name="partSequence">partSequence.</param>
        /// <param name="hawkNumber">hawkNumber.</param>
        /// <param name="hawkCode">hawkCode.</param>
        /// <param name="hawkDescription">hawkDescription.</param>
        /// <param name="idVerifiedCode">idVerifiedCode.</param>
        /// <param name="idDescription">idDescription.</param>
        /// <param name="oldIDWarning">oldIDWarning.</param>
        /// <param name="oldIDDescription">oldIDDescription.</param>
        /// <param name="surname">surname.</param>
        /// <param name="forename1">forename1.</param>
        /// <param name="forename2">forename2.</param>
        /// <param name="ticketNumber">ticketNumber.</param>
        /// <param name="subscriberNumber">subscriberNumber.</param>
        /// <param name="subscriberName">subscriberName.</param>
        /// <param name="subscriberReference">subscriberReference.</param>
        /// <param name="idNumber">idNumber.</param>
        public TransunionCommercialPrincipalIDV(string recordSequence = default(string), string part = default(string), string partSequence = default(string), string hawkNumber = default(string), string hawkCode = default(string), string hawkDescription = default(string), string idVerifiedCode = default(string), string idDescription = default(string), string oldIDWarning = default(string), string oldIDDescription = default(string), string surname = default(string), string forename1 = default(string), string forename2 = default(string), string ticketNumber = default(string), string subscriberNumber = default(string), string subscriberName = default(string), string subscriberReference = default(string), string idNumber = default(string))
        {
            this.RecordSequence = recordSequence;
            this.Part = part;
            this.PartSequence = partSequence;
            this.HawkNumber = hawkNumber;
            this.HawkCode = hawkCode;
            this.HawkDescription = hawkDescription;
            this.IdVerifiedCode = idVerifiedCode;
            this.IdDescription = idDescription;
            this.OldIDWarning = oldIDWarning;
            this.OldIDDescription = oldIDDescription;
            this.Surname = surname;
            this.Forename1 = forename1;
            this.Forename2 = forename2;
            this.TicketNumber = ticketNumber;
            this.SubscriberNumber = subscriberNumber;
            this.SubscriberName = subscriberName;
            this.SubscriberReference = subscriberReference;
            this.IdNumber = idNumber;
            this.RecordSequence = recordSequence;
            this.Part = part;
            this.PartSequence = partSequence;
            this.HawkNumber = hawkNumber;
            this.HawkCode = hawkCode;
            this.HawkDescription = hawkDescription;
            this.IdVerifiedCode = idVerifiedCode;
            this.IdDescription = idDescription;
            this.OldIDWarning = oldIDWarning;
            this.OldIDDescription = oldIDDescription;
            this.Surname = surname;
            this.Forename1 = forename1;
            this.Forename2 = forename2;
            this.TicketNumber = ticketNumber;
            this.SubscriberNumber = subscriberNumber;
            this.SubscriberName = subscriberName;
            this.SubscriberReference = subscriberReference;
            this.IdNumber = idNumber;
        }

        /// <summary>
        /// Gets or Sets RecordSequence
        /// </summary>
        [DataMember(Name="recordSequence", EmitDefaultValue=true)]
        public string RecordSequence { get; set; }

        /// <summary>
        /// Gets or Sets Part
        /// </summary>
        [DataMember(Name="part", EmitDefaultValue=true)]
        public string Part { get; set; }

        /// <summary>
        /// Gets or Sets PartSequence
        /// </summary>
        [DataMember(Name="partSequence", EmitDefaultValue=true)]
        public string PartSequence { get; set; }

        /// <summary>
        /// Gets or Sets HawkNumber
        /// </summary>
        [DataMember(Name="hawkNumber", EmitDefaultValue=true)]
        public string HawkNumber { get; set; }

        /// <summary>
        /// Gets or Sets HawkCode
        /// </summary>
        [DataMember(Name="hawkCode", EmitDefaultValue=true)]
        public string HawkCode { get; set; }

        /// <summary>
        /// Gets or Sets HawkDescription
        /// </summary>
        [DataMember(Name="hawkDescription", EmitDefaultValue=true)]
        public string HawkDescription { get; set; }

        /// <summary>
        /// Gets or Sets IdVerifiedCode
        /// </summary>
        [DataMember(Name="idVerifiedCode", EmitDefaultValue=true)]
        public string IdVerifiedCode { get; set; }

        /// <summary>
        /// Gets or Sets IdDescription
        /// </summary>
        [DataMember(Name="idDescription", EmitDefaultValue=true)]
        public string IdDescription { get; set; }

        /// <summary>
        /// Gets or Sets OldIDWarning
        /// </summary>
        [DataMember(Name="oldIDWarning", EmitDefaultValue=true)]
        public string OldIDWarning { get; set; }

        /// <summary>
        /// Gets or Sets OldIDDescription
        /// </summary>
        [DataMember(Name="oldIDDescription", EmitDefaultValue=true)]
        public string OldIDDescription { get; set; }

        /// <summary>
        /// Gets or Sets Surname
        /// </summary>
        [DataMember(Name="surname", EmitDefaultValue=true)]
        public string Surname { get; set; }

        /// <summary>
        /// Gets or Sets Forename1
        /// </summary>
        [DataMember(Name="forename1", EmitDefaultValue=true)]
        public string Forename1 { get; set; }

        /// <summary>
        /// Gets or Sets Forename2
        /// </summary>
        [DataMember(Name="forename2", EmitDefaultValue=true)]
        public string Forename2 { get; set; }

        /// <summary>
        /// Gets or Sets TicketNumber
        /// </summary>
        [DataMember(Name="ticketNumber", EmitDefaultValue=true)]
        public string TicketNumber { get; set; }

        /// <summary>
        /// Gets or Sets SubscriberNumber
        /// </summary>
        [DataMember(Name="subscriberNumber", EmitDefaultValue=true)]
        public string SubscriberNumber { get; set; }

        /// <summary>
        /// Gets or Sets SubscriberName
        /// </summary>
        [DataMember(Name="subscriberName", EmitDefaultValue=true)]
        public string SubscriberName { get; set; }

        /// <summary>
        /// Gets or Sets SubscriberReference
        /// </summary>
        [DataMember(Name="subscriberReference", EmitDefaultValue=true)]
        public string SubscriberReference { get; set; }

        /// <summary>
        /// Gets or Sets IdNumber
        /// </summary>
        [DataMember(Name="idNumber", EmitDefaultValue=true)]
        public string IdNumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialPrincipalIDV {\n");
            sb.Append("  RecordSequence: ").Append(RecordSequence).Append("\n");
            sb.Append("  Part: ").Append(Part).Append("\n");
            sb.Append("  PartSequence: ").Append(PartSequence).Append("\n");
            sb.Append("  HawkNumber: ").Append(HawkNumber).Append("\n");
            sb.Append("  HawkCode: ").Append(HawkCode).Append("\n");
            sb.Append("  HawkDescription: ").Append(HawkDescription).Append("\n");
            sb.Append("  IdVerifiedCode: ").Append(IdVerifiedCode).Append("\n");
            sb.Append("  IdDescription: ").Append(IdDescription).Append("\n");
            sb.Append("  OldIDWarning: ").Append(OldIDWarning).Append("\n");
            sb.Append("  OldIDDescription: ").Append(OldIDDescription).Append("\n");
            sb.Append("  Surname: ").Append(Surname).Append("\n");
            sb.Append("  Forename1: ").Append(Forename1).Append("\n");
            sb.Append("  Forename2: ").Append(Forename2).Append("\n");
            sb.Append("  TicketNumber: ").Append(TicketNumber).Append("\n");
            sb.Append("  SubscriberNumber: ").Append(SubscriberNumber).Append("\n");
            sb.Append("  SubscriberName: ").Append(SubscriberName).Append("\n");
            sb.Append("  SubscriberReference: ").Append(SubscriberReference).Append("\n");
            sb.Append("  IdNumber: ").Append(IdNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialPrincipalIDV);
        }

        /// <summary>
        /// Returns true if TransunionCommercialPrincipalIDV instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialPrincipalIDV to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialPrincipalIDV input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.RecordSequence == input.RecordSequence ||
                    (this.RecordSequence != null &&
                    this.RecordSequence.Equals(input.RecordSequence))
                ) && 
                (
                    this.Part == input.Part ||
                    (this.Part != null &&
                    this.Part.Equals(input.Part))
                ) && 
                (
                    this.PartSequence == input.PartSequence ||
                    (this.PartSequence != null &&
                    this.PartSequence.Equals(input.PartSequence))
                ) && 
                (
                    this.HawkNumber == input.HawkNumber ||
                    (this.HawkNumber != null &&
                    this.HawkNumber.Equals(input.HawkNumber))
                ) && 
                (
                    this.HawkCode == input.HawkCode ||
                    (this.HawkCode != null &&
                    this.HawkCode.Equals(input.HawkCode))
                ) && 
                (
                    this.HawkDescription == input.HawkDescription ||
                    (this.HawkDescription != null &&
                    this.HawkDescription.Equals(input.HawkDescription))
                ) && 
                (
                    this.IdVerifiedCode == input.IdVerifiedCode ||
                    (this.IdVerifiedCode != null &&
                    this.IdVerifiedCode.Equals(input.IdVerifiedCode))
                ) && 
                (
                    this.IdDescription == input.IdDescription ||
                    (this.IdDescription != null &&
                    this.IdDescription.Equals(input.IdDescription))
                ) && 
                (
                    this.OldIDWarning == input.OldIDWarning ||
                    (this.OldIDWarning != null &&
                    this.OldIDWarning.Equals(input.OldIDWarning))
                ) && 
                (
                    this.OldIDDescription == input.OldIDDescription ||
                    (this.OldIDDescription != null &&
                    this.OldIDDescription.Equals(input.OldIDDescription))
                ) && 
                (
                    this.Surname == input.Surname ||
                    (this.Surname != null &&
                    this.Surname.Equals(input.Surname))
                ) && 
                (
                    this.Forename1 == input.Forename1 ||
                    (this.Forename1 != null &&
                    this.Forename1.Equals(input.Forename1))
                ) && 
                (
                    this.Forename2 == input.Forename2 ||
                    (this.Forename2 != null &&
                    this.Forename2.Equals(input.Forename2))
                ) && 
                (
                    this.TicketNumber == input.TicketNumber ||
                    (this.TicketNumber != null &&
                    this.TicketNumber.Equals(input.TicketNumber))
                ) && 
                (
                    this.SubscriberNumber == input.SubscriberNumber ||
                    (this.SubscriberNumber != null &&
                    this.SubscriberNumber.Equals(input.SubscriberNumber))
                ) && 
                (
                    this.SubscriberName == input.SubscriberName ||
                    (this.SubscriberName != null &&
                    this.SubscriberName.Equals(input.SubscriberName))
                ) && 
                (
                    this.SubscriberReference == input.SubscriberReference ||
                    (this.SubscriberReference != null &&
                    this.SubscriberReference.Equals(input.SubscriberReference))
                ) && 
                (
                    this.IdNumber == input.IdNumber ||
                    (this.IdNumber != null &&
                    this.IdNumber.Equals(input.IdNumber))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RecordSequence != null)
                    hashCode = hashCode * 59 + this.RecordSequence.GetHashCode();
                if (this.Part != null)
                    hashCode = hashCode * 59 + this.Part.GetHashCode();
                if (this.PartSequence != null)
                    hashCode = hashCode * 59 + this.PartSequence.GetHashCode();
                if (this.HawkNumber != null)
                    hashCode = hashCode * 59 + this.HawkNumber.GetHashCode();
                if (this.HawkCode != null)
                    hashCode = hashCode * 59 + this.HawkCode.GetHashCode();
                if (this.HawkDescription != null)
                    hashCode = hashCode * 59 + this.HawkDescription.GetHashCode();
                if (this.IdVerifiedCode != null)
                    hashCode = hashCode * 59 + this.IdVerifiedCode.GetHashCode();
                if (this.IdDescription != null)
                    hashCode = hashCode * 59 + this.IdDescription.GetHashCode();
                if (this.OldIDWarning != null)
                    hashCode = hashCode * 59 + this.OldIDWarning.GetHashCode();
                if (this.OldIDDescription != null)
                    hashCode = hashCode * 59 + this.OldIDDescription.GetHashCode();
                if (this.Surname != null)
                    hashCode = hashCode * 59 + this.Surname.GetHashCode();
                if (this.Forename1 != null)
                    hashCode = hashCode * 59 + this.Forename1.GetHashCode();
                if (this.Forename2 != null)
                    hashCode = hashCode * 59 + this.Forename2.GetHashCode();
                if (this.TicketNumber != null)
                    hashCode = hashCode * 59 + this.TicketNumber.GetHashCode();
                if (this.SubscriberNumber != null)
                    hashCode = hashCode * 59 + this.SubscriberNumber.GetHashCode();
                if (this.SubscriberName != null)
                    hashCode = hashCode * 59 + this.SubscriberName.GetHashCode();
                if (this.SubscriberReference != null)
                    hashCode = hashCode * 59 + this.SubscriberReference.GetHashCode();
                if (this.IdNumber != null)
                    hashCode = hashCode * 59 + this.IdNumber.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
