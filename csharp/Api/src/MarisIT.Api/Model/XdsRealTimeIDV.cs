/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// XdsRealTimeIDV
    /// </summary>
    [DataContract]
    public partial class XdsRealTimeIDV :  IEquatable<XdsRealTimeIDV>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XdsRealTimeIDV" /> class.
        /// </summary>
        /// <param name="inputIDNO">inputIDNO.</param>
        /// <param name="haDateOfBirth">haDateOfBirth.</param>
        /// <param name="haDeceasedDate">haDeceasedDate.</param>
        /// <param name="haDeceasedStatus">haDeceasedStatus.</param>
        /// <param name="haidBookIssuedDate">haidBookIssuedDate.</param>
        /// <param name="haidno">haidno.</param>
        /// <param name="haNames">haNames.</param>
        /// <param name="haSurname">haSurname.</param>
        /// <param name="idnoMatchStatus">idnoMatchStatus.</param>
        /// <param name="idCardDate">idCardDate.</param>
        /// <param name="idCardInd">idCardInd.</param>
        /// <param name="haErrorDescription">haErrorDescription.</param>
        public XdsRealTimeIDV(string inputIDNO = default(string), string haDateOfBirth = default(string), string haDeceasedDate = default(string), string haDeceasedStatus = default(string), string haidBookIssuedDate = default(string), string haidno = default(string), string haNames = default(string), string haSurname = default(string), string idnoMatchStatus = default(string), string idCardDate = default(string), string idCardInd = default(string), string haErrorDescription = default(string))
        {
            this.InputIDNO = inputIDNO;
            this.HaDateOfBirth = haDateOfBirth;
            this.HaDeceasedDate = haDeceasedDate;
            this.HaDeceasedStatus = haDeceasedStatus;
            this.HaidBookIssuedDate = haidBookIssuedDate;
            this.Haidno = haidno;
            this.HaNames = haNames;
            this.HaSurname = haSurname;
            this.IdnoMatchStatus = idnoMatchStatus;
            this.IdCardDate = idCardDate;
            this.IdCardInd = idCardInd;
            this.HaErrorDescription = haErrorDescription;
            this.InputIDNO = inputIDNO;
            this.HaDateOfBirth = haDateOfBirth;
            this.HaDeceasedDate = haDeceasedDate;
            this.HaDeceasedStatus = haDeceasedStatus;
            this.HaidBookIssuedDate = haidBookIssuedDate;
            this.Haidno = haidno;
            this.HaNames = haNames;
            this.HaSurname = haSurname;
            this.IdnoMatchStatus = idnoMatchStatus;
            this.IdCardDate = idCardDate;
            this.IdCardInd = idCardInd;
            this.HaErrorDescription = haErrorDescription;
        }

        /// <summary>
        /// Gets or Sets InputIDNO
        /// </summary>
        [DataMember(Name="inputIDNO", EmitDefaultValue=true)]
        public string InputIDNO { get; set; }

        /// <summary>
        /// Gets or Sets HaDateOfBirth
        /// </summary>
        [DataMember(Name="haDateOfBirth", EmitDefaultValue=true)]
        public string HaDateOfBirth { get; set; }

        /// <summary>
        /// Gets or Sets HaDeceasedDate
        /// </summary>
        [DataMember(Name="haDeceasedDate", EmitDefaultValue=true)]
        public string HaDeceasedDate { get; set; }

        /// <summary>
        /// Gets or Sets HaDeceasedStatus
        /// </summary>
        [DataMember(Name="haDeceasedStatus", EmitDefaultValue=true)]
        public string HaDeceasedStatus { get; set; }

        /// <summary>
        /// Gets or Sets HaidBookIssuedDate
        /// </summary>
        [DataMember(Name="haidBookIssuedDate", EmitDefaultValue=true)]
        public string HaidBookIssuedDate { get; set; }

        /// <summary>
        /// Gets or Sets Haidno
        /// </summary>
        [DataMember(Name="haidno", EmitDefaultValue=true)]
        public string Haidno { get; set; }

        /// <summary>
        /// Gets or Sets HaNames
        /// </summary>
        [DataMember(Name="haNames", EmitDefaultValue=true)]
        public string HaNames { get; set; }

        /// <summary>
        /// Gets or Sets HaSurname
        /// </summary>
        [DataMember(Name="haSurname", EmitDefaultValue=true)]
        public string HaSurname { get; set; }

        /// <summary>
        /// Gets or Sets IdnoMatchStatus
        /// </summary>
        [DataMember(Name="idnoMatchStatus", EmitDefaultValue=true)]
        public string IdnoMatchStatus { get; set; }

        /// <summary>
        /// Gets or Sets IdCardDate
        /// </summary>
        [DataMember(Name="idCardDate", EmitDefaultValue=true)]
        public string IdCardDate { get; set; }

        /// <summary>
        /// Gets or Sets IdCardInd
        /// </summary>
        [DataMember(Name="idCardInd", EmitDefaultValue=true)]
        public string IdCardInd { get; set; }

        /// <summary>
        /// Gets or Sets HaErrorDescription
        /// </summary>
        [DataMember(Name="haErrorDescription", EmitDefaultValue=true)]
        public string HaErrorDescription { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class XdsRealTimeIDV {\n");
            sb.Append("  InputIDNO: ").Append(InputIDNO).Append("\n");
            sb.Append("  HaDateOfBirth: ").Append(HaDateOfBirth).Append("\n");
            sb.Append("  HaDeceasedDate: ").Append(HaDeceasedDate).Append("\n");
            sb.Append("  HaDeceasedStatus: ").Append(HaDeceasedStatus).Append("\n");
            sb.Append("  HaidBookIssuedDate: ").Append(HaidBookIssuedDate).Append("\n");
            sb.Append("  Haidno: ").Append(Haidno).Append("\n");
            sb.Append("  HaNames: ").Append(HaNames).Append("\n");
            sb.Append("  HaSurname: ").Append(HaSurname).Append("\n");
            sb.Append("  IdnoMatchStatus: ").Append(IdnoMatchStatus).Append("\n");
            sb.Append("  IdCardDate: ").Append(IdCardDate).Append("\n");
            sb.Append("  IdCardInd: ").Append(IdCardInd).Append("\n");
            sb.Append("  HaErrorDescription: ").Append(HaErrorDescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as XdsRealTimeIDV);
        }

        /// <summary>
        /// Returns true if XdsRealTimeIDV instances are equal
        /// </summary>
        /// <param name="input">Instance of XdsRealTimeIDV to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(XdsRealTimeIDV input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.InputIDNO == input.InputIDNO ||
                    (this.InputIDNO != null &&
                    this.InputIDNO.Equals(input.InputIDNO))
                ) && 
                (
                    this.HaDateOfBirth == input.HaDateOfBirth ||
                    (this.HaDateOfBirth != null &&
                    this.HaDateOfBirth.Equals(input.HaDateOfBirth))
                ) && 
                (
                    this.HaDeceasedDate == input.HaDeceasedDate ||
                    (this.HaDeceasedDate != null &&
                    this.HaDeceasedDate.Equals(input.HaDeceasedDate))
                ) && 
                (
                    this.HaDeceasedStatus == input.HaDeceasedStatus ||
                    (this.HaDeceasedStatus != null &&
                    this.HaDeceasedStatus.Equals(input.HaDeceasedStatus))
                ) && 
                (
                    this.HaidBookIssuedDate == input.HaidBookIssuedDate ||
                    (this.HaidBookIssuedDate != null &&
                    this.HaidBookIssuedDate.Equals(input.HaidBookIssuedDate))
                ) && 
                (
                    this.Haidno == input.Haidno ||
                    (this.Haidno != null &&
                    this.Haidno.Equals(input.Haidno))
                ) && 
                (
                    this.HaNames == input.HaNames ||
                    (this.HaNames != null &&
                    this.HaNames.Equals(input.HaNames))
                ) && 
                (
                    this.HaSurname == input.HaSurname ||
                    (this.HaSurname != null &&
                    this.HaSurname.Equals(input.HaSurname))
                ) && 
                (
                    this.IdnoMatchStatus == input.IdnoMatchStatus ||
                    (this.IdnoMatchStatus != null &&
                    this.IdnoMatchStatus.Equals(input.IdnoMatchStatus))
                ) && 
                (
                    this.IdCardDate == input.IdCardDate ||
                    (this.IdCardDate != null &&
                    this.IdCardDate.Equals(input.IdCardDate))
                ) && 
                (
                    this.IdCardInd == input.IdCardInd ||
                    (this.IdCardInd != null &&
                    this.IdCardInd.Equals(input.IdCardInd))
                ) && 
                (
                    this.HaErrorDescription == input.HaErrorDescription ||
                    (this.HaErrorDescription != null &&
                    this.HaErrorDescription.Equals(input.HaErrorDescription))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.InputIDNO != null)
                    hashCode = hashCode * 59 + this.InputIDNO.GetHashCode();
                if (this.HaDateOfBirth != null)
                    hashCode = hashCode * 59 + this.HaDateOfBirth.GetHashCode();
                if (this.HaDeceasedDate != null)
                    hashCode = hashCode * 59 + this.HaDeceasedDate.GetHashCode();
                if (this.HaDeceasedStatus != null)
                    hashCode = hashCode * 59 + this.HaDeceasedStatus.GetHashCode();
                if (this.HaidBookIssuedDate != null)
                    hashCode = hashCode * 59 + this.HaidBookIssuedDate.GetHashCode();
                if (this.Haidno != null)
                    hashCode = hashCode * 59 + this.Haidno.GetHashCode();
                if (this.HaNames != null)
                    hashCode = hashCode * 59 + this.HaNames.GetHashCode();
                if (this.HaSurname != null)
                    hashCode = hashCode * 59 + this.HaSurname.GetHashCode();
                if (this.IdnoMatchStatus != null)
                    hashCode = hashCode * 59 + this.IdnoMatchStatus.GetHashCode();
                if (this.IdCardDate != null)
                    hashCode = hashCode * 59 + this.IdCardDate.GetHashCode();
                if (this.IdCardInd != null)
                    hashCode = hashCode * 59 + this.IdCardInd.GetHashCode();
                if (this.HaErrorDescription != null)
                    hashCode = hashCode * 59 + this.HaErrorDescription.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
