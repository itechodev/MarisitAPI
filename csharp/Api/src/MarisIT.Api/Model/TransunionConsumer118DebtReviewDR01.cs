/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118DebtReviewDR01
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118DebtReviewDR01 :  IEquatable<TransunionConsumer118DebtReviewDR01>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118DebtReviewDR01" /> class.
        /// </summary>
        /// <param name="consumerNo">consumerNo.</param>
        /// <param name="finalScore">finalScore.</param>
        /// <param name="band">band.</param>
        /// <param name="subscriber">subscriber.</param>
        public TransunionConsumer118DebtReviewDR01(string consumerNo = default(string), string finalScore = default(string), string band = default(string), string subscriber = default(string))
        {
            this.ConsumerNo = consumerNo;
            this.FinalScore = finalScore;
            this.Band = band;
            this.Subscriber = subscriber;
            this.ConsumerNo = consumerNo;
            this.FinalScore = finalScore;
            this.Band = band;
            this.Subscriber = subscriber;
        }

        /// <summary>
        /// Gets or Sets ConsumerNo
        /// </summary>
        [DataMember(Name="consumerNo", EmitDefaultValue=true)]
        public string ConsumerNo { get; set; }

        /// <summary>
        /// Gets or Sets FinalScore
        /// </summary>
        [DataMember(Name="finalScore", EmitDefaultValue=true)]
        public string FinalScore { get; set; }

        /// <summary>
        /// Gets or Sets Band
        /// </summary>
        [DataMember(Name="band", EmitDefaultValue=true)]
        public string Band { get; set; }

        /// <summary>
        /// Gets or Sets Subscriber
        /// </summary>
        [DataMember(Name="subscriber", EmitDefaultValue=true)]
        public string Subscriber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118DebtReviewDR01 {\n");
            sb.Append("  ConsumerNo: ").Append(ConsumerNo).Append("\n");
            sb.Append("  FinalScore: ").Append(FinalScore).Append("\n");
            sb.Append("  Band: ").Append(Band).Append("\n");
            sb.Append("  Subscriber: ").Append(Subscriber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118DebtReviewDR01);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118DebtReviewDR01 instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118DebtReviewDR01 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118DebtReviewDR01 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConsumerNo == input.ConsumerNo ||
                    (this.ConsumerNo != null &&
                    this.ConsumerNo.Equals(input.ConsumerNo))
                ) && 
                (
                    this.FinalScore == input.FinalScore ||
                    (this.FinalScore != null &&
                    this.FinalScore.Equals(input.FinalScore))
                ) && 
                (
                    this.Band == input.Band ||
                    (this.Band != null &&
                    this.Band.Equals(input.Band))
                ) && 
                (
                    this.Subscriber == input.Subscriber ||
                    (this.Subscriber != null &&
                    this.Subscriber.Equals(input.Subscriber))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConsumerNo != null)
                    hashCode = hashCode * 59 + this.ConsumerNo.GetHashCode();
                if (this.FinalScore != null)
                    hashCode = hashCode * 59 + this.FinalScore.GetHashCode();
                if (this.Band != null)
                    hashCode = hashCode * 59 + this.Band.GetHashCode();
                if (this.Subscriber != null)
                    hashCode = hashCode * 59 + this.Subscriber.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
