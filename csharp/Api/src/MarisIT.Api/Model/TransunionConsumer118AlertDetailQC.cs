/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118AlertDetailQC
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118AlertDetailQC :  IEquatable<TransunionConsumer118AlertDetailQC>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118AlertDetailQC" /> class.
        /// </summary>
        /// <param name="alertType">alertType.</param>
        /// <param name="dateAlert">dateAlert.</param>
        /// <param name="consumerName">consumerName.</param>
        /// <param name="idNumber">idNumber.</param>
        /// <param name="consumerNumber">consumerNumber.</param>
        /// <param name="dateFlagged">dateFlagged.</param>
        /// <param name="actionType">actionType.</param>
        /// <param name="subscriberNumber">subscriberNumber.</param>
        /// <param name="actionDate">actionDate.</param>
        /// <param name="natureOfDebt">natureOfDebt.</param>
        /// <param name="natureOfDebtDescription">natureOfDebtDescription.</param>
        /// <param name="judgementType">judgementType.</param>
        /// <param name="judgementTypeDescription">judgementTypeDescription.</param>
        /// <param name="amount">amount.</param>
        /// <param name="updatedJudgementType">updatedJudgementType.</param>
        /// <param name="updatedJudgementTypeDescription">updatedJudgementTypeDescription.</param>
        /// <param name="updatedAmount">updatedAmount.</param>
        /// <param name="subscriberReference">subscriberReference.</param>
        public TransunionConsumer118AlertDetailQC(int alertType = default(int), DateTime dateAlert = default(DateTime), string consumerName = default(string), string idNumber = default(string), int consumerNumber = default(int), string dateFlagged = default(string), string actionType = default(string), string subscriberNumber = default(string), string actionDate = default(string), string natureOfDebt = default(string), string natureOfDebtDescription = default(string), string judgementType = default(string), string judgementTypeDescription = default(string), string amount = default(string), string updatedJudgementType = default(string), string updatedJudgementTypeDescription = default(string), string updatedAmount = default(string), string subscriberReference = default(string))
        {
            this.ConsumerName = consumerName;
            this.IdNumber = idNumber;
            this.DateFlagged = dateFlagged;
            this.ActionType = actionType;
            this.SubscriberNumber = subscriberNumber;
            this.ActionDate = actionDate;
            this.NatureOfDebt = natureOfDebt;
            this.NatureOfDebtDescription = natureOfDebtDescription;
            this.JudgementType = judgementType;
            this.JudgementTypeDescription = judgementTypeDescription;
            this.Amount = amount;
            this.UpdatedJudgementType = updatedJudgementType;
            this.UpdatedJudgementTypeDescription = updatedJudgementTypeDescription;
            this.UpdatedAmount = updatedAmount;
            this.SubscriberReference = subscriberReference;
            this.AlertType = alertType;
            this.DateAlert = dateAlert;
            this.ConsumerName = consumerName;
            this.IdNumber = idNumber;
            this.ConsumerNumber = consumerNumber;
            this.DateFlagged = dateFlagged;
            this.ActionType = actionType;
            this.SubscriberNumber = subscriberNumber;
            this.ActionDate = actionDate;
            this.NatureOfDebt = natureOfDebt;
            this.NatureOfDebtDescription = natureOfDebtDescription;
            this.JudgementType = judgementType;
            this.JudgementTypeDescription = judgementTypeDescription;
            this.Amount = amount;
            this.UpdatedJudgementType = updatedJudgementType;
            this.UpdatedJudgementTypeDescription = updatedJudgementTypeDescription;
            this.UpdatedAmount = updatedAmount;
            this.SubscriberReference = subscriberReference;
        }

        /// <summary>
        /// Gets or Sets AlertType
        /// </summary>
        [DataMember(Name="alertType", EmitDefaultValue=false)]
        public int AlertType { get; set; }

        /// <summary>
        /// Gets or Sets DateAlert
        /// </summary>
        [DataMember(Name="dateAlert", EmitDefaultValue=false)]
        public DateTime DateAlert { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerName
        /// </summary>
        [DataMember(Name="consumerName", EmitDefaultValue=true)]
        public string ConsumerName { get; set; }

        /// <summary>
        /// Gets or Sets IdNumber
        /// </summary>
        [DataMember(Name="idNumber", EmitDefaultValue=true)]
        public string IdNumber { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerNumber
        /// </summary>
        [DataMember(Name="consumerNumber", EmitDefaultValue=false)]
        public int ConsumerNumber { get; set; }

        /// <summary>
        /// Gets or Sets DateFlagged
        /// </summary>
        [DataMember(Name="dateFlagged", EmitDefaultValue=true)]
        public string DateFlagged { get; set; }

        /// <summary>
        /// Gets or Sets ActionType
        /// </summary>
        [DataMember(Name="actionType", EmitDefaultValue=true)]
        public string ActionType { get; set; }

        /// <summary>
        /// Gets or Sets SubscriberNumber
        /// </summary>
        [DataMember(Name="subscriberNumber", EmitDefaultValue=true)]
        public string SubscriberNumber { get; set; }

        /// <summary>
        /// Gets or Sets ActionDate
        /// </summary>
        [DataMember(Name="actionDate", EmitDefaultValue=true)]
        public string ActionDate { get; set; }

        /// <summary>
        /// Gets or Sets NatureOfDebt
        /// </summary>
        [DataMember(Name="natureOfDebt", EmitDefaultValue=true)]
        public string NatureOfDebt { get; set; }

        /// <summary>
        /// Gets or Sets NatureOfDebtDescription
        /// </summary>
        [DataMember(Name="natureOfDebtDescription", EmitDefaultValue=true)]
        public string NatureOfDebtDescription { get; set; }

        /// <summary>
        /// Gets or Sets JudgementType
        /// </summary>
        [DataMember(Name="judgementType", EmitDefaultValue=true)]
        public string JudgementType { get; set; }

        /// <summary>
        /// Gets or Sets JudgementTypeDescription
        /// </summary>
        [DataMember(Name="judgementTypeDescription", EmitDefaultValue=true)]
        public string JudgementTypeDescription { get; set; }

        /// <summary>
        /// Gets or Sets Amount
        /// </summary>
        [DataMember(Name="amount", EmitDefaultValue=true)]
        public string Amount { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedJudgementType
        /// </summary>
        [DataMember(Name="updatedJudgementType", EmitDefaultValue=true)]
        public string UpdatedJudgementType { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedJudgementTypeDescription
        /// </summary>
        [DataMember(Name="updatedJudgementTypeDescription", EmitDefaultValue=true)]
        public string UpdatedJudgementTypeDescription { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAmount
        /// </summary>
        [DataMember(Name="updatedAmount", EmitDefaultValue=true)]
        public string UpdatedAmount { get; set; }

        /// <summary>
        /// Gets or Sets SubscriberReference
        /// </summary>
        [DataMember(Name="subscriberReference", EmitDefaultValue=true)]
        public string SubscriberReference { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118AlertDetailQC {\n");
            sb.Append("  AlertType: ").Append(AlertType).Append("\n");
            sb.Append("  DateAlert: ").Append(DateAlert).Append("\n");
            sb.Append("  ConsumerName: ").Append(ConsumerName).Append("\n");
            sb.Append("  IdNumber: ").Append(IdNumber).Append("\n");
            sb.Append("  ConsumerNumber: ").Append(ConsumerNumber).Append("\n");
            sb.Append("  DateFlagged: ").Append(DateFlagged).Append("\n");
            sb.Append("  ActionType: ").Append(ActionType).Append("\n");
            sb.Append("  SubscriberNumber: ").Append(SubscriberNumber).Append("\n");
            sb.Append("  ActionDate: ").Append(ActionDate).Append("\n");
            sb.Append("  NatureOfDebt: ").Append(NatureOfDebt).Append("\n");
            sb.Append("  NatureOfDebtDescription: ").Append(NatureOfDebtDescription).Append("\n");
            sb.Append("  JudgementType: ").Append(JudgementType).Append("\n");
            sb.Append("  JudgementTypeDescription: ").Append(JudgementTypeDescription).Append("\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  UpdatedJudgementType: ").Append(UpdatedJudgementType).Append("\n");
            sb.Append("  UpdatedJudgementTypeDescription: ").Append(UpdatedJudgementTypeDescription).Append("\n");
            sb.Append("  UpdatedAmount: ").Append(UpdatedAmount).Append("\n");
            sb.Append("  SubscriberReference: ").Append(SubscriberReference).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118AlertDetailQC);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118AlertDetailQC instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118AlertDetailQC to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118AlertDetailQC input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AlertType == input.AlertType ||
                    (this.AlertType != null &&
                    this.AlertType.Equals(input.AlertType))
                ) && 
                (
                    this.DateAlert == input.DateAlert ||
                    (this.DateAlert != null &&
                    this.DateAlert.Equals(input.DateAlert))
                ) && 
                (
                    this.ConsumerName == input.ConsumerName ||
                    (this.ConsumerName != null &&
                    this.ConsumerName.Equals(input.ConsumerName))
                ) && 
                (
                    this.IdNumber == input.IdNumber ||
                    (this.IdNumber != null &&
                    this.IdNumber.Equals(input.IdNumber))
                ) && 
                (
                    this.ConsumerNumber == input.ConsumerNumber ||
                    (this.ConsumerNumber != null &&
                    this.ConsumerNumber.Equals(input.ConsumerNumber))
                ) && 
                (
                    this.DateFlagged == input.DateFlagged ||
                    (this.DateFlagged != null &&
                    this.DateFlagged.Equals(input.DateFlagged))
                ) && 
                (
                    this.ActionType == input.ActionType ||
                    (this.ActionType != null &&
                    this.ActionType.Equals(input.ActionType))
                ) && 
                (
                    this.SubscriberNumber == input.SubscriberNumber ||
                    (this.SubscriberNumber != null &&
                    this.SubscriberNumber.Equals(input.SubscriberNumber))
                ) && 
                (
                    this.ActionDate == input.ActionDate ||
                    (this.ActionDate != null &&
                    this.ActionDate.Equals(input.ActionDate))
                ) && 
                (
                    this.NatureOfDebt == input.NatureOfDebt ||
                    (this.NatureOfDebt != null &&
                    this.NatureOfDebt.Equals(input.NatureOfDebt))
                ) && 
                (
                    this.NatureOfDebtDescription == input.NatureOfDebtDescription ||
                    (this.NatureOfDebtDescription != null &&
                    this.NatureOfDebtDescription.Equals(input.NatureOfDebtDescription))
                ) && 
                (
                    this.JudgementType == input.JudgementType ||
                    (this.JudgementType != null &&
                    this.JudgementType.Equals(input.JudgementType))
                ) && 
                (
                    this.JudgementTypeDescription == input.JudgementTypeDescription ||
                    (this.JudgementTypeDescription != null &&
                    this.JudgementTypeDescription.Equals(input.JudgementTypeDescription))
                ) && 
                (
                    this.Amount == input.Amount ||
                    (this.Amount != null &&
                    this.Amount.Equals(input.Amount))
                ) && 
                (
                    this.UpdatedJudgementType == input.UpdatedJudgementType ||
                    (this.UpdatedJudgementType != null &&
                    this.UpdatedJudgementType.Equals(input.UpdatedJudgementType))
                ) && 
                (
                    this.UpdatedJudgementTypeDescription == input.UpdatedJudgementTypeDescription ||
                    (this.UpdatedJudgementTypeDescription != null &&
                    this.UpdatedJudgementTypeDescription.Equals(input.UpdatedJudgementTypeDescription))
                ) && 
                (
                    this.UpdatedAmount == input.UpdatedAmount ||
                    (this.UpdatedAmount != null &&
                    this.UpdatedAmount.Equals(input.UpdatedAmount))
                ) && 
                (
                    this.SubscriberReference == input.SubscriberReference ||
                    (this.SubscriberReference != null &&
                    this.SubscriberReference.Equals(input.SubscriberReference))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AlertType != null)
                    hashCode = hashCode * 59 + this.AlertType.GetHashCode();
                if (this.DateAlert != null)
                    hashCode = hashCode * 59 + this.DateAlert.GetHashCode();
                if (this.ConsumerName != null)
                    hashCode = hashCode * 59 + this.ConsumerName.GetHashCode();
                if (this.IdNumber != null)
                    hashCode = hashCode * 59 + this.IdNumber.GetHashCode();
                if (this.ConsumerNumber != null)
                    hashCode = hashCode * 59 + this.ConsumerNumber.GetHashCode();
                if (this.DateFlagged != null)
                    hashCode = hashCode * 59 + this.DateFlagged.GetHashCode();
                if (this.ActionType != null)
                    hashCode = hashCode * 59 + this.ActionType.GetHashCode();
                if (this.SubscriberNumber != null)
                    hashCode = hashCode * 59 + this.SubscriberNumber.GetHashCode();
                if (this.ActionDate != null)
                    hashCode = hashCode * 59 + this.ActionDate.GetHashCode();
                if (this.NatureOfDebt != null)
                    hashCode = hashCode * 59 + this.NatureOfDebt.GetHashCode();
                if (this.NatureOfDebtDescription != null)
                    hashCode = hashCode * 59 + this.NatureOfDebtDescription.GetHashCode();
                if (this.JudgementType != null)
                    hashCode = hashCode * 59 + this.JudgementType.GetHashCode();
                if (this.JudgementTypeDescription != null)
                    hashCode = hashCode * 59 + this.JudgementTypeDescription.GetHashCode();
                if (this.Amount != null)
                    hashCode = hashCode * 59 + this.Amount.GetHashCode();
                if (this.UpdatedJudgementType != null)
                    hashCode = hashCode * 59 + this.UpdatedJudgementType.GetHashCode();
                if (this.UpdatedJudgementTypeDescription != null)
                    hashCode = hashCode * 59 + this.UpdatedJudgementTypeDescription.GetHashCode();
                if (this.UpdatedAmount != null)
                    hashCode = hashCode * 59 + this.UpdatedAmount.GetHashCode();
                if (this.SubscriberReference != null)
                    hashCode = hashCode * 59 + this.SubscriberReference.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
