/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118VehicleInformationUR
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118VehicleInformationUR :  IEquatable<TransunionConsumer118VehicleInformationUR>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118VehicleInformationUR" /> class.
        /// </summary>
        /// <param name="sapSMarkCode">sapSMarkCode.</param>
        /// <param name="sapSMarkDescription">sapSMarkDescription.</param>
        /// <param name="sapSMarkDate">sapSMarkDate.</param>
        /// <param name="sapSClearanceStatusCode">sapSClearanceStatusCode.</param>
        /// <param name="sapSClearanceStatusDescription">sapSClearanceStatusDescription.</param>
        /// <param name="sapSClearanceStatusDate">sapSClearanceStatusDate.</param>
        /// <param name="lifeCycleStatusCode">lifeCycleStatusCode.</param>
        /// <param name="lifeCycleStatusDescription">lifeCycleStatusDescription.</param>
        /// <param name="vehicleStateCode">vehicleStateCode.</param>
        /// <param name="vehicleStateDescription">vehicleStateDescription.</param>
        /// <param name="dateOfLastStateChange">dateOfLastStateChange.</param>
        /// <param name="roadworthyStatusCode">roadworthyStatusCode.</param>
        /// <param name="roadworthyStatusDescription">roadworthyStatusDescription.</param>
        /// <param name="dateOfLastRoadworthyStatus">dateOfLastRoadworthyStatus.</param>
        /// <param name="licenseExpiryDate">licenseExpiryDate.</param>
        /// <param name="currentLicenseNumber">currentLicenseNumber.</param>
        /// <param name="previousLicenseNumber">previousLicenseNumber.</param>
        /// <param name="prePreviousLicenseNumber">prePreviousLicenseNumber.</param>
        /// <param name="prePrePreviousLicenseNumber">prePrePreviousLicenseNumber.</param>
        /// <param name="dateOfFirstLicensing">dateOfFirstLicensing.</param>
        /// <param name="engineCapacity">engineCapacity.</param>
        /// <param name="vehicleCategoryCode">vehicleCategoryCode.</param>
        /// <param name="vehicleCategoryDescription">vehicleCategoryDescription.</param>
        /// <param name="naTISEnquiryDate">naTISEnquiryDate.</param>
        public TransunionConsumer118VehicleInformationUR(string sapSMarkCode = default(string), string sapSMarkDescription = default(string), string sapSMarkDate = default(string), string sapSClearanceStatusCode = default(string), string sapSClearanceStatusDescription = default(string), string sapSClearanceStatusDate = default(string), string lifeCycleStatusCode = default(string), string lifeCycleStatusDescription = default(string), string vehicleStateCode = default(string), string vehicleStateDescription = default(string), string dateOfLastStateChange = default(string), string roadworthyStatusCode = default(string), string roadworthyStatusDescription = default(string), string dateOfLastRoadworthyStatus = default(string), string licenseExpiryDate = default(string), string currentLicenseNumber = default(string), string previousLicenseNumber = default(string), string prePreviousLicenseNumber = default(string), string prePrePreviousLicenseNumber = default(string), string dateOfFirstLicensing = default(string), string engineCapacity = default(string), string vehicleCategoryCode = default(string), string vehicleCategoryDescription = default(string), string naTISEnquiryDate = default(string))
        {
            this.SapSMarkCode = sapSMarkCode;
            this.SapSMarkDescription = sapSMarkDescription;
            this.SapSMarkDate = sapSMarkDate;
            this.SapSClearanceStatusCode = sapSClearanceStatusCode;
            this.SapSClearanceStatusDescription = sapSClearanceStatusDescription;
            this.SapSClearanceStatusDate = sapSClearanceStatusDate;
            this.LifeCycleStatusCode = lifeCycleStatusCode;
            this.LifeCycleStatusDescription = lifeCycleStatusDescription;
            this.VehicleStateCode = vehicleStateCode;
            this.VehicleStateDescription = vehicleStateDescription;
            this.DateOfLastStateChange = dateOfLastStateChange;
            this.RoadworthyStatusCode = roadworthyStatusCode;
            this.RoadworthyStatusDescription = roadworthyStatusDescription;
            this.DateOfLastRoadworthyStatus = dateOfLastRoadworthyStatus;
            this.LicenseExpiryDate = licenseExpiryDate;
            this.CurrentLicenseNumber = currentLicenseNumber;
            this.PreviousLicenseNumber = previousLicenseNumber;
            this.PrePreviousLicenseNumber = prePreviousLicenseNumber;
            this.PrePrePreviousLicenseNumber = prePrePreviousLicenseNumber;
            this.DateOfFirstLicensing = dateOfFirstLicensing;
            this.EngineCapacity = engineCapacity;
            this.VehicleCategoryCode = vehicleCategoryCode;
            this.VehicleCategoryDescription = vehicleCategoryDescription;
            this.NaTISEnquiryDate = naTISEnquiryDate;
            this.SapSMarkCode = sapSMarkCode;
            this.SapSMarkDescription = sapSMarkDescription;
            this.SapSMarkDate = sapSMarkDate;
            this.SapSClearanceStatusCode = sapSClearanceStatusCode;
            this.SapSClearanceStatusDescription = sapSClearanceStatusDescription;
            this.SapSClearanceStatusDate = sapSClearanceStatusDate;
            this.LifeCycleStatusCode = lifeCycleStatusCode;
            this.LifeCycleStatusDescription = lifeCycleStatusDescription;
            this.VehicleStateCode = vehicleStateCode;
            this.VehicleStateDescription = vehicleStateDescription;
            this.DateOfLastStateChange = dateOfLastStateChange;
            this.RoadworthyStatusCode = roadworthyStatusCode;
            this.RoadworthyStatusDescription = roadworthyStatusDescription;
            this.DateOfLastRoadworthyStatus = dateOfLastRoadworthyStatus;
            this.LicenseExpiryDate = licenseExpiryDate;
            this.CurrentLicenseNumber = currentLicenseNumber;
            this.PreviousLicenseNumber = previousLicenseNumber;
            this.PrePreviousLicenseNumber = prePreviousLicenseNumber;
            this.PrePrePreviousLicenseNumber = prePrePreviousLicenseNumber;
            this.DateOfFirstLicensing = dateOfFirstLicensing;
            this.EngineCapacity = engineCapacity;
            this.VehicleCategoryCode = vehicleCategoryCode;
            this.VehicleCategoryDescription = vehicleCategoryDescription;
            this.NaTISEnquiryDate = naTISEnquiryDate;
        }

        /// <summary>
        /// Gets or Sets SapSMarkCode
        /// </summary>
        [DataMember(Name="sapS_Mark_Code", EmitDefaultValue=true)]
        public string SapSMarkCode { get; set; }

        /// <summary>
        /// Gets or Sets SapSMarkDescription
        /// </summary>
        [DataMember(Name="sapS_Mark_Description", EmitDefaultValue=true)]
        public string SapSMarkDescription { get; set; }

        /// <summary>
        /// Gets or Sets SapSMarkDate
        /// </summary>
        [DataMember(Name="sapS_Mark_Date", EmitDefaultValue=true)]
        public string SapSMarkDate { get; set; }

        /// <summary>
        /// Gets or Sets SapSClearanceStatusCode
        /// </summary>
        [DataMember(Name="sapS_Clearance_Status_Code", EmitDefaultValue=true)]
        public string SapSClearanceStatusCode { get; set; }

        /// <summary>
        /// Gets or Sets SapSClearanceStatusDescription
        /// </summary>
        [DataMember(Name="sapS_Clearance_Status_Description", EmitDefaultValue=true)]
        public string SapSClearanceStatusDescription { get; set; }

        /// <summary>
        /// Gets or Sets SapSClearanceStatusDate
        /// </summary>
        [DataMember(Name="sapS_Clearance_Status_Date", EmitDefaultValue=true)]
        public string SapSClearanceStatusDate { get; set; }

        /// <summary>
        /// Gets or Sets LifeCycleStatusCode
        /// </summary>
        [DataMember(Name="life_Cycle_Status_Code", EmitDefaultValue=true)]
        public string LifeCycleStatusCode { get; set; }

        /// <summary>
        /// Gets or Sets LifeCycleStatusDescription
        /// </summary>
        [DataMember(Name="life_Cycle_Status_Description", EmitDefaultValue=true)]
        public string LifeCycleStatusDescription { get; set; }

        /// <summary>
        /// Gets or Sets VehicleStateCode
        /// </summary>
        [DataMember(Name="vehicle_State_Code", EmitDefaultValue=true)]
        public string VehicleStateCode { get; set; }

        /// <summary>
        /// Gets or Sets VehicleStateDescription
        /// </summary>
        [DataMember(Name="vehicle_State_Description", EmitDefaultValue=true)]
        public string VehicleStateDescription { get; set; }

        /// <summary>
        /// Gets or Sets DateOfLastStateChange
        /// </summary>
        [DataMember(Name="date_Of_Last_State_Change", EmitDefaultValue=true)]
        public string DateOfLastStateChange { get; set; }

        /// <summary>
        /// Gets or Sets RoadworthyStatusCode
        /// </summary>
        [DataMember(Name="roadworthy_Status_Code", EmitDefaultValue=true)]
        public string RoadworthyStatusCode { get; set; }

        /// <summary>
        /// Gets or Sets RoadworthyStatusDescription
        /// </summary>
        [DataMember(Name="roadworthy_Status_Description", EmitDefaultValue=true)]
        public string RoadworthyStatusDescription { get; set; }

        /// <summary>
        /// Gets or Sets DateOfLastRoadworthyStatus
        /// </summary>
        [DataMember(Name="date_Of_Last_Roadworthy_Status", EmitDefaultValue=true)]
        public string DateOfLastRoadworthyStatus { get; set; }

        /// <summary>
        /// Gets or Sets LicenseExpiryDate
        /// </summary>
        [DataMember(Name="license_Expiry_Date", EmitDefaultValue=true)]
        public string LicenseExpiryDate { get; set; }

        /// <summary>
        /// Gets or Sets CurrentLicenseNumber
        /// </summary>
        [DataMember(Name="current_License_Number", EmitDefaultValue=true)]
        public string CurrentLicenseNumber { get; set; }

        /// <summary>
        /// Gets or Sets PreviousLicenseNumber
        /// </summary>
        [DataMember(Name="previous_License_Number", EmitDefaultValue=true)]
        public string PreviousLicenseNumber { get; set; }

        /// <summary>
        /// Gets or Sets PrePreviousLicenseNumber
        /// </summary>
        [DataMember(Name="pre_Previous_License_Number", EmitDefaultValue=true)]
        public string PrePreviousLicenseNumber { get; set; }

        /// <summary>
        /// Gets or Sets PrePrePreviousLicenseNumber
        /// </summary>
        [DataMember(Name="pre_Pre_Previous_License_Number", EmitDefaultValue=true)]
        public string PrePrePreviousLicenseNumber { get; set; }

        /// <summary>
        /// Gets or Sets DateOfFirstLicensing
        /// </summary>
        [DataMember(Name="date_Of_First_Licensing", EmitDefaultValue=true)]
        public string DateOfFirstLicensing { get; set; }

        /// <summary>
        /// Gets or Sets EngineCapacity
        /// </summary>
        [DataMember(Name="engine_Capacity", EmitDefaultValue=true)]
        public string EngineCapacity { get; set; }

        /// <summary>
        /// Gets or Sets VehicleCategoryCode
        /// </summary>
        [DataMember(Name="vehicle_Category_Code", EmitDefaultValue=true)]
        public string VehicleCategoryCode { get; set; }

        /// <summary>
        /// Gets or Sets VehicleCategoryDescription
        /// </summary>
        [DataMember(Name="vehicle_Category_Description", EmitDefaultValue=true)]
        public string VehicleCategoryDescription { get; set; }

        /// <summary>
        /// Gets or Sets NaTISEnquiryDate
        /// </summary>
        [DataMember(Name="naTIS_Enquiry_Date_", EmitDefaultValue=true)]
        public string NaTISEnquiryDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118VehicleInformationUR {\n");
            sb.Append("  SapSMarkCode: ").Append(SapSMarkCode).Append("\n");
            sb.Append("  SapSMarkDescription: ").Append(SapSMarkDescription).Append("\n");
            sb.Append("  SapSMarkDate: ").Append(SapSMarkDate).Append("\n");
            sb.Append("  SapSClearanceStatusCode: ").Append(SapSClearanceStatusCode).Append("\n");
            sb.Append("  SapSClearanceStatusDescription: ").Append(SapSClearanceStatusDescription).Append("\n");
            sb.Append("  SapSClearanceStatusDate: ").Append(SapSClearanceStatusDate).Append("\n");
            sb.Append("  LifeCycleStatusCode: ").Append(LifeCycleStatusCode).Append("\n");
            sb.Append("  LifeCycleStatusDescription: ").Append(LifeCycleStatusDescription).Append("\n");
            sb.Append("  VehicleStateCode: ").Append(VehicleStateCode).Append("\n");
            sb.Append("  VehicleStateDescription: ").Append(VehicleStateDescription).Append("\n");
            sb.Append("  DateOfLastStateChange: ").Append(DateOfLastStateChange).Append("\n");
            sb.Append("  RoadworthyStatusCode: ").Append(RoadworthyStatusCode).Append("\n");
            sb.Append("  RoadworthyStatusDescription: ").Append(RoadworthyStatusDescription).Append("\n");
            sb.Append("  DateOfLastRoadworthyStatus: ").Append(DateOfLastRoadworthyStatus).Append("\n");
            sb.Append("  LicenseExpiryDate: ").Append(LicenseExpiryDate).Append("\n");
            sb.Append("  CurrentLicenseNumber: ").Append(CurrentLicenseNumber).Append("\n");
            sb.Append("  PreviousLicenseNumber: ").Append(PreviousLicenseNumber).Append("\n");
            sb.Append("  PrePreviousLicenseNumber: ").Append(PrePreviousLicenseNumber).Append("\n");
            sb.Append("  PrePrePreviousLicenseNumber: ").Append(PrePrePreviousLicenseNumber).Append("\n");
            sb.Append("  DateOfFirstLicensing: ").Append(DateOfFirstLicensing).Append("\n");
            sb.Append("  EngineCapacity: ").Append(EngineCapacity).Append("\n");
            sb.Append("  VehicleCategoryCode: ").Append(VehicleCategoryCode).Append("\n");
            sb.Append("  VehicleCategoryDescription: ").Append(VehicleCategoryDescription).Append("\n");
            sb.Append("  NaTISEnquiryDate: ").Append(NaTISEnquiryDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118VehicleInformationUR);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118VehicleInformationUR instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118VehicleInformationUR to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118VehicleInformationUR input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SapSMarkCode == input.SapSMarkCode ||
                    (this.SapSMarkCode != null &&
                    this.SapSMarkCode.Equals(input.SapSMarkCode))
                ) && 
                (
                    this.SapSMarkDescription == input.SapSMarkDescription ||
                    (this.SapSMarkDescription != null &&
                    this.SapSMarkDescription.Equals(input.SapSMarkDescription))
                ) && 
                (
                    this.SapSMarkDate == input.SapSMarkDate ||
                    (this.SapSMarkDate != null &&
                    this.SapSMarkDate.Equals(input.SapSMarkDate))
                ) && 
                (
                    this.SapSClearanceStatusCode == input.SapSClearanceStatusCode ||
                    (this.SapSClearanceStatusCode != null &&
                    this.SapSClearanceStatusCode.Equals(input.SapSClearanceStatusCode))
                ) && 
                (
                    this.SapSClearanceStatusDescription == input.SapSClearanceStatusDescription ||
                    (this.SapSClearanceStatusDescription != null &&
                    this.SapSClearanceStatusDescription.Equals(input.SapSClearanceStatusDescription))
                ) && 
                (
                    this.SapSClearanceStatusDate == input.SapSClearanceStatusDate ||
                    (this.SapSClearanceStatusDate != null &&
                    this.SapSClearanceStatusDate.Equals(input.SapSClearanceStatusDate))
                ) && 
                (
                    this.LifeCycleStatusCode == input.LifeCycleStatusCode ||
                    (this.LifeCycleStatusCode != null &&
                    this.LifeCycleStatusCode.Equals(input.LifeCycleStatusCode))
                ) && 
                (
                    this.LifeCycleStatusDescription == input.LifeCycleStatusDescription ||
                    (this.LifeCycleStatusDescription != null &&
                    this.LifeCycleStatusDescription.Equals(input.LifeCycleStatusDescription))
                ) && 
                (
                    this.VehicleStateCode == input.VehicleStateCode ||
                    (this.VehicleStateCode != null &&
                    this.VehicleStateCode.Equals(input.VehicleStateCode))
                ) && 
                (
                    this.VehicleStateDescription == input.VehicleStateDescription ||
                    (this.VehicleStateDescription != null &&
                    this.VehicleStateDescription.Equals(input.VehicleStateDescription))
                ) && 
                (
                    this.DateOfLastStateChange == input.DateOfLastStateChange ||
                    (this.DateOfLastStateChange != null &&
                    this.DateOfLastStateChange.Equals(input.DateOfLastStateChange))
                ) && 
                (
                    this.RoadworthyStatusCode == input.RoadworthyStatusCode ||
                    (this.RoadworthyStatusCode != null &&
                    this.RoadworthyStatusCode.Equals(input.RoadworthyStatusCode))
                ) && 
                (
                    this.RoadworthyStatusDescription == input.RoadworthyStatusDescription ||
                    (this.RoadworthyStatusDescription != null &&
                    this.RoadworthyStatusDescription.Equals(input.RoadworthyStatusDescription))
                ) && 
                (
                    this.DateOfLastRoadworthyStatus == input.DateOfLastRoadworthyStatus ||
                    (this.DateOfLastRoadworthyStatus != null &&
                    this.DateOfLastRoadworthyStatus.Equals(input.DateOfLastRoadworthyStatus))
                ) && 
                (
                    this.LicenseExpiryDate == input.LicenseExpiryDate ||
                    (this.LicenseExpiryDate != null &&
                    this.LicenseExpiryDate.Equals(input.LicenseExpiryDate))
                ) && 
                (
                    this.CurrentLicenseNumber == input.CurrentLicenseNumber ||
                    (this.CurrentLicenseNumber != null &&
                    this.CurrentLicenseNumber.Equals(input.CurrentLicenseNumber))
                ) && 
                (
                    this.PreviousLicenseNumber == input.PreviousLicenseNumber ||
                    (this.PreviousLicenseNumber != null &&
                    this.PreviousLicenseNumber.Equals(input.PreviousLicenseNumber))
                ) && 
                (
                    this.PrePreviousLicenseNumber == input.PrePreviousLicenseNumber ||
                    (this.PrePreviousLicenseNumber != null &&
                    this.PrePreviousLicenseNumber.Equals(input.PrePreviousLicenseNumber))
                ) && 
                (
                    this.PrePrePreviousLicenseNumber == input.PrePrePreviousLicenseNumber ||
                    (this.PrePrePreviousLicenseNumber != null &&
                    this.PrePrePreviousLicenseNumber.Equals(input.PrePrePreviousLicenseNumber))
                ) && 
                (
                    this.DateOfFirstLicensing == input.DateOfFirstLicensing ||
                    (this.DateOfFirstLicensing != null &&
                    this.DateOfFirstLicensing.Equals(input.DateOfFirstLicensing))
                ) && 
                (
                    this.EngineCapacity == input.EngineCapacity ||
                    (this.EngineCapacity != null &&
                    this.EngineCapacity.Equals(input.EngineCapacity))
                ) && 
                (
                    this.VehicleCategoryCode == input.VehicleCategoryCode ||
                    (this.VehicleCategoryCode != null &&
                    this.VehicleCategoryCode.Equals(input.VehicleCategoryCode))
                ) && 
                (
                    this.VehicleCategoryDescription == input.VehicleCategoryDescription ||
                    (this.VehicleCategoryDescription != null &&
                    this.VehicleCategoryDescription.Equals(input.VehicleCategoryDescription))
                ) && 
                (
                    this.NaTISEnquiryDate == input.NaTISEnquiryDate ||
                    (this.NaTISEnquiryDate != null &&
                    this.NaTISEnquiryDate.Equals(input.NaTISEnquiryDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SapSMarkCode != null)
                    hashCode = hashCode * 59 + this.SapSMarkCode.GetHashCode();
                if (this.SapSMarkDescription != null)
                    hashCode = hashCode * 59 + this.SapSMarkDescription.GetHashCode();
                if (this.SapSMarkDate != null)
                    hashCode = hashCode * 59 + this.SapSMarkDate.GetHashCode();
                if (this.SapSClearanceStatusCode != null)
                    hashCode = hashCode * 59 + this.SapSClearanceStatusCode.GetHashCode();
                if (this.SapSClearanceStatusDescription != null)
                    hashCode = hashCode * 59 + this.SapSClearanceStatusDescription.GetHashCode();
                if (this.SapSClearanceStatusDate != null)
                    hashCode = hashCode * 59 + this.SapSClearanceStatusDate.GetHashCode();
                if (this.LifeCycleStatusCode != null)
                    hashCode = hashCode * 59 + this.LifeCycleStatusCode.GetHashCode();
                if (this.LifeCycleStatusDescription != null)
                    hashCode = hashCode * 59 + this.LifeCycleStatusDescription.GetHashCode();
                if (this.VehicleStateCode != null)
                    hashCode = hashCode * 59 + this.VehicleStateCode.GetHashCode();
                if (this.VehicleStateDescription != null)
                    hashCode = hashCode * 59 + this.VehicleStateDescription.GetHashCode();
                if (this.DateOfLastStateChange != null)
                    hashCode = hashCode * 59 + this.DateOfLastStateChange.GetHashCode();
                if (this.RoadworthyStatusCode != null)
                    hashCode = hashCode * 59 + this.RoadworthyStatusCode.GetHashCode();
                if (this.RoadworthyStatusDescription != null)
                    hashCode = hashCode * 59 + this.RoadworthyStatusDescription.GetHashCode();
                if (this.DateOfLastRoadworthyStatus != null)
                    hashCode = hashCode * 59 + this.DateOfLastRoadworthyStatus.GetHashCode();
                if (this.LicenseExpiryDate != null)
                    hashCode = hashCode * 59 + this.LicenseExpiryDate.GetHashCode();
                if (this.CurrentLicenseNumber != null)
                    hashCode = hashCode * 59 + this.CurrentLicenseNumber.GetHashCode();
                if (this.PreviousLicenseNumber != null)
                    hashCode = hashCode * 59 + this.PreviousLicenseNumber.GetHashCode();
                if (this.PrePreviousLicenseNumber != null)
                    hashCode = hashCode * 59 + this.PrePreviousLicenseNumber.GetHashCode();
                if (this.PrePrePreviousLicenseNumber != null)
                    hashCode = hashCode * 59 + this.PrePrePreviousLicenseNumber.GetHashCode();
                if (this.DateOfFirstLicensing != null)
                    hashCode = hashCode * 59 + this.DateOfFirstLicensing.GetHashCode();
                if (this.EngineCapacity != null)
                    hashCode = hashCode * 59 + this.EngineCapacity.GetHashCode();
                if (this.VehicleCategoryCode != null)
                    hashCode = hashCode * 59 + this.VehicleCategoryCode.GetHashCode();
                if (this.VehicleCategoryDescription != null)
                    hashCode = hashCode * 59 + this.VehicleCategoryDescription.GetHashCode();
                if (this.NaTISEnquiryDate != null)
                    hashCode = hashCode * 59 + this.NaTISEnquiryDate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
