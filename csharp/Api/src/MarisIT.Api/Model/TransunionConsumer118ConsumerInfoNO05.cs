/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118ConsumerInfoNO05
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118ConsumerInfoNO05 :  IEquatable<TransunionConsumer118ConsumerInfoNO05>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118ConsumerInfoNO05" /> class.
        /// </summary>
        /// <param name="recordSeq">recordSeq.</param>
        /// <param name="part">part.</param>
        /// <param name="partSeq">partSeq.</param>
        /// <param name="consumerNo">consumerNo.</param>
        /// <param name="surname">surname.</param>
        /// <param name="forename1">forename1.</param>
        /// <param name="forename2">forename2.</param>
        /// <param name="forename3">forename3.</param>
        /// <param name="title">title.</param>
        /// <param name="gender">gender.</param>
        /// <param name="nameInfoDate">nameInfoDate.</param>
        /// <param name="dateOfBirth">dateOfBirth.</param>
        /// <param name="identityNo1">identityNo1.</param>
        /// <param name="identityNo2">identityNo2.</param>
        /// <param name="maritalStatusCode">maritalStatusCode.</param>
        /// <param name="maritalStatusDesc">maritalStatusDesc.</param>
        /// <param name="dependants">dependants.</param>
        /// <param name="spouseName1">spouseName1.</param>
        /// <param name="spouseName2">spouseName2.</param>
        /// <param name="telephoneNumbers">telephoneNumbers.</param>
        /// <param name="deceasedDate">deceasedDate.</param>
        /// <param name="cellNumber">cellNumber.</param>
        /// <param name="eMail">eMail.</param>
        public TransunionConsumer118ConsumerInfoNO05(string recordSeq = default(string), string part = default(string), string partSeq = default(string), string consumerNo = default(string), string surname = default(string), string forename1 = default(string), string forename2 = default(string), string forename3 = default(string), string title = default(string), string gender = default(string), string nameInfoDate = default(string), string dateOfBirth = default(string), string identityNo1 = default(string), string identityNo2 = default(string), string maritalStatusCode = default(string), string maritalStatusDesc = default(string), string dependants = default(string), string spouseName1 = default(string), string spouseName2 = default(string), string telephoneNumbers = default(string), string deceasedDate = default(string), string cellNumber = default(string), string eMail = default(string))
        {
            this.RecordSeq = recordSeq;
            this.Part = part;
            this.PartSeq = partSeq;
            this.ConsumerNo = consumerNo;
            this.Surname = surname;
            this.Forename1 = forename1;
            this.Forename2 = forename2;
            this.Forename3 = forename3;
            this.Title = title;
            this.Gender = gender;
            this.NameInfoDate = nameInfoDate;
            this.DateOfBirth = dateOfBirth;
            this.IdentityNo1 = identityNo1;
            this.IdentityNo2 = identityNo2;
            this.MaritalStatusCode = maritalStatusCode;
            this.MaritalStatusDesc = maritalStatusDesc;
            this.Dependants = dependants;
            this.SpouseName1 = spouseName1;
            this.SpouseName2 = spouseName2;
            this.TelephoneNumbers = telephoneNumbers;
            this.DeceasedDate = deceasedDate;
            this.CellNumber = cellNumber;
            this.EMail = eMail;
            this.RecordSeq = recordSeq;
            this.Part = part;
            this.PartSeq = partSeq;
            this.ConsumerNo = consumerNo;
            this.Surname = surname;
            this.Forename1 = forename1;
            this.Forename2 = forename2;
            this.Forename3 = forename3;
            this.Title = title;
            this.Gender = gender;
            this.NameInfoDate = nameInfoDate;
            this.DateOfBirth = dateOfBirth;
            this.IdentityNo1 = identityNo1;
            this.IdentityNo2 = identityNo2;
            this.MaritalStatusCode = maritalStatusCode;
            this.MaritalStatusDesc = maritalStatusDesc;
            this.Dependants = dependants;
            this.SpouseName1 = spouseName1;
            this.SpouseName2 = spouseName2;
            this.TelephoneNumbers = telephoneNumbers;
            this.DeceasedDate = deceasedDate;
            this.CellNumber = cellNumber;
            this.EMail = eMail;
        }

        /// <summary>
        /// Gets or Sets RecordSeq
        /// </summary>
        [DataMember(Name="recordSeq", EmitDefaultValue=true)]
        public string RecordSeq { get; set; }

        /// <summary>
        /// Gets or Sets Part
        /// </summary>
        [DataMember(Name="part", EmitDefaultValue=true)]
        public string Part { get; set; }

        /// <summary>
        /// Gets or Sets PartSeq
        /// </summary>
        [DataMember(Name="partSeq", EmitDefaultValue=true)]
        public string PartSeq { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerNo
        /// </summary>
        [DataMember(Name="consumerNo", EmitDefaultValue=true)]
        public string ConsumerNo { get; set; }

        /// <summary>
        /// Gets or Sets Surname
        /// </summary>
        [DataMember(Name="surname", EmitDefaultValue=true)]
        public string Surname { get; set; }

        /// <summary>
        /// Gets or Sets Forename1
        /// </summary>
        [DataMember(Name="forename1", EmitDefaultValue=true)]
        public string Forename1 { get; set; }

        /// <summary>
        /// Gets or Sets Forename2
        /// </summary>
        [DataMember(Name="forename2", EmitDefaultValue=true)]
        public string Forename2 { get; set; }

        /// <summary>
        /// Gets or Sets Forename3
        /// </summary>
        [DataMember(Name="forename3", EmitDefaultValue=true)]
        public string Forename3 { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=true)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Gender
        /// </summary>
        [DataMember(Name="gender", EmitDefaultValue=true)]
        public string Gender { get; set; }

        /// <summary>
        /// Gets or Sets NameInfoDate
        /// </summary>
        [DataMember(Name="nameInfoDate", EmitDefaultValue=true)]
        public string NameInfoDate { get; set; }

        /// <summary>
        /// Gets or Sets DateOfBirth
        /// </summary>
        [DataMember(Name="dateOfBirth", EmitDefaultValue=true)]
        public string DateOfBirth { get; set; }

        /// <summary>
        /// Gets or Sets IdentityNo1
        /// </summary>
        [DataMember(Name="identityNo1", EmitDefaultValue=true)]
        public string IdentityNo1 { get; set; }

        /// <summary>
        /// Gets or Sets IdentityNo2
        /// </summary>
        [DataMember(Name="identityNo2", EmitDefaultValue=true)]
        public string IdentityNo2 { get; set; }

        /// <summary>
        /// Gets or Sets MaritalStatusCode
        /// </summary>
        [DataMember(Name="maritalStatusCode", EmitDefaultValue=true)]
        public string MaritalStatusCode { get; set; }

        /// <summary>
        /// Gets or Sets MaritalStatusDesc
        /// </summary>
        [DataMember(Name="maritalStatusDesc", EmitDefaultValue=true)]
        public string MaritalStatusDesc { get; set; }

        /// <summary>
        /// Gets or Sets Dependants
        /// </summary>
        [DataMember(Name="dependants", EmitDefaultValue=true)]
        public string Dependants { get; set; }

        /// <summary>
        /// Gets or Sets SpouseName1
        /// </summary>
        [DataMember(Name="spouseName1", EmitDefaultValue=true)]
        public string SpouseName1 { get; set; }

        /// <summary>
        /// Gets or Sets SpouseName2
        /// </summary>
        [DataMember(Name="spouseName2", EmitDefaultValue=true)]
        public string SpouseName2 { get; set; }

        /// <summary>
        /// Gets or Sets TelephoneNumbers
        /// </summary>
        [DataMember(Name="telephoneNumbers", EmitDefaultValue=true)]
        public string TelephoneNumbers { get; set; }

        /// <summary>
        /// Gets or Sets DeceasedDate
        /// </summary>
        [DataMember(Name="deceasedDate", EmitDefaultValue=true)]
        public string DeceasedDate { get; set; }

        /// <summary>
        /// Gets or Sets CellNumber
        /// </summary>
        [DataMember(Name="cellNumber", EmitDefaultValue=true)]
        public string CellNumber { get; set; }

        /// <summary>
        /// Gets or Sets EMail
        /// </summary>
        [DataMember(Name="eMail", EmitDefaultValue=true)]
        public string EMail { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118ConsumerInfoNO05 {\n");
            sb.Append("  RecordSeq: ").Append(RecordSeq).Append("\n");
            sb.Append("  Part: ").Append(Part).Append("\n");
            sb.Append("  PartSeq: ").Append(PartSeq).Append("\n");
            sb.Append("  ConsumerNo: ").Append(ConsumerNo).Append("\n");
            sb.Append("  Surname: ").Append(Surname).Append("\n");
            sb.Append("  Forename1: ").Append(Forename1).Append("\n");
            sb.Append("  Forename2: ").Append(Forename2).Append("\n");
            sb.Append("  Forename3: ").Append(Forename3).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Gender: ").Append(Gender).Append("\n");
            sb.Append("  NameInfoDate: ").Append(NameInfoDate).Append("\n");
            sb.Append("  DateOfBirth: ").Append(DateOfBirth).Append("\n");
            sb.Append("  IdentityNo1: ").Append(IdentityNo1).Append("\n");
            sb.Append("  IdentityNo2: ").Append(IdentityNo2).Append("\n");
            sb.Append("  MaritalStatusCode: ").Append(MaritalStatusCode).Append("\n");
            sb.Append("  MaritalStatusDesc: ").Append(MaritalStatusDesc).Append("\n");
            sb.Append("  Dependants: ").Append(Dependants).Append("\n");
            sb.Append("  SpouseName1: ").Append(SpouseName1).Append("\n");
            sb.Append("  SpouseName2: ").Append(SpouseName2).Append("\n");
            sb.Append("  TelephoneNumbers: ").Append(TelephoneNumbers).Append("\n");
            sb.Append("  DeceasedDate: ").Append(DeceasedDate).Append("\n");
            sb.Append("  CellNumber: ").Append(CellNumber).Append("\n");
            sb.Append("  EMail: ").Append(EMail).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118ConsumerInfoNO05);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118ConsumerInfoNO05 instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118ConsumerInfoNO05 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118ConsumerInfoNO05 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.RecordSeq == input.RecordSeq ||
                    (this.RecordSeq != null &&
                    this.RecordSeq.Equals(input.RecordSeq))
                ) && 
                (
                    this.Part == input.Part ||
                    (this.Part != null &&
                    this.Part.Equals(input.Part))
                ) && 
                (
                    this.PartSeq == input.PartSeq ||
                    (this.PartSeq != null &&
                    this.PartSeq.Equals(input.PartSeq))
                ) && 
                (
                    this.ConsumerNo == input.ConsumerNo ||
                    (this.ConsumerNo != null &&
                    this.ConsumerNo.Equals(input.ConsumerNo))
                ) && 
                (
                    this.Surname == input.Surname ||
                    (this.Surname != null &&
                    this.Surname.Equals(input.Surname))
                ) && 
                (
                    this.Forename1 == input.Forename1 ||
                    (this.Forename1 != null &&
                    this.Forename1.Equals(input.Forename1))
                ) && 
                (
                    this.Forename2 == input.Forename2 ||
                    (this.Forename2 != null &&
                    this.Forename2.Equals(input.Forename2))
                ) && 
                (
                    this.Forename3 == input.Forename3 ||
                    (this.Forename3 != null &&
                    this.Forename3.Equals(input.Forename3))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.Gender == input.Gender ||
                    (this.Gender != null &&
                    this.Gender.Equals(input.Gender))
                ) && 
                (
                    this.NameInfoDate == input.NameInfoDate ||
                    (this.NameInfoDate != null &&
                    this.NameInfoDate.Equals(input.NameInfoDate))
                ) && 
                (
                    this.DateOfBirth == input.DateOfBirth ||
                    (this.DateOfBirth != null &&
                    this.DateOfBirth.Equals(input.DateOfBirth))
                ) && 
                (
                    this.IdentityNo1 == input.IdentityNo1 ||
                    (this.IdentityNo1 != null &&
                    this.IdentityNo1.Equals(input.IdentityNo1))
                ) && 
                (
                    this.IdentityNo2 == input.IdentityNo2 ||
                    (this.IdentityNo2 != null &&
                    this.IdentityNo2.Equals(input.IdentityNo2))
                ) && 
                (
                    this.MaritalStatusCode == input.MaritalStatusCode ||
                    (this.MaritalStatusCode != null &&
                    this.MaritalStatusCode.Equals(input.MaritalStatusCode))
                ) && 
                (
                    this.MaritalStatusDesc == input.MaritalStatusDesc ||
                    (this.MaritalStatusDesc != null &&
                    this.MaritalStatusDesc.Equals(input.MaritalStatusDesc))
                ) && 
                (
                    this.Dependants == input.Dependants ||
                    (this.Dependants != null &&
                    this.Dependants.Equals(input.Dependants))
                ) && 
                (
                    this.SpouseName1 == input.SpouseName1 ||
                    (this.SpouseName1 != null &&
                    this.SpouseName1.Equals(input.SpouseName1))
                ) && 
                (
                    this.SpouseName2 == input.SpouseName2 ||
                    (this.SpouseName2 != null &&
                    this.SpouseName2.Equals(input.SpouseName2))
                ) && 
                (
                    this.TelephoneNumbers == input.TelephoneNumbers ||
                    (this.TelephoneNumbers != null &&
                    this.TelephoneNumbers.Equals(input.TelephoneNumbers))
                ) && 
                (
                    this.DeceasedDate == input.DeceasedDate ||
                    (this.DeceasedDate != null &&
                    this.DeceasedDate.Equals(input.DeceasedDate))
                ) && 
                (
                    this.CellNumber == input.CellNumber ||
                    (this.CellNumber != null &&
                    this.CellNumber.Equals(input.CellNumber))
                ) && 
                (
                    this.EMail == input.EMail ||
                    (this.EMail != null &&
                    this.EMail.Equals(input.EMail))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RecordSeq != null)
                    hashCode = hashCode * 59 + this.RecordSeq.GetHashCode();
                if (this.Part != null)
                    hashCode = hashCode * 59 + this.Part.GetHashCode();
                if (this.PartSeq != null)
                    hashCode = hashCode * 59 + this.PartSeq.GetHashCode();
                if (this.ConsumerNo != null)
                    hashCode = hashCode * 59 + this.ConsumerNo.GetHashCode();
                if (this.Surname != null)
                    hashCode = hashCode * 59 + this.Surname.GetHashCode();
                if (this.Forename1 != null)
                    hashCode = hashCode * 59 + this.Forename1.GetHashCode();
                if (this.Forename2 != null)
                    hashCode = hashCode * 59 + this.Forename2.GetHashCode();
                if (this.Forename3 != null)
                    hashCode = hashCode * 59 + this.Forename3.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.Gender != null)
                    hashCode = hashCode * 59 + this.Gender.GetHashCode();
                if (this.NameInfoDate != null)
                    hashCode = hashCode * 59 + this.NameInfoDate.GetHashCode();
                if (this.DateOfBirth != null)
                    hashCode = hashCode * 59 + this.DateOfBirth.GetHashCode();
                if (this.IdentityNo1 != null)
                    hashCode = hashCode * 59 + this.IdentityNo1.GetHashCode();
                if (this.IdentityNo2 != null)
                    hashCode = hashCode * 59 + this.IdentityNo2.GetHashCode();
                if (this.MaritalStatusCode != null)
                    hashCode = hashCode * 59 + this.MaritalStatusCode.GetHashCode();
                if (this.MaritalStatusDesc != null)
                    hashCode = hashCode * 59 + this.MaritalStatusDesc.GetHashCode();
                if (this.Dependants != null)
                    hashCode = hashCode * 59 + this.Dependants.GetHashCode();
                if (this.SpouseName1 != null)
                    hashCode = hashCode * 59 + this.SpouseName1.GetHashCode();
                if (this.SpouseName2 != null)
                    hashCode = hashCode * 59 + this.SpouseName2.GetHashCode();
                if (this.TelephoneNumbers != null)
                    hashCode = hashCode * 59 + this.TelephoneNumbers.GetHashCode();
                if (this.DeceasedDate != null)
                    hashCode = hashCode * 59 + this.DeceasedDate.GetHashCode();
                if (this.CellNumber != null)
                    hashCode = hashCode * 59 + this.CellNumber.GetHashCode();
                if (this.EMail != null)
                    hashCode = hashCode * 59 + this.EMail.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
