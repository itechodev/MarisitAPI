/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// XdsConsumerMaritalStatusEnquiry
    /// </summary>
    [DataContract]
    public partial class XdsConsumerMaritalStatusEnquiry :  IEquatable<XdsConsumerMaritalStatusEnquiry>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XdsConsumerMaritalStatusEnquiry" /> class.
        /// </summary>
        /// <param name="consumerID">consumerID.</param>
        /// <param name="displayText">displayText.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="idno">idno.</param>
        /// <param name="spouseConsumerID">spouseConsumerID.</param>
        /// <param name="spouseFirstName">spouseFirstName.</param>
        /// <param name="spouseIDno">spouseIDno.</param>
        /// <param name="spouseSurName">spouseSurName.</param>
        /// <param name="surname">surname.</param>
        public XdsConsumerMaritalStatusEnquiry(string consumerID = default(string), string displayText = default(string), string firstName = default(string), string idno = default(string), string spouseConsumerID = default(string), string spouseFirstName = default(string), string spouseIDno = default(string), string spouseSurName = default(string), string surname = default(string))
        {
            this.ConsumerID = consumerID;
            this.DisplayText = displayText;
            this.FirstName = firstName;
            this.Idno = idno;
            this.SpouseConsumerID = spouseConsumerID;
            this.SpouseFirstName = spouseFirstName;
            this.SpouseIDno = spouseIDno;
            this.SpouseSurName = spouseSurName;
            this.Surname = surname;
            this.ConsumerID = consumerID;
            this.DisplayText = displayText;
            this.FirstName = firstName;
            this.Idno = idno;
            this.SpouseConsumerID = spouseConsumerID;
            this.SpouseFirstName = spouseFirstName;
            this.SpouseIDno = spouseIDno;
            this.SpouseSurName = spouseSurName;
            this.Surname = surname;
        }

        /// <summary>
        /// Gets or Sets ConsumerID
        /// </summary>
        [DataMember(Name="consumerID", EmitDefaultValue=true)]
        public string ConsumerID { get; set; }

        /// <summary>
        /// Gets or Sets DisplayText
        /// </summary>
        [DataMember(Name="displayText", EmitDefaultValue=true)]
        public string DisplayText { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name="firstName", EmitDefaultValue=true)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets Idno
        /// </summary>
        [DataMember(Name="idno", EmitDefaultValue=true)]
        public string Idno { get; set; }

        /// <summary>
        /// Gets or Sets SpouseConsumerID
        /// </summary>
        [DataMember(Name="spouseConsumerID", EmitDefaultValue=true)]
        public string SpouseConsumerID { get; set; }

        /// <summary>
        /// Gets or Sets SpouseFirstName
        /// </summary>
        [DataMember(Name="spouseFirstName", EmitDefaultValue=true)]
        public string SpouseFirstName { get; set; }

        /// <summary>
        /// Gets or Sets SpouseIDno
        /// </summary>
        [DataMember(Name="spouseIDno", EmitDefaultValue=true)]
        public string SpouseIDno { get; set; }

        /// <summary>
        /// Gets or Sets SpouseSurName
        /// </summary>
        [DataMember(Name="spouseSurName", EmitDefaultValue=true)]
        public string SpouseSurName { get; set; }

        /// <summary>
        /// Gets or Sets Surname
        /// </summary>
        [DataMember(Name="surname", EmitDefaultValue=true)]
        public string Surname { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class XdsConsumerMaritalStatusEnquiry {\n");
            sb.Append("  ConsumerID: ").Append(ConsumerID).Append("\n");
            sb.Append("  DisplayText: ").Append(DisplayText).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  Idno: ").Append(Idno).Append("\n");
            sb.Append("  SpouseConsumerID: ").Append(SpouseConsumerID).Append("\n");
            sb.Append("  SpouseFirstName: ").Append(SpouseFirstName).Append("\n");
            sb.Append("  SpouseIDno: ").Append(SpouseIDno).Append("\n");
            sb.Append("  SpouseSurName: ").Append(SpouseSurName).Append("\n");
            sb.Append("  Surname: ").Append(Surname).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as XdsConsumerMaritalStatusEnquiry);
        }

        /// <summary>
        /// Returns true if XdsConsumerMaritalStatusEnquiry instances are equal
        /// </summary>
        /// <param name="input">Instance of XdsConsumerMaritalStatusEnquiry to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(XdsConsumerMaritalStatusEnquiry input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConsumerID == input.ConsumerID ||
                    (this.ConsumerID != null &&
                    this.ConsumerID.Equals(input.ConsumerID))
                ) && 
                (
                    this.DisplayText == input.DisplayText ||
                    (this.DisplayText != null &&
                    this.DisplayText.Equals(input.DisplayText))
                ) && 
                (
                    this.FirstName == input.FirstName ||
                    (this.FirstName != null &&
                    this.FirstName.Equals(input.FirstName))
                ) && 
                (
                    this.Idno == input.Idno ||
                    (this.Idno != null &&
                    this.Idno.Equals(input.Idno))
                ) && 
                (
                    this.SpouseConsumerID == input.SpouseConsumerID ||
                    (this.SpouseConsumerID != null &&
                    this.SpouseConsumerID.Equals(input.SpouseConsumerID))
                ) && 
                (
                    this.SpouseFirstName == input.SpouseFirstName ||
                    (this.SpouseFirstName != null &&
                    this.SpouseFirstName.Equals(input.SpouseFirstName))
                ) && 
                (
                    this.SpouseIDno == input.SpouseIDno ||
                    (this.SpouseIDno != null &&
                    this.SpouseIDno.Equals(input.SpouseIDno))
                ) && 
                (
                    this.SpouseSurName == input.SpouseSurName ||
                    (this.SpouseSurName != null &&
                    this.SpouseSurName.Equals(input.SpouseSurName))
                ) && 
                (
                    this.Surname == input.Surname ||
                    (this.Surname != null &&
                    this.Surname.Equals(input.Surname))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConsumerID != null)
                    hashCode = hashCode * 59 + this.ConsumerID.GetHashCode();
                if (this.DisplayText != null)
                    hashCode = hashCode * 59 + this.DisplayText.GetHashCode();
                if (this.FirstName != null)
                    hashCode = hashCode * 59 + this.FirstName.GetHashCode();
                if (this.Idno != null)
                    hashCode = hashCode * 59 + this.Idno.GetHashCode();
                if (this.SpouseConsumerID != null)
                    hashCode = hashCode * 59 + this.SpouseConsumerID.GetHashCode();
                if (this.SpouseFirstName != null)
                    hashCode = hashCode * 59 + this.SpouseFirstName.GetHashCode();
                if (this.SpouseIDno != null)
                    hashCode = hashCode * 59 + this.SpouseIDno.GetHashCode();
                if (this.SpouseSurName != null)
                    hashCode = hashCode * 59 + this.SpouseSurName.GetHashCode();
                if (this.Surname != null)
                    hashCode = hashCode * 59 + this.Surname.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
