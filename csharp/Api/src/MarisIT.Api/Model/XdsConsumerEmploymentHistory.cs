/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// XdsConsumerEmploymentHistory
    /// </summary>
    [DataContract]
    public partial class XdsConsumerEmploymentHistory :  IEquatable<XdsConsumerEmploymentHistory>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XdsConsumerEmploymentHistory" /> class.
        /// </summary>
        /// <param name="designation">designation.</param>
        /// <param name="displayText">displayText.</param>
        /// <param name="employerDetail">employerDetail.</param>
        /// <param name="firstReportedDate">firstReportedDate.</param>
        /// <param name="lastUpdatedDate">lastUpdatedDate.</param>
        public XdsConsumerEmploymentHistory(string designation = default(string), string displayText = default(string), string employerDetail = default(string), string firstReportedDate = default(string), string lastUpdatedDate = default(string))
        {
            this.Designation = designation;
            this.DisplayText = displayText;
            this.EmployerDetail = employerDetail;
            this.FirstReportedDate = firstReportedDate;
            this.LastUpdatedDate = lastUpdatedDate;
            this.Designation = designation;
            this.DisplayText = displayText;
            this.EmployerDetail = employerDetail;
            this.FirstReportedDate = firstReportedDate;
            this.LastUpdatedDate = lastUpdatedDate;
        }

        /// <summary>
        /// Gets or Sets Designation
        /// </summary>
        [DataMember(Name="designation", EmitDefaultValue=true)]
        public string Designation { get; set; }

        /// <summary>
        /// Gets or Sets DisplayText
        /// </summary>
        [DataMember(Name="displayText", EmitDefaultValue=true)]
        public string DisplayText { get; set; }

        /// <summary>
        /// Gets or Sets EmployerDetail
        /// </summary>
        [DataMember(Name="employerDetail", EmitDefaultValue=true)]
        public string EmployerDetail { get; set; }

        /// <summary>
        /// Gets or Sets FirstReportedDate
        /// </summary>
        [DataMember(Name="firstReportedDate", EmitDefaultValue=true)]
        public string FirstReportedDate { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdatedDate
        /// </summary>
        [DataMember(Name="lastUpdatedDate", EmitDefaultValue=true)]
        public string LastUpdatedDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class XdsConsumerEmploymentHistory {\n");
            sb.Append("  Designation: ").Append(Designation).Append("\n");
            sb.Append("  DisplayText: ").Append(DisplayText).Append("\n");
            sb.Append("  EmployerDetail: ").Append(EmployerDetail).Append("\n");
            sb.Append("  FirstReportedDate: ").Append(FirstReportedDate).Append("\n");
            sb.Append("  LastUpdatedDate: ").Append(LastUpdatedDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as XdsConsumerEmploymentHistory);
        }

        /// <summary>
        /// Returns true if XdsConsumerEmploymentHistory instances are equal
        /// </summary>
        /// <param name="input">Instance of XdsConsumerEmploymentHistory to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(XdsConsumerEmploymentHistory input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Designation == input.Designation ||
                    (this.Designation != null &&
                    this.Designation.Equals(input.Designation))
                ) && 
                (
                    this.DisplayText == input.DisplayText ||
                    (this.DisplayText != null &&
                    this.DisplayText.Equals(input.DisplayText))
                ) && 
                (
                    this.EmployerDetail == input.EmployerDetail ||
                    (this.EmployerDetail != null &&
                    this.EmployerDetail.Equals(input.EmployerDetail))
                ) && 
                (
                    this.FirstReportedDate == input.FirstReportedDate ||
                    (this.FirstReportedDate != null &&
                    this.FirstReportedDate.Equals(input.FirstReportedDate))
                ) && 
                (
                    this.LastUpdatedDate == input.LastUpdatedDate ||
                    (this.LastUpdatedDate != null &&
                    this.LastUpdatedDate.Equals(input.LastUpdatedDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Designation != null)
                    hashCode = hashCode * 59 + this.Designation.GetHashCode();
                if (this.DisplayText != null)
                    hashCode = hashCode * 59 + this.DisplayText.GetHashCode();
                if (this.EmployerDetail != null)
                    hashCode = hashCode * 59 + this.EmployerDetail.GetHashCode();
                if (this.FirstReportedDate != null)
                    hashCode = hashCode * 59 + this.FirstReportedDate.GetHashCode();
                if (this.LastUpdatedDate != null)
                    hashCode = hashCode * 59 + this.LastUpdatedDate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
