/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118ActiveRiskAddresses
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118ActiveRiskAddresses :  IEquatable<TransunionConsumer118ActiveRiskAddresses>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118ActiveRiskAddresses" /> class.
        /// </summary>
        /// <param name="effectiveDate">effectiveDate.</param>
        /// <param name="bCCancellationDate">bCCancellationDate.</param>
        /// <param name="buildingRiskType">buildingRiskType.</param>
        /// <param name="addressLine1">addressLine1.</param>
        /// <param name="addressLine2">addressLine2.</param>
        /// <param name="addressLine3">addressLine3.</param>
        /// <param name="addressLine4">addressLine4.</param>
        /// <param name="postCode">postCode.</param>
        public TransunionConsumer118ActiveRiskAddresses(string effectiveDate = default(string), string bCCancellationDate = default(string), string buildingRiskType = default(string), string addressLine1 = default(string), string addressLine2 = default(string), string addressLine3 = default(string), string addressLine4 = default(string), string postCode = default(string))
        {
            this.EffectiveDate = effectiveDate;
            this.BCCancellationDate = bCCancellationDate;
            this.BuildingRiskType = buildingRiskType;
            this.AddressLine1 = addressLine1;
            this.AddressLine2 = addressLine2;
            this.AddressLine3 = addressLine3;
            this.AddressLine4 = addressLine4;
            this.PostCode = postCode;
            this.EffectiveDate = effectiveDate;
            this.BCCancellationDate = bCCancellationDate;
            this.BuildingRiskType = buildingRiskType;
            this.AddressLine1 = addressLine1;
            this.AddressLine2 = addressLine2;
            this.AddressLine3 = addressLine3;
            this.AddressLine4 = addressLine4;
            this.PostCode = postCode;
        }

        /// <summary>
        /// Gets or Sets EffectiveDate
        /// </summary>
        [DataMember(Name="effectiveDate", EmitDefaultValue=true)]
        public string EffectiveDate { get; set; }

        /// <summary>
        /// Gets or Sets BCCancellationDate
        /// </summary>
        [DataMember(Name="b_CCancellationDate", EmitDefaultValue=true)]
        public string BCCancellationDate { get; set; }

        /// <summary>
        /// Gets or Sets BuildingRiskType
        /// </summary>
        [DataMember(Name="buildingRiskType", EmitDefaultValue=true)]
        public string BuildingRiskType { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine1
        /// </summary>
        [DataMember(Name="addressLine1", EmitDefaultValue=true)]
        public string AddressLine1 { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine2
        /// </summary>
        [DataMember(Name="addressLine2", EmitDefaultValue=true)]
        public string AddressLine2 { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine3
        /// </summary>
        [DataMember(Name="addressLine3", EmitDefaultValue=true)]
        public string AddressLine3 { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine4
        /// </summary>
        [DataMember(Name="addressLine4", EmitDefaultValue=true)]
        public string AddressLine4 { get; set; }

        /// <summary>
        /// Gets or Sets PostCode
        /// </summary>
        [DataMember(Name="postCode", EmitDefaultValue=true)]
        public string PostCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118ActiveRiskAddresses {\n");
            sb.Append("  EffectiveDate: ").Append(EffectiveDate).Append("\n");
            sb.Append("  BCCancellationDate: ").Append(BCCancellationDate).Append("\n");
            sb.Append("  BuildingRiskType: ").Append(BuildingRiskType).Append("\n");
            sb.Append("  AddressLine1: ").Append(AddressLine1).Append("\n");
            sb.Append("  AddressLine2: ").Append(AddressLine2).Append("\n");
            sb.Append("  AddressLine3: ").Append(AddressLine3).Append("\n");
            sb.Append("  AddressLine4: ").Append(AddressLine4).Append("\n");
            sb.Append("  PostCode: ").Append(PostCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118ActiveRiskAddresses);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118ActiveRiskAddresses instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118ActiveRiskAddresses to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118ActiveRiskAddresses input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.EffectiveDate == input.EffectiveDate ||
                    (this.EffectiveDate != null &&
                    this.EffectiveDate.Equals(input.EffectiveDate))
                ) && 
                (
                    this.BCCancellationDate == input.BCCancellationDate ||
                    (this.BCCancellationDate != null &&
                    this.BCCancellationDate.Equals(input.BCCancellationDate))
                ) && 
                (
                    this.BuildingRiskType == input.BuildingRiskType ||
                    (this.BuildingRiskType != null &&
                    this.BuildingRiskType.Equals(input.BuildingRiskType))
                ) && 
                (
                    this.AddressLine1 == input.AddressLine1 ||
                    (this.AddressLine1 != null &&
                    this.AddressLine1.Equals(input.AddressLine1))
                ) && 
                (
                    this.AddressLine2 == input.AddressLine2 ||
                    (this.AddressLine2 != null &&
                    this.AddressLine2.Equals(input.AddressLine2))
                ) && 
                (
                    this.AddressLine3 == input.AddressLine3 ||
                    (this.AddressLine3 != null &&
                    this.AddressLine3.Equals(input.AddressLine3))
                ) && 
                (
                    this.AddressLine4 == input.AddressLine4 ||
                    (this.AddressLine4 != null &&
                    this.AddressLine4.Equals(input.AddressLine4))
                ) && 
                (
                    this.PostCode == input.PostCode ||
                    (this.PostCode != null &&
                    this.PostCode.Equals(input.PostCode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EffectiveDate != null)
                    hashCode = hashCode * 59 + this.EffectiveDate.GetHashCode();
                if (this.BCCancellationDate != null)
                    hashCode = hashCode * 59 + this.BCCancellationDate.GetHashCode();
                if (this.BuildingRiskType != null)
                    hashCode = hashCode * 59 + this.BuildingRiskType.GetHashCode();
                if (this.AddressLine1 != null)
                    hashCode = hashCode * 59 + this.AddressLine1.GetHashCode();
                if (this.AddressLine2 != null)
                    hashCode = hashCode * 59 + this.AddressLine2.GetHashCode();
                if (this.AddressLine3 != null)
                    hashCode = hashCode * 59 + this.AddressLine3.GetHashCode();
                if (this.AddressLine4 != null)
                    hashCode = hashCode * 59 + this.AddressLine4.GetHashCode();
                if (this.PostCode != null)
                    hashCode = hashCode * 59 + this.PostCode.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
