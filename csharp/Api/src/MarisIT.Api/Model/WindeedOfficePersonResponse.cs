/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// WindeedOfficePersonResponse
    /// </summary>
    [DataContract]
    public partial class WindeedOfficePersonResponse :  IEquatable<WindeedOfficePersonResponse>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets DataSource
        /// </summary>
        [DataMember(Name="dataSource", EmitDefaultValue=false)]
        public WindeedOfficeDataSource? DataSource { get; set; }
        /// <summary>
        /// Gets or Sets DeedsOffice
        /// </summary>
        [DataMember(Name="deedsOffice", EmitDefaultValue=false)]
        public WindeedOfficeRegistrar? DeedsOffice { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="WindeedOfficePersonResponse" /> class.
        /// </summary>
        /// <param name="responseDateTime">responseDateTime.</param>
        /// <param name="isSearchBatched">isSearchBatched.</param>
        /// <param name="warnings">warnings.</param>
        /// <param name="dataSource">dataSource.</param>
        /// <param name="deedsOffice">deedsOffice.</param>
        /// <param name="bonds">bonds.</param>
        /// <param name="contracts">contracts.</param>
        /// <param name="properties">properties.</param>
        /// <param name="formerName">formerName.</param>
        /// <param name="idNumber">idNumber.</param>
        /// <param name="firstNames">firstNames.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="maritalStatus">maritalStatus.</param>
        /// <param name="deedsOfficePersonName">deedsOfficePersonName.</param>
        public WindeedOfficePersonResponse(DateTime responseDateTime = default(DateTime), bool isSearchBatched = default(bool), List<string> warnings = default(List<string>), WindeedOfficeDataSource? dataSource = default(WindeedOfficeDataSource?), WindeedOfficeRegistrar? deedsOffice = default(WindeedOfficeRegistrar?), List<WindeedOfficeDocument> bonds = default(List<WindeedOfficeDocument>), List<WindeedOfficeDocument> contracts = default(List<WindeedOfficeDocument>), List<WindeedOfficeSummaryProperty> properties = default(List<WindeedOfficeSummaryProperty>), string formerName = default(string), string idNumber = default(string), string firstNames = default(string), string lastName = default(string), string maritalStatus = default(string), string deedsOfficePersonName = default(string))
        {
            this.Warnings = warnings;
            this.Bonds = bonds;
            this.Contracts = contracts;
            this.Properties = properties;
            this.FormerName = formerName;
            this.IdNumber = idNumber;
            this.FirstNames = firstNames;
            this.LastName = lastName;
            this.MaritalStatus = maritalStatus;
            this.DeedsOfficePersonName = deedsOfficePersonName;
            this.ResponseDateTime = responseDateTime;
            this.IsSearchBatched = isSearchBatched;
            this.Warnings = warnings;
            this.DataSource = dataSource;
            this.DeedsOffice = deedsOffice;
            this.Bonds = bonds;
            this.Contracts = contracts;
            this.Properties = properties;
            this.FormerName = formerName;
            this.IdNumber = idNumber;
            this.FirstNames = firstNames;
            this.LastName = lastName;
            this.MaritalStatus = maritalStatus;
            this.DeedsOfficePersonName = deedsOfficePersonName;
        }

        /// <summary>
        /// Gets or Sets ResponseDateTime
        /// </summary>
        [DataMember(Name="responseDateTime", EmitDefaultValue=false)]
        public DateTime ResponseDateTime { get; set; }

        /// <summary>
        /// Gets or Sets IsSearchBatched
        /// </summary>
        [DataMember(Name="isSearchBatched", EmitDefaultValue=false)]
        public bool IsSearchBatched { get; set; }

        /// <summary>
        /// Gets or Sets Warnings
        /// </summary>
        [DataMember(Name="warnings", EmitDefaultValue=true)]
        public List<string> Warnings { get; set; }



        /// <summary>
        /// Gets or Sets Bonds
        /// </summary>
        [DataMember(Name="bonds", EmitDefaultValue=true)]
        public List<WindeedOfficeDocument> Bonds { get; set; }

        /// <summary>
        /// Gets or Sets Contracts
        /// </summary>
        [DataMember(Name="contracts", EmitDefaultValue=true)]
        public List<WindeedOfficeDocument> Contracts { get; set; }

        /// <summary>
        /// Gets or Sets Properties
        /// </summary>
        [DataMember(Name="properties", EmitDefaultValue=true)]
        public List<WindeedOfficeSummaryProperty> Properties { get; set; }

        /// <summary>
        /// Gets or Sets FormerName
        /// </summary>
        [DataMember(Name="formerName", EmitDefaultValue=true)]
        public string FormerName { get; set; }

        /// <summary>
        /// Gets or Sets IdNumber
        /// </summary>
        [DataMember(Name="idNumber", EmitDefaultValue=true)]
        public string IdNumber { get; set; }

        /// <summary>
        /// Gets or Sets FirstNames
        /// </summary>
        [DataMember(Name="firstNames", EmitDefaultValue=true)]
        public string FirstNames { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name="lastName", EmitDefaultValue=true)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets MaritalStatus
        /// </summary>
        [DataMember(Name="maritalStatus", EmitDefaultValue=true)]
        public string MaritalStatus { get; set; }

        /// <summary>
        /// Gets or Sets DeedsOfficePersonName
        /// </summary>
        [DataMember(Name="deedsOfficePersonName", EmitDefaultValue=true)]
        public string DeedsOfficePersonName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WindeedOfficePersonResponse {\n");
            sb.Append("  ResponseDateTime: ").Append(ResponseDateTime).Append("\n");
            sb.Append("  IsSearchBatched: ").Append(IsSearchBatched).Append("\n");
            sb.Append("  Warnings: ").Append(Warnings).Append("\n");
            sb.Append("  DataSource: ").Append(DataSource).Append("\n");
            sb.Append("  DeedsOffice: ").Append(DeedsOffice).Append("\n");
            sb.Append("  Bonds: ").Append(Bonds).Append("\n");
            sb.Append("  Contracts: ").Append(Contracts).Append("\n");
            sb.Append("  Properties: ").Append(Properties).Append("\n");
            sb.Append("  FormerName: ").Append(FormerName).Append("\n");
            sb.Append("  IdNumber: ").Append(IdNumber).Append("\n");
            sb.Append("  FirstNames: ").Append(FirstNames).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  MaritalStatus: ").Append(MaritalStatus).Append("\n");
            sb.Append("  DeedsOfficePersonName: ").Append(DeedsOfficePersonName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WindeedOfficePersonResponse);
        }

        /// <summary>
        /// Returns true if WindeedOfficePersonResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of WindeedOfficePersonResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WindeedOfficePersonResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ResponseDateTime == input.ResponseDateTime ||
                    (this.ResponseDateTime != null &&
                    this.ResponseDateTime.Equals(input.ResponseDateTime))
                ) && 
                (
                    this.IsSearchBatched == input.IsSearchBatched ||
                    (this.IsSearchBatched != null &&
                    this.IsSearchBatched.Equals(input.IsSearchBatched))
                ) && 
                (
                    this.Warnings == input.Warnings ||
                    this.Warnings != null &&
                    input.Warnings != null &&
                    this.Warnings.SequenceEqual(input.Warnings)
                ) && 
                (
                    this.DataSource == input.DataSource ||
                    (this.DataSource != null &&
                    this.DataSource.Equals(input.DataSource))
                ) && 
                (
                    this.DeedsOffice == input.DeedsOffice ||
                    (this.DeedsOffice != null &&
                    this.DeedsOffice.Equals(input.DeedsOffice))
                ) && 
                (
                    this.Bonds == input.Bonds ||
                    this.Bonds != null &&
                    input.Bonds != null &&
                    this.Bonds.SequenceEqual(input.Bonds)
                ) && 
                (
                    this.Contracts == input.Contracts ||
                    this.Contracts != null &&
                    input.Contracts != null &&
                    this.Contracts.SequenceEqual(input.Contracts)
                ) && 
                (
                    this.Properties == input.Properties ||
                    this.Properties != null &&
                    input.Properties != null &&
                    this.Properties.SequenceEqual(input.Properties)
                ) && 
                (
                    this.FormerName == input.FormerName ||
                    (this.FormerName != null &&
                    this.FormerName.Equals(input.FormerName))
                ) && 
                (
                    this.IdNumber == input.IdNumber ||
                    (this.IdNumber != null &&
                    this.IdNumber.Equals(input.IdNumber))
                ) && 
                (
                    this.FirstNames == input.FirstNames ||
                    (this.FirstNames != null &&
                    this.FirstNames.Equals(input.FirstNames))
                ) && 
                (
                    this.LastName == input.LastName ||
                    (this.LastName != null &&
                    this.LastName.Equals(input.LastName))
                ) && 
                (
                    this.MaritalStatus == input.MaritalStatus ||
                    (this.MaritalStatus != null &&
                    this.MaritalStatus.Equals(input.MaritalStatus))
                ) && 
                (
                    this.DeedsOfficePersonName == input.DeedsOfficePersonName ||
                    (this.DeedsOfficePersonName != null &&
                    this.DeedsOfficePersonName.Equals(input.DeedsOfficePersonName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ResponseDateTime != null)
                    hashCode = hashCode * 59 + this.ResponseDateTime.GetHashCode();
                if (this.IsSearchBatched != null)
                    hashCode = hashCode * 59 + this.IsSearchBatched.GetHashCode();
                if (this.Warnings != null)
                    hashCode = hashCode * 59 + this.Warnings.GetHashCode();
                if (this.DataSource != null)
                    hashCode = hashCode * 59 + this.DataSource.GetHashCode();
                if (this.DeedsOffice != null)
                    hashCode = hashCode * 59 + this.DeedsOffice.GetHashCode();
                if (this.Bonds != null)
                    hashCode = hashCode * 59 + this.Bonds.GetHashCode();
                if (this.Contracts != null)
                    hashCode = hashCode * 59 + this.Contracts.GetHashCode();
                if (this.Properties != null)
                    hashCode = hashCode * 59 + this.Properties.GetHashCode();
                if (this.FormerName != null)
                    hashCode = hashCode * 59 + this.FormerName.GetHashCode();
                if (this.IdNumber != null)
                    hashCode = hashCode * 59 + this.IdNumber.GetHashCode();
                if (this.FirstNames != null)
                    hashCode = hashCode * 59 + this.FirstNames.GetHashCode();
                if (this.LastName != null)
                    hashCode = hashCode * 59 + this.LastName.GetHashCode();
                if (this.MaritalStatus != null)
                    hashCode = hashCode * 59 + this.MaritalStatus.GetHashCode();
                if (this.DeedsOfficePersonName != null)
                    hashCode = hashCode * 59 + this.DeedsOfficePersonName.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
