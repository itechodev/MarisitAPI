/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// XdsCommercialAuditorInformation
    /// </summary>
    [DataContract]
    public partial class XdsCommercialAuditorInformation :  IEquatable<XdsCommercialAuditorInformation>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XdsCommercialAuditorInformation" /> class.
        /// </summary>
        /// <param name="actEndDate">actEndDate.</param>
        /// <param name="actStartdate">actStartdate.</param>
        /// <param name="auditorName">auditorName.</param>
        /// <param name="auditorStatusDesc">auditorStatusDesc.</param>
        /// <param name="auditorTypeDesc">auditorTypeDesc.</param>
        /// <param name="displayText">displayText.</param>
        /// <param name="lastUpdatedDate">lastUpdatedDate.</param>
        /// <param name="noOfYearsInbBusiness">noOfYearsInbBusiness.</param>
        /// <param name="physicalAddress">physicalAddress.</param>
        /// <param name="postalAddress">postalAddress.</param>
        /// <param name="professionDesc">professionDesc.</param>
        /// <param name="professionNo">professionNo.</param>
        /// <param name="telephoneNo">telephoneNo.</param>
        /// <param name="yearswithAuditor">yearswithAuditor.</param>
        public XdsCommercialAuditorInformation(string actEndDate = default(string), string actStartdate = default(string), string auditorName = default(string), string auditorStatusDesc = default(string), string auditorTypeDesc = default(string), string displayText = default(string), string lastUpdatedDate = default(string), string noOfYearsInbBusiness = default(string), string physicalAddress = default(string), string postalAddress = default(string), string professionDesc = default(string), string professionNo = default(string), string telephoneNo = default(string), string yearswithAuditor = default(string))
        {
            this.ActEndDate = actEndDate;
            this.ActStartdate = actStartdate;
            this.AuditorName = auditorName;
            this.AuditorStatusDesc = auditorStatusDesc;
            this.AuditorTypeDesc = auditorTypeDesc;
            this.DisplayText = displayText;
            this.LastUpdatedDate = lastUpdatedDate;
            this.NoOfYearsInbBusiness = noOfYearsInbBusiness;
            this.PhysicalAddress = physicalAddress;
            this.PostalAddress = postalAddress;
            this.ProfessionDesc = professionDesc;
            this.ProfessionNo = professionNo;
            this.TelephoneNo = telephoneNo;
            this.YearswithAuditor = yearswithAuditor;
            this.ActEndDate = actEndDate;
            this.ActStartdate = actStartdate;
            this.AuditorName = auditorName;
            this.AuditorStatusDesc = auditorStatusDesc;
            this.AuditorTypeDesc = auditorTypeDesc;
            this.DisplayText = displayText;
            this.LastUpdatedDate = lastUpdatedDate;
            this.NoOfYearsInbBusiness = noOfYearsInbBusiness;
            this.PhysicalAddress = physicalAddress;
            this.PostalAddress = postalAddress;
            this.ProfessionDesc = professionDesc;
            this.ProfessionNo = professionNo;
            this.TelephoneNo = telephoneNo;
            this.YearswithAuditor = yearswithAuditor;
        }

        /// <summary>
        /// Gets or Sets ActEndDate
        /// </summary>
        [DataMember(Name="actEndDate", EmitDefaultValue=true)]
        public string ActEndDate { get; set; }

        /// <summary>
        /// Gets or Sets ActStartdate
        /// </summary>
        [DataMember(Name="actStartdate", EmitDefaultValue=true)]
        public string ActStartdate { get; set; }

        /// <summary>
        /// Gets or Sets AuditorName
        /// </summary>
        [DataMember(Name="auditorName", EmitDefaultValue=true)]
        public string AuditorName { get; set; }

        /// <summary>
        /// Gets or Sets AuditorStatusDesc
        /// </summary>
        [DataMember(Name="auditorStatusDesc", EmitDefaultValue=true)]
        public string AuditorStatusDesc { get; set; }

        /// <summary>
        /// Gets or Sets AuditorTypeDesc
        /// </summary>
        [DataMember(Name="auditorTypeDesc", EmitDefaultValue=true)]
        public string AuditorTypeDesc { get; set; }

        /// <summary>
        /// Gets or Sets DisplayText
        /// </summary>
        [DataMember(Name="displayText", EmitDefaultValue=true)]
        public string DisplayText { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdatedDate
        /// </summary>
        [DataMember(Name="lastUpdatedDate", EmitDefaultValue=true)]
        public string LastUpdatedDate { get; set; }

        /// <summary>
        /// Gets or Sets NoOfYearsInbBusiness
        /// </summary>
        [DataMember(Name="noOfYearsInbBusiness", EmitDefaultValue=true)]
        public string NoOfYearsInbBusiness { get; set; }

        /// <summary>
        /// Gets or Sets PhysicalAddress
        /// </summary>
        [DataMember(Name="physicalAddress", EmitDefaultValue=true)]
        public string PhysicalAddress { get; set; }

        /// <summary>
        /// Gets or Sets PostalAddress
        /// </summary>
        [DataMember(Name="postalAddress", EmitDefaultValue=true)]
        public string PostalAddress { get; set; }

        /// <summary>
        /// Gets or Sets ProfessionDesc
        /// </summary>
        [DataMember(Name="professionDesc", EmitDefaultValue=true)]
        public string ProfessionDesc { get; set; }

        /// <summary>
        /// Gets or Sets ProfessionNo
        /// </summary>
        [DataMember(Name="professionNo", EmitDefaultValue=true)]
        public string ProfessionNo { get; set; }

        /// <summary>
        /// Gets or Sets TelephoneNo
        /// </summary>
        [DataMember(Name="telephoneNo", EmitDefaultValue=true)]
        public string TelephoneNo { get; set; }

        /// <summary>
        /// Gets or Sets YearswithAuditor
        /// </summary>
        [DataMember(Name="yearswithAuditor", EmitDefaultValue=true)]
        public string YearswithAuditor { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class XdsCommercialAuditorInformation {\n");
            sb.Append("  ActEndDate: ").Append(ActEndDate).Append("\n");
            sb.Append("  ActStartdate: ").Append(ActStartdate).Append("\n");
            sb.Append("  AuditorName: ").Append(AuditorName).Append("\n");
            sb.Append("  AuditorStatusDesc: ").Append(AuditorStatusDesc).Append("\n");
            sb.Append("  AuditorTypeDesc: ").Append(AuditorTypeDesc).Append("\n");
            sb.Append("  DisplayText: ").Append(DisplayText).Append("\n");
            sb.Append("  LastUpdatedDate: ").Append(LastUpdatedDate).Append("\n");
            sb.Append("  NoOfYearsInbBusiness: ").Append(NoOfYearsInbBusiness).Append("\n");
            sb.Append("  PhysicalAddress: ").Append(PhysicalAddress).Append("\n");
            sb.Append("  PostalAddress: ").Append(PostalAddress).Append("\n");
            sb.Append("  ProfessionDesc: ").Append(ProfessionDesc).Append("\n");
            sb.Append("  ProfessionNo: ").Append(ProfessionNo).Append("\n");
            sb.Append("  TelephoneNo: ").Append(TelephoneNo).Append("\n");
            sb.Append("  YearswithAuditor: ").Append(YearswithAuditor).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as XdsCommercialAuditorInformation);
        }

        /// <summary>
        /// Returns true if XdsCommercialAuditorInformation instances are equal
        /// </summary>
        /// <param name="input">Instance of XdsCommercialAuditorInformation to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(XdsCommercialAuditorInformation input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ActEndDate == input.ActEndDate ||
                    (this.ActEndDate != null &&
                    this.ActEndDate.Equals(input.ActEndDate))
                ) && 
                (
                    this.ActStartdate == input.ActStartdate ||
                    (this.ActStartdate != null &&
                    this.ActStartdate.Equals(input.ActStartdate))
                ) && 
                (
                    this.AuditorName == input.AuditorName ||
                    (this.AuditorName != null &&
                    this.AuditorName.Equals(input.AuditorName))
                ) && 
                (
                    this.AuditorStatusDesc == input.AuditorStatusDesc ||
                    (this.AuditorStatusDesc != null &&
                    this.AuditorStatusDesc.Equals(input.AuditorStatusDesc))
                ) && 
                (
                    this.AuditorTypeDesc == input.AuditorTypeDesc ||
                    (this.AuditorTypeDesc != null &&
                    this.AuditorTypeDesc.Equals(input.AuditorTypeDesc))
                ) && 
                (
                    this.DisplayText == input.DisplayText ||
                    (this.DisplayText != null &&
                    this.DisplayText.Equals(input.DisplayText))
                ) && 
                (
                    this.LastUpdatedDate == input.LastUpdatedDate ||
                    (this.LastUpdatedDate != null &&
                    this.LastUpdatedDate.Equals(input.LastUpdatedDate))
                ) && 
                (
                    this.NoOfYearsInbBusiness == input.NoOfYearsInbBusiness ||
                    (this.NoOfYearsInbBusiness != null &&
                    this.NoOfYearsInbBusiness.Equals(input.NoOfYearsInbBusiness))
                ) && 
                (
                    this.PhysicalAddress == input.PhysicalAddress ||
                    (this.PhysicalAddress != null &&
                    this.PhysicalAddress.Equals(input.PhysicalAddress))
                ) && 
                (
                    this.PostalAddress == input.PostalAddress ||
                    (this.PostalAddress != null &&
                    this.PostalAddress.Equals(input.PostalAddress))
                ) && 
                (
                    this.ProfessionDesc == input.ProfessionDesc ||
                    (this.ProfessionDesc != null &&
                    this.ProfessionDesc.Equals(input.ProfessionDesc))
                ) && 
                (
                    this.ProfessionNo == input.ProfessionNo ||
                    (this.ProfessionNo != null &&
                    this.ProfessionNo.Equals(input.ProfessionNo))
                ) && 
                (
                    this.TelephoneNo == input.TelephoneNo ||
                    (this.TelephoneNo != null &&
                    this.TelephoneNo.Equals(input.TelephoneNo))
                ) && 
                (
                    this.YearswithAuditor == input.YearswithAuditor ||
                    (this.YearswithAuditor != null &&
                    this.YearswithAuditor.Equals(input.YearswithAuditor))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ActEndDate != null)
                    hashCode = hashCode * 59 + this.ActEndDate.GetHashCode();
                if (this.ActStartdate != null)
                    hashCode = hashCode * 59 + this.ActStartdate.GetHashCode();
                if (this.AuditorName != null)
                    hashCode = hashCode * 59 + this.AuditorName.GetHashCode();
                if (this.AuditorStatusDesc != null)
                    hashCode = hashCode * 59 + this.AuditorStatusDesc.GetHashCode();
                if (this.AuditorTypeDesc != null)
                    hashCode = hashCode * 59 + this.AuditorTypeDesc.GetHashCode();
                if (this.DisplayText != null)
                    hashCode = hashCode * 59 + this.DisplayText.GetHashCode();
                if (this.LastUpdatedDate != null)
                    hashCode = hashCode * 59 + this.LastUpdatedDate.GetHashCode();
                if (this.NoOfYearsInbBusiness != null)
                    hashCode = hashCode * 59 + this.NoOfYearsInbBusiness.GetHashCode();
                if (this.PhysicalAddress != null)
                    hashCode = hashCode * 59 + this.PhysicalAddress.GetHashCode();
                if (this.PostalAddress != null)
                    hashCode = hashCode * 59 + this.PostalAddress.GetHashCode();
                if (this.ProfessionDesc != null)
                    hashCode = hashCode * 59 + this.ProfessionDesc.GetHashCode();
                if (this.ProfessionNo != null)
                    hashCode = hashCode * 59 + this.ProfessionNo.GetHashCode();
                if (this.TelephoneNo != null)
                    hashCode = hashCode * 59 + this.TelephoneNo.GetHashCode();
                if (this.YearswithAuditor != null)
                    hashCode = hashCode * 59 + this.YearswithAuditor.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
