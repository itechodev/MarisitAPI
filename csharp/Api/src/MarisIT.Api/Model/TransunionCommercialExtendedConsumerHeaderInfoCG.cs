/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialExtendedConsumerHeaderInfoCG
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialExtendedConsumerHeaderInfoCG :  IEquatable<TransunionCommercialExtendedConsumerHeaderInfoCG>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialExtendedConsumerHeaderInfoCG" /> class.
        /// </summary>
        /// <param name="cellPhoneList">cellPhoneList.</param>
        /// <param name="addressLine5">addressLine5.</param>
        /// <param name="addressDate5">addressDate5.</param>
        /// <param name="addressLine6">addressLine6.</param>
        /// <param name="addressDate6">addressDate6.</param>
        /// <param name="addressLine7">addressLine7.</param>
        /// <param name="addressDate7">addressDate7.</param>
        /// <param name="addressLine8">addressLine8.</param>
        /// <param name="addressDate8">addressDate8.</param>
        /// <param name="addressLine9">addressLine9.</param>
        /// <param name="addressDate9">addressDate9.</param>
        /// <param name="addressLine10">addressLine10.</param>
        /// <param name="addressDate10">addressDate10.</param>
        public TransunionCommercialExtendedConsumerHeaderInfoCG(List<string> cellPhoneList = default(List<string>), string addressLine5 = default(string), string addressDate5 = default(string), string addressLine6 = default(string), string addressDate6 = default(string), string addressLine7 = default(string), string addressDate7 = default(string), string addressLine8 = default(string), string addressDate8 = default(string), string addressLine9 = default(string), string addressDate9 = default(string), string addressLine10 = default(string), string addressDate10 = default(string))
        {
            this.CellPhoneList = cellPhoneList;
            this.AddressLine5 = addressLine5;
            this.AddressDate5 = addressDate5;
            this.AddressLine6 = addressLine6;
            this.AddressDate6 = addressDate6;
            this.AddressLine7 = addressLine7;
            this.AddressDate7 = addressDate7;
            this.AddressLine8 = addressLine8;
            this.AddressDate8 = addressDate8;
            this.AddressLine9 = addressLine9;
            this.AddressDate9 = addressDate9;
            this.AddressLine10 = addressLine10;
            this.AddressDate10 = addressDate10;
            this.CellPhoneList = cellPhoneList;
            this.AddressLine5 = addressLine5;
            this.AddressDate5 = addressDate5;
            this.AddressLine6 = addressLine6;
            this.AddressDate6 = addressDate6;
            this.AddressLine7 = addressLine7;
            this.AddressDate7 = addressDate7;
            this.AddressLine8 = addressLine8;
            this.AddressDate8 = addressDate8;
            this.AddressLine9 = addressLine9;
            this.AddressDate9 = addressDate9;
            this.AddressLine10 = addressLine10;
            this.AddressDate10 = addressDate10;
        }

        /// <summary>
        /// Gets or Sets CellPhoneList
        /// </summary>
        [DataMember(Name="cellPhoneList", EmitDefaultValue=true)]
        public List<string> CellPhoneList { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine5
        /// </summary>
        [DataMember(Name="addressLine5", EmitDefaultValue=true)]
        public string AddressLine5 { get; set; }

        /// <summary>
        /// Gets or Sets AddressDate5
        /// </summary>
        [DataMember(Name="addressDate5", EmitDefaultValue=true)]
        public string AddressDate5 { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine6
        /// </summary>
        [DataMember(Name="addressLine6", EmitDefaultValue=true)]
        public string AddressLine6 { get; set; }

        /// <summary>
        /// Gets or Sets AddressDate6
        /// </summary>
        [DataMember(Name="addressDate6", EmitDefaultValue=true)]
        public string AddressDate6 { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine7
        /// </summary>
        [DataMember(Name="addressLine7", EmitDefaultValue=true)]
        public string AddressLine7 { get; set; }

        /// <summary>
        /// Gets or Sets AddressDate7
        /// </summary>
        [DataMember(Name="addressDate7", EmitDefaultValue=true)]
        public string AddressDate7 { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine8
        /// </summary>
        [DataMember(Name="addressLine8", EmitDefaultValue=true)]
        public string AddressLine8 { get; set; }

        /// <summary>
        /// Gets or Sets AddressDate8
        /// </summary>
        [DataMember(Name="addressDate8", EmitDefaultValue=true)]
        public string AddressDate8 { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine9
        /// </summary>
        [DataMember(Name="addressLine9", EmitDefaultValue=true)]
        public string AddressLine9 { get; set; }

        /// <summary>
        /// Gets or Sets AddressDate9
        /// </summary>
        [DataMember(Name="addressDate9", EmitDefaultValue=true)]
        public string AddressDate9 { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine10
        /// </summary>
        [DataMember(Name="addressLine10", EmitDefaultValue=true)]
        public string AddressLine10 { get; set; }

        /// <summary>
        /// Gets or Sets AddressDate10
        /// </summary>
        [DataMember(Name="addressDate10", EmitDefaultValue=true)]
        public string AddressDate10 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialExtendedConsumerHeaderInfoCG {\n");
            sb.Append("  CellPhoneList: ").Append(CellPhoneList).Append("\n");
            sb.Append("  AddressLine5: ").Append(AddressLine5).Append("\n");
            sb.Append("  AddressDate5: ").Append(AddressDate5).Append("\n");
            sb.Append("  AddressLine6: ").Append(AddressLine6).Append("\n");
            sb.Append("  AddressDate6: ").Append(AddressDate6).Append("\n");
            sb.Append("  AddressLine7: ").Append(AddressLine7).Append("\n");
            sb.Append("  AddressDate7: ").Append(AddressDate7).Append("\n");
            sb.Append("  AddressLine8: ").Append(AddressLine8).Append("\n");
            sb.Append("  AddressDate8: ").Append(AddressDate8).Append("\n");
            sb.Append("  AddressLine9: ").Append(AddressLine9).Append("\n");
            sb.Append("  AddressDate9: ").Append(AddressDate9).Append("\n");
            sb.Append("  AddressLine10: ").Append(AddressLine10).Append("\n");
            sb.Append("  AddressDate10: ").Append(AddressDate10).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialExtendedConsumerHeaderInfoCG);
        }

        /// <summary>
        /// Returns true if TransunionCommercialExtendedConsumerHeaderInfoCG instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialExtendedConsumerHeaderInfoCG to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialExtendedConsumerHeaderInfoCG input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CellPhoneList == input.CellPhoneList ||
                    this.CellPhoneList != null &&
                    input.CellPhoneList != null &&
                    this.CellPhoneList.SequenceEqual(input.CellPhoneList)
                ) && 
                (
                    this.AddressLine5 == input.AddressLine5 ||
                    (this.AddressLine5 != null &&
                    this.AddressLine5.Equals(input.AddressLine5))
                ) && 
                (
                    this.AddressDate5 == input.AddressDate5 ||
                    (this.AddressDate5 != null &&
                    this.AddressDate5.Equals(input.AddressDate5))
                ) && 
                (
                    this.AddressLine6 == input.AddressLine6 ||
                    (this.AddressLine6 != null &&
                    this.AddressLine6.Equals(input.AddressLine6))
                ) && 
                (
                    this.AddressDate6 == input.AddressDate6 ||
                    (this.AddressDate6 != null &&
                    this.AddressDate6.Equals(input.AddressDate6))
                ) && 
                (
                    this.AddressLine7 == input.AddressLine7 ||
                    (this.AddressLine7 != null &&
                    this.AddressLine7.Equals(input.AddressLine7))
                ) && 
                (
                    this.AddressDate7 == input.AddressDate7 ||
                    (this.AddressDate7 != null &&
                    this.AddressDate7.Equals(input.AddressDate7))
                ) && 
                (
                    this.AddressLine8 == input.AddressLine8 ||
                    (this.AddressLine8 != null &&
                    this.AddressLine8.Equals(input.AddressLine8))
                ) && 
                (
                    this.AddressDate8 == input.AddressDate8 ||
                    (this.AddressDate8 != null &&
                    this.AddressDate8.Equals(input.AddressDate8))
                ) && 
                (
                    this.AddressLine9 == input.AddressLine9 ||
                    (this.AddressLine9 != null &&
                    this.AddressLine9.Equals(input.AddressLine9))
                ) && 
                (
                    this.AddressDate9 == input.AddressDate9 ||
                    (this.AddressDate9 != null &&
                    this.AddressDate9.Equals(input.AddressDate9))
                ) && 
                (
                    this.AddressLine10 == input.AddressLine10 ||
                    (this.AddressLine10 != null &&
                    this.AddressLine10.Equals(input.AddressLine10))
                ) && 
                (
                    this.AddressDate10 == input.AddressDate10 ||
                    (this.AddressDate10 != null &&
                    this.AddressDate10.Equals(input.AddressDate10))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CellPhoneList != null)
                    hashCode = hashCode * 59 + this.CellPhoneList.GetHashCode();
                if (this.AddressLine5 != null)
                    hashCode = hashCode * 59 + this.AddressLine5.GetHashCode();
                if (this.AddressDate5 != null)
                    hashCode = hashCode * 59 + this.AddressDate5.GetHashCode();
                if (this.AddressLine6 != null)
                    hashCode = hashCode * 59 + this.AddressLine6.GetHashCode();
                if (this.AddressDate6 != null)
                    hashCode = hashCode * 59 + this.AddressDate6.GetHashCode();
                if (this.AddressLine7 != null)
                    hashCode = hashCode * 59 + this.AddressLine7.GetHashCode();
                if (this.AddressDate7 != null)
                    hashCode = hashCode * 59 + this.AddressDate7.GetHashCode();
                if (this.AddressLine8 != null)
                    hashCode = hashCode * 59 + this.AddressLine8.GetHashCode();
                if (this.AddressDate8 != null)
                    hashCode = hashCode * 59 + this.AddressDate8.GetHashCode();
                if (this.AddressLine9 != null)
                    hashCode = hashCode * 59 + this.AddressLine9.GetHashCode();
                if (this.AddressDate9 != null)
                    hashCode = hashCode * 59 + this.AddressDate9.GetHashCode();
                if (this.AddressLine10 != null)
                    hashCode = hashCode * 59 + this.AddressLine10.GetHashCode();
                if (this.AddressDate10 != null)
                    hashCode = hashCode * 59 + this.AddressDate10.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
