/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118PhoneNumberDTO
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118PhoneNumberDTO :  IEquatable<TransunionConsumer118PhoneNumberDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118PhoneNumberDTO" /> class.
        /// </summary>
        /// <param name="phoneNumberType">phoneNumberType.</param>
        /// <param name="phone">phone.</param>
        public TransunionConsumer118PhoneNumberDTO(string phoneNumberType = default(string), string phone = default(string))
        {
            this.PhoneNumberType = phoneNumberType;
            this.Phone = phone;
            this.PhoneNumberType = phoneNumberType;
            this.Phone = phone;
        }

        /// <summary>
        /// Gets or Sets PhoneNumberType
        /// </summary>
        [DataMember(Name="phoneNumberType", EmitDefaultValue=true)]
        public string PhoneNumberType { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name="phone", EmitDefaultValue=true)]
        public string Phone { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118PhoneNumberDTO {\n");
            sb.Append("  PhoneNumberType: ").Append(PhoneNumberType).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118PhoneNumberDTO);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118PhoneNumberDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118PhoneNumberDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118PhoneNumberDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PhoneNumberType == input.PhoneNumberType ||
                    (this.PhoneNumberType != null &&
                    this.PhoneNumberType.Equals(input.PhoneNumberType))
                ) && 
                (
                    this.Phone == input.Phone ||
                    (this.Phone != null &&
                    this.Phone.Equals(input.Phone))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PhoneNumberType != null)
                    hashCode = hashCode * 59 + this.PhoneNumberType.GetHashCode();
                if (this.Phone != null)
                    hashCode = hashCode * 59 + this.Phone.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
