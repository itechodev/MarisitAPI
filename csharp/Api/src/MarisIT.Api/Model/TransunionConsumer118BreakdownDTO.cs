/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118BreakdownDTO
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118BreakdownDTO :  IEquatable<TransunionConsumer118BreakdownDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118BreakdownDTO" /> class.
        /// </summary>
        /// <param name="income">income.</param>
        /// <param name="deductions">deductions.</param>
        public TransunionConsumer118BreakdownDTO(List<TransunionConsumer118BreakdownItemDTO> income = default(List<TransunionConsumer118BreakdownItemDTO>), List<TransunionConsumer118BreakdownItemDTO> deductions = default(List<TransunionConsumer118BreakdownItemDTO>))
        {
            this.Income = income;
            this.Deductions = deductions;
            this.Income = income;
            this.Deductions = deductions;
        }

        /// <summary>
        /// Gets or Sets Income
        /// </summary>
        [DataMember(Name="income", EmitDefaultValue=true)]
        public List<TransunionConsumer118BreakdownItemDTO> Income { get; set; }

        /// <summary>
        /// Gets or Sets Deductions
        /// </summary>
        [DataMember(Name="deductions", EmitDefaultValue=true)]
        public List<TransunionConsumer118BreakdownItemDTO> Deductions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118BreakdownDTO {\n");
            sb.Append("  Income: ").Append(Income).Append("\n");
            sb.Append("  Deductions: ").Append(Deductions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118BreakdownDTO);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118BreakdownDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118BreakdownDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118BreakdownDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Income == input.Income ||
                    this.Income != null &&
                    input.Income != null &&
                    this.Income.SequenceEqual(input.Income)
                ) && 
                (
                    this.Deductions == input.Deductions ||
                    this.Deductions != null &&
                    input.Deductions != null &&
                    this.Deductions.SequenceEqual(input.Deductions)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Income != null)
                    hashCode = hashCode * 59 + this.Income.GetHashCode();
                if (this.Deductions != null)
                    hashCode = hashCode * 59 + this.Deductions.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
