/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// CompuscanCOMPDIRECTORS
    /// </summary>
    [DataContract]
    public partial class CompuscanCOMPDIRECTORS :  IEquatable<CompuscanCOMPDIRECTORS>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompuscanCOMPDIRECTORS" /> class.
        /// </summary>
        /// <param name="ac">ac.</param>
        /// <param name="appointmentdate">appointmentdate.</param>
        /// <param name="directorid">directorid.</param>
        /// <param name="firstnames">firstnames.</param>
        /// <param name="idnumber">idnumber.</param>
        /// <param name="membercontribution">membercontribution.</param>
        /// <param name="membersize">membersize.</param>
        /// <param name="occupationcode">occupationcode.</param>
        /// <param name="principaltype">principaltype.</param>
        /// <param name="residentialaddresS1">residentialaddresS1.</param>
        /// <param name="residentialaddresS2">residentialaddresS2.</param>
        /// <param name="residentialaddresS3">residentialaddresS3.</param>
        /// <param name="residentialaddresS4">residentialaddresS4.</param>
        /// <param name="residentialpostcode">residentialpostcode.</param>
        /// <param name="status">status.</param>
        /// <param name="statuscode">statuscode.</param>
        /// <param name="statusdate">statusdate.</param>
        /// <param name="surname">surname.</param>
        /// <param name="typecode">typecode.</param>
        public CompuscanCOMPDIRECTORS(string ac = default(string), string appointmentdate = default(string), string directorid = default(string), string firstnames = default(string), string idnumber = default(string), string membercontribution = default(string), string membersize = default(string), string occupationcode = default(string), string principaltype = default(string), string residentialaddresS1 = default(string), string residentialaddresS2 = default(string), string residentialaddresS3 = default(string), string residentialaddresS4 = default(string), string residentialpostcode = default(string), string status = default(string), string statuscode = default(string), string statusdate = default(string), string surname = default(string), string typecode = default(string))
        {
            this.Ac = ac;
            this.Appointmentdate = appointmentdate;
            this.Directorid = directorid;
            this.Firstnames = firstnames;
            this.Idnumber = idnumber;
            this.Membercontribution = membercontribution;
            this.Membersize = membersize;
            this.Occupationcode = occupationcode;
            this.Principaltype = principaltype;
            this.ResidentialaddresS1 = residentialaddresS1;
            this.ResidentialaddresS2 = residentialaddresS2;
            this.ResidentialaddresS3 = residentialaddresS3;
            this.ResidentialaddresS4 = residentialaddresS4;
            this.Residentialpostcode = residentialpostcode;
            this.Status = status;
            this.Statuscode = statuscode;
            this.Statusdate = statusdate;
            this.Surname = surname;
            this.Typecode = typecode;
            this.Ac = ac;
            this.Appointmentdate = appointmentdate;
            this.Directorid = directorid;
            this.Firstnames = firstnames;
            this.Idnumber = idnumber;
            this.Membercontribution = membercontribution;
            this.Membersize = membersize;
            this.Occupationcode = occupationcode;
            this.Principaltype = principaltype;
            this.ResidentialaddresS1 = residentialaddresS1;
            this.ResidentialaddresS2 = residentialaddresS2;
            this.ResidentialaddresS3 = residentialaddresS3;
            this.ResidentialaddresS4 = residentialaddresS4;
            this.Residentialpostcode = residentialpostcode;
            this.Status = status;
            this.Statuscode = statuscode;
            this.Statusdate = statusdate;
            this.Surname = surname;
            this.Typecode = typecode;
        }

        /// <summary>
        /// Gets or Sets Ac
        /// </summary>
        [DataMember(Name="ac", EmitDefaultValue=true)]
        public string Ac { get; set; }

        /// <summary>
        /// Gets or Sets Appointmentdate
        /// </summary>
        [DataMember(Name="appointmentdate", EmitDefaultValue=true)]
        public string Appointmentdate { get; set; }

        /// <summary>
        /// Gets or Sets Directorid
        /// </summary>
        [DataMember(Name="directorid", EmitDefaultValue=true)]
        public string Directorid { get; set; }

        /// <summary>
        /// Gets or Sets Firstnames
        /// </summary>
        [DataMember(Name="firstnames", EmitDefaultValue=true)]
        public string Firstnames { get; set; }

        /// <summary>
        /// Gets or Sets Idnumber
        /// </summary>
        [DataMember(Name="idnumber", EmitDefaultValue=true)]
        public string Idnumber { get; set; }

        /// <summary>
        /// Gets or Sets Membercontribution
        /// </summary>
        [DataMember(Name="membercontribution", EmitDefaultValue=true)]
        public string Membercontribution { get; set; }

        /// <summary>
        /// Gets or Sets Membersize
        /// </summary>
        [DataMember(Name="membersize", EmitDefaultValue=true)]
        public string Membersize { get; set; }

        /// <summary>
        /// Gets or Sets Occupationcode
        /// </summary>
        [DataMember(Name="occupationcode", EmitDefaultValue=true)]
        public string Occupationcode { get; set; }

        /// <summary>
        /// Gets or Sets Principaltype
        /// </summary>
        [DataMember(Name="principaltype", EmitDefaultValue=true)]
        public string Principaltype { get; set; }

        /// <summary>
        /// Gets or Sets ResidentialaddresS1
        /// </summary>
        [DataMember(Name="residentialaddresS1", EmitDefaultValue=true)]
        public string ResidentialaddresS1 { get; set; }

        /// <summary>
        /// Gets or Sets ResidentialaddresS2
        /// </summary>
        [DataMember(Name="residentialaddresS2", EmitDefaultValue=true)]
        public string ResidentialaddresS2 { get; set; }

        /// <summary>
        /// Gets or Sets ResidentialaddresS3
        /// </summary>
        [DataMember(Name="residentialaddresS3", EmitDefaultValue=true)]
        public string ResidentialaddresS3 { get; set; }

        /// <summary>
        /// Gets or Sets ResidentialaddresS4
        /// </summary>
        [DataMember(Name="residentialaddresS4", EmitDefaultValue=true)]
        public string ResidentialaddresS4 { get; set; }

        /// <summary>
        /// Gets or Sets Residentialpostcode
        /// </summary>
        [DataMember(Name="residentialpostcode", EmitDefaultValue=true)]
        public string Residentialpostcode { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=true)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets Statuscode
        /// </summary>
        [DataMember(Name="statuscode", EmitDefaultValue=true)]
        public string Statuscode { get; set; }

        /// <summary>
        /// Gets or Sets Statusdate
        /// </summary>
        [DataMember(Name="statusdate", EmitDefaultValue=true)]
        public string Statusdate { get; set; }

        /// <summary>
        /// Gets or Sets Surname
        /// </summary>
        [DataMember(Name="surname", EmitDefaultValue=true)]
        public string Surname { get; set; }

        /// <summary>
        /// Gets or Sets Typecode
        /// </summary>
        [DataMember(Name="typecode", EmitDefaultValue=true)]
        public string Typecode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompuscanCOMPDIRECTORS {\n");
            sb.Append("  Ac: ").Append(Ac).Append("\n");
            sb.Append("  Appointmentdate: ").Append(Appointmentdate).Append("\n");
            sb.Append("  Directorid: ").Append(Directorid).Append("\n");
            sb.Append("  Firstnames: ").Append(Firstnames).Append("\n");
            sb.Append("  Idnumber: ").Append(Idnumber).Append("\n");
            sb.Append("  Membercontribution: ").Append(Membercontribution).Append("\n");
            sb.Append("  Membersize: ").Append(Membersize).Append("\n");
            sb.Append("  Occupationcode: ").Append(Occupationcode).Append("\n");
            sb.Append("  Principaltype: ").Append(Principaltype).Append("\n");
            sb.Append("  ResidentialaddresS1: ").Append(ResidentialaddresS1).Append("\n");
            sb.Append("  ResidentialaddresS2: ").Append(ResidentialaddresS2).Append("\n");
            sb.Append("  ResidentialaddresS3: ").Append(ResidentialaddresS3).Append("\n");
            sb.Append("  ResidentialaddresS4: ").Append(ResidentialaddresS4).Append("\n");
            sb.Append("  Residentialpostcode: ").Append(Residentialpostcode).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Statuscode: ").Append(Statuscode).Append("\n");
            sb.Append("  Statusdate: ").Append(Statusdate).Append("\n");
            sb.Append("  Surname: ").Append(Surname).Append("\n");
            sb.Append("  Typecode: ").Append(Typecode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompuscanCOMPDIRECTORS);
        }

        /// <summary>
        /// Returns true if CompuscanCOMPDIRECTORS instances are equal
        /// </summary>
        /// <param name="input">Instance of CompuscanCOMPDIRECTORS to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompuscanCOMPDIRECTORS input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Ac == input.Ac ||
                    (this.Ac != null &&
                    this.Ac.Equals(input.Ac))
                ) && 
                (
                    this.Appointmentdate == input.Appointmentdate ||
                    (this.Appointmentdate != null &&
                    this.Appointmentdate.Equals(input.Appointmentdate))
                ) && 
                (
                    this.Directorid == input.Directorid ||
                    (this.Directorid != null &&
                    this.Directorid.Equals(input.Directorid))
                ) && 
                (
                    this.Firstnames == input.Firstnames ||
                    (this.Firstnames != null &&
                    this.Firstnames.Equals(input.Firstnames))
                ) && 
                (
                    this.Idnumber == input.Idnumber ||
                    (this.Idnumber != null &&
                    this.Idnumber.Equals(input.Idnumber))
                ) && 
                (
                    this.Membercontribution == input.Membercontribution ||
                    (this.Membercontribution != null &&
                    this.Membercontribution.Equals(input.Membercontribution))
                ) && 
                (
                    this.Membersize == input.Membersize ||
                    (this.Membersize != null &&
                    this.Membersize.Equals(input.Membersize))
                ) && 
                (
                    this.Occupationcode == input.Occupationcode ||
                    (this.Occupationcode != null &&
                    this.Occupationcode.Equals(input.Occupationcode))
                ) && 
                (
                    this.Principaltype == input.Principaltype ||
                    (this.Principaltype != null &&
                    this.Principaltype.Equals(input.Principaltype))
                ) && 
                (
                    this.ResidentialaddresS1 == input.ResidentialaddresS1 ||
                    (this.ResidentialaddresS1 != null &&
                    this.ResidentialaddresS1.Equals(input.ResidentialaddresS1))
                ) && 
                (
                    this.ResidentialaddresS2 == input.ResidentialaddresS2 ||
                    (this.ResidentialaddresS2 != null &&
                    this.ResidentialaddresS2.Equals(input.ResidentialaddresS2))
                ) && 
                (
                    this.ResidentialaddresS3 == input.ResidentialaddresS3 ||
                    (this.ResidentialaddresS3 != null &&
                    this.ResidentialaddresS3.Equals(input.ResidentialaddresS3))
                ) && 
                (
                    this.ResidentialaddresS4 == input.ResidentialaddresS4 ||
                    (this.ResidentialaddresS4 != null &&
                    this.ResidentialaddresS4.Equals(input.ResidentialaddresS4))
                ) && 
                (
                    this.Residentialpostcode == input.Residentialpostcode ||
                    (this.Residentialpostcode != null &&
                    this.Residentialpostcode.Equals(input.Residentialpostcode))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.Statuscode == input.Statuscode ||
                    (this.Statuscode != null &&
                    this.Statuscode.Equals(input.Statuscode))
                ) && 
                (
                    this.Statusdate == input.Statusdate ||
                    (this.Statusdate != null &&
                    this.Statusdate.Equals(input.Statusdate))
                ) && 
                (
                    this.Surname == input.Surname ||
                    (this.Surname != null &&
                    this.Surname.Equals(input.Surname))
                ) && 
                (
                    this.Typecode == input.Typecode ||
                    (this.Typecode != null &&
                    this.Typecode.Equals(input.Typecode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Ac != null)
                    hashCode = hashCode * 59 + this.Ac.GetHashCode();
                if (this.Appointmentdate != null)
                    hashCode = hashCode * 59 + this.Appointmentdate.GetHashCode();
                if (this.Directorid != null)
                    hashCode = hashCode * 59 + this.Directorid.GetHashCode();
                if (this.Firstnames != null)
                    hashCode = hashCode * 59 + this.Firstnames.GetHashCode();
                if (this.Idnumber != null)
                    hashCode = hashCode * 59 + this.Idnumber.GetHashCode();
                if (this.Membercontribution != null)
                    hashCode = hashCode * 59 + this.Membercontribution.GetHashCode();
                if (this.Membersize != null)
                    hashCode = hashCode * 59 + this.Membersize.GetHashCode();
                if (this.Occupationcode != null)
                    hashCode = hashCode * 59 + this.Occupationcode.GetHashCode();
                if (this.Principaltype != null)
                    hashCode = hashCode * 59 + this.Principaltype.GetHashCode();
                if (this.ResidentialaddresS1 != null)
                    hashCode = hashCode * 59 + this.ResidentialaddresS1.GetHashCode();
                if (this.ResidentialaddresS2 != null)
                    hashCode = hashCode * 59 + this.ResidentialaddresS2.GetHashCode();
                if (this.ResidentialaddresS3 != null)
                    hashCode = hashCode * 59 + this.ResidentialaddresS3.GetHashCode();
                if (this.ResidentialaddresS4 != null)
                    hashCode = hashCode * 59 + this.ResidentialaddresS4.GetHashCode();
                if (this.Residentialpostcode != null)
                    hashCode = hashCode * 59 + this.Residentialpostcode.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.Statuscode != null)
                    hashCode = hashCode * 59 + this.Statuscode.GetHashCode();
                if (this.Statusdate != null)
                    hashCode = hashCode * 59 + this.Statusdate.GetHashCode();
                if (this.Surname != null)
                    hashCode = hashCode * 59 + this.Surname.GetHashCode();
                if (this.Typecode != null)
                    hashCode = hashCode * 59 + this.Typecode.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
