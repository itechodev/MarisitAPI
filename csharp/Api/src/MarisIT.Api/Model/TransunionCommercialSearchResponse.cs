/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialSearchResponse
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialSearchResponse :  IEquatable<TransunionCommercialSearchResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialSearchResponse" /> class.
        /// </summary>
        /// <param name="itNumber">itNumber.</param>
        /// <param name="name">name.</param>
        /// <param name="nameType">nameType.</param>
        /// <param name="businessName">businessName.</param>
        /// <param name="physicalAddress">physicalAddress.</param>
        /// <param name="suburb">suburb.</param>
        /// <param name="town">town.</param>
        /// <param name="country">country.</param>
        /// <param name="postCode">postCode.</param>
        /// <param name="postalAddress">postalAddress.</param>
        /// <param name="postalSuburb">postalSuburb.</param>
        /// <param name="postalTown">postalTown.</param>
        /// <param name="postalCountry">postalCountry.</param>
        /// <param name="postalPostCode">postalPostCode.</param>
        /// <param name="phoneNo">phoneNo.</param>
        /// <param name="faxNo">faxNo.</param>
        /// <param name="regNo">regNo.</param>
        /// <param name="regStatus">regStatus.</param>
        /// <param name="regStatusCode">regStatusCode.</param>
        /// <param name="tradingNumber">tradingNumber.</param>
        public TransunionCommercialSearchResponse(string itNumber = default(string), string name = default(string), string nameType = default(string), string businessName = default(string), string physicalAddress = default(string), string suburb = default(string), string town = default(string), string country = default(string), string postCode = default(string), string postalAddress = default(string), string postalSuburb = default(string), string postalTown = default(string), string postalCountry = default(string), string postalPostCode = default(string), string phoneNo = default(string), string faxNo = default(string), string regNo = default(string), string regStatus = default(string), string regStatusCode = default(string), string tradingNumber = default(string))
        {
            this.ItNumber = itNumber;
            this.Name = name;
            this.NameType = nameType;
            this.BusinessName = businessName;
            this.PhysicalAddress = physicalAddress;
            this.Suburb = suburb;
            this.Town = town;
            this.Country = country;
            this.PostCode = postCode;
            this.PostalAddress = postalAddress;
            this.PostalSuburb = postalSuburb;
            this.PostalTown = postalTown;
            this.PostalCountry = postalCountry;
            this.PostalPostCode = postalPostCode;
            this.PhoneNo = phoneNo;
            this.FaxNo = faxNo;
            this.RegNo = regNo;
            this.RegStatus = regStatus;
            this.RegStatusCode = regStatusCode;
            this.TradingNumber = tradingNumber;
            this.ItNumber = itNumber;
            this.Name = name;
            this.NameType = nameType;
            this.BusinessName = businessName;
            this.PhysicalAddress = physicalAddress;
            this.Suburb = suburb;
            this.Town = town;
            this.Country = country;
            this.PostCode = postCode;
            this.PostalAddress = postalAddress;
            this.PostalSuburb = postalSuburb;
            this.PostalTown = postalTown;
            this.PostalCountry = postalCountry;
            this.PostalPostCode = postalPostCode;
            this.PhoneNo = phoneNo;
            this.FaxNo = faxNo;
            this.RegNo = regNo;
            this.RegStatus = regStatus;
            this.RegStatusCode = regStatusCode;
            this.TradingNumber = tradingNumber;
        }

        /// <summary>
        /// Gets or Sets ItNumber
        /// </summary>
        [DataMember(Name="itNumber", EmitDefaultValue=true)]
        public string ItNumber { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets NameType
        /// </summary>
        [DataMember(Name="nameType", EmitDefaultValue=true)]
        public string NameType { get; set; }

        /// <summary>
        /// Gets or Sets BusinessName
        /// </summary>
        [DataMember(Name="businessName", EmitDefaultValue=true)]
        public string BusinessName { get; set; }

        /// <summary>
        /// Gets or Sets PhysicalAddress
        /// </summary>
        [DataMember(Name="physicalAddress", EmitDefaultValue=true)]
        public string PhysicalAddress { get; set; }

        /// <summary>
        /// Gets or Sets Suburb
        /// </summary>
        [DataMember(Name="suburb", EmitDefaultValue=true)]
        public string Suburb { get; set; }

        /// <summary>
        /// Gets or Sets Town
        /// </summary>
        [DataMember(Name="town", EmitDefaultValue=true)]
        public string Town { get; set; }

        /// <summary>
        /// Gets or Sets Country
        /// </summary>
        [DataMember(Name="country", EmitDefaultValue=true)]
        public string Country { get; set; }

        /// <summary>
        /// Gets or Sets PostCode
        /// </summary>
        [DataMember(Name="postCode", EmitDefaultValue=true)]
        public string PostCode { get; set; }

        /// <summary>
        /// Gets or Sets PostalAddress
        /// </summary>
        [DataMember(Name="postalAddress", EmitDefaultValue=true)]
        public string PostalAddress { get; set; }

        /// <summary>
        /// Gets or Sets PostalSuburb
        /// </summary>
        [DataMember(Name="postalSuburb", EmitDefaultValue=true)]
        public string PostalSuburb { get; set; }

        /// <summary>
        /// Gets or Sets PostalTown
        /// </summary>
        [DataMember(Name="postalTown", EmitDefaultValue=true)]
        public string PostalTown { get; set; }

        /// <summary>
        /// Gets or Sets PostalCountry
        /// </summary>
        [DataMember(Name="postalCountry", EmitDefaultValue=true)]
        public string PostalCountry { get; set; }

        /// <summary>
        /// Gets or Sets PostalPostCode
        /// </summary>
        [DataMember(Name="postalPostCode", EmitDefaultValue=true)]
        public string PostalPostCode { get; set; }

        /// <summary>
        /// Gets or Sets PhoneNo
        /// </summary>
        [DataMember(Name="phoneNo", EmitDefaultValue=true)]
        public string PhoneNo { get; set; }

        /// <summary>
        /// Gets or Sets FaxNo
        /// </summary>
        [DataMember(Name="faxNo", EmitDefaultValue=true)]
        public string FaxNo { get; set; }

        /// <summary>
        /// Gets or Sets RegNo
        /// </summary>
        [DataMember(Name="regNo", EmitDefaultValue=true)]
        public string RegNo { get; set; }

        /// <summary>
        /// Gets or Sets RegStatus
        /// </summary>
        [DataMember(Name="regStatus", EmitDefaultValue=true)]
        public string RegStatus { get; set; }

        /// <summary>
        /// Gets or Sets RegStatusCode
        /// </summary>
        [DataMember(Name="regStatusCode", EmitDefaultValue=true)]
        public string RegStatusCode { get; set; }

        /// <summary>
        /// Gets or Sets TradingNumber
        /// </summary>
        [DataMember(Name="tradingNumber", EmitDefaultValue=true)]
        public string TradingNumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialSearchResponse {\n");
            sb.Append("  ItNumber: ").Append(ItNumber).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  NameType: ").Append(NameType).Append("\n");
            sb.Append("  BusinessName: ").Append(BusinessName).Append("\n");
            sb.Append("  PhysicalAddress: ").Append(PhysicalAddress).Append("\n");
            sb.Append("  Suburb: ").Append(Suburb).Append("\n");
            sb.Append("  Town: ").Append(Town).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  PostCode: ").Append(PostCode).Append("\n");
            sb.Append("  PostalAddress: ").Append(PostalAddress).Append("\n");
            sb.Append("  PostalSuburb: ").Append(PostalSuburb).Append("\n");
            sb.Append("  PostalTown: ").Append(PostalTown).Append("\n");
            sb.Append("  PostalCountry: ").Append(PostalCountry).Append("\n");
            sb.Append("  PostalPostCode: ").Append(PostalPostCode).Append("\n");
            sb.Append("  PhoneNo: ").Append(PhoneNo).Append("\n");
            sb.Append("  FaxNo: ").Append(FaxNo).Append("\n");
            sb.Append("  RegNo: ").Append(RegNo).Append("\n");
            sb.Append("  RegStatus: ").Append(RegStatus).Append("\n");
            sb.Append("  RegStatusCode: ").Append(RegStatusCode).Append("\n");
            sb.Append("  TradingNumber: ").Append(TradingNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialSearchResponse);
        }

        /// <summary>
        /// Returns true if TransunionCommercialSearchResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialSearchResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialSearchResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ItNumber == input.ItNumber ||
                    (this.ItNumber != null &&
                    this.ItNumber.Equals(input.ItNumber))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.NameType == input.NameType ||
                    (this.NameType != null &&
                    this.NameType.Equals(input.NameType))
                ) && 
                (
                    this.BusinessName == input.BusinessName ||
                    (this.BusinessName != null &&
                    this.BusinessName.Equals(input.BusinessName))
                ) && 
                (
                    this.PhysicalAddress == input.PhysicalAddress ||
                    (this.PhysicalAddress != null &&
                    this.PhysicalAddress.Equals(input.PhysicalAddress))
                ) && 
                (
                    this.Suburb == input.Suburb ||
                    (this.Suburb != null &&
                    this.Suburb.Equals(input.Suburb))
                ) && 
                (
                    this.Town == input.Town ||
                    (this.Town != null &&
                    this.Town.Equals(input.Town))
                ) && 
                (
                    this.Country == input.Country ||
                    (this.Country != null &&
                    this.Country.Equals(input.Country))
                ) && 
                (
                    this.PostCode == input.PostCode ||
                    (this.PostCode != null &&
                    this.PostCode.Equals(input.PostCode))
                ) && 
                (
                    this.PostalAddress == input.PostalAddress ||
                    (this.PostalAddress != null &&
                    this.PostalAddress.Equals(input.PostalAddress))
                ) && 
                (
                    this.PostalSuburb == input.PostalSuburb ||
                    (this.PostalSuburb != null &&
                    this.PostalSuburb.Equals(input.PostalSuburb))
                ) && 
                (
                    this.PostalTown == input.PostalTown ||
                    (this.PostalTown != null &&
                    this.PostalTown.Equals(input.PostalTown))
                ) && 
                (
                    this.PostalCountry == input.PostalCountry ||
                    (this.PostalCountry != null &&
                    this.PostalCountry.Equals(input.PostalCountry))
                ) && 
                (
                    this.PostalPostCode == input.PostalPostCode ||
                    (this.PostalPostCode != null &&
                    this.PostalPostCode.Equals(input.PostalPostCode))
                ) && 
                (
                    this.PhoneNo == input.PhoneNo ||
                    (this.PhoneNo != null &&
                    this.PhoneNo.Equals(input.PhoneNo))
                ) && 
                (
                    this.FaxNo == input.FaxNo ||
                    (this.FaxNo != null &&
                    this.FaxNo.Equals(input.FaxNo))
                ) && 
                (
                    this.RegNo == input.RegNo ||
                    (this.RegNo != null &&
                    this.RegNo.Equals(input.RegNo))
                ) && 
                (
                    this.RegStatus == input.RegStatus ||
                    (this.RegStatus != null &&
                    this.RegStatus.Equals(input.RegStatus))
                ) && 
                (
                    this.RegStatusCode == input.RegStatusCode ||
                    (this.RegStatusCode != null &&
                    this.RegStatusCode.Equals(input.RegStatusCode))
                ) && 
                (
                    this.TradingNumber == input.TradingNumber ||
                    (this.TradingNumber != null &&
                    this.TradingNumber.Equals(input.TradingNumber))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ItNumber != null)
                    hashCode = hashCode * 59 + this.ItNumber.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.NameType != null)
                    hashCode = hashCode * 59 + this.NameType.GetHashCode();
                if (this.BusinessName != null)
                    hashCode = hashCode * 59 + this.BusinessName.GetHashCode();
                if (this.PhysicalAddress != null)
                    hashCode = hashCode * 59 + this.PhysicalAddress.GetHashCode();
                if (this.Suburb != null)
                    hashCode = hashCode * 59 + this.Suburb.GetHashCode();
                if (this.Town != null)
                    hashCode = hashCode * 59 + this.Town.GetHashCode();
                if (this.Country != null)
                    hashCode = hashCode * 59 + this.Country.GetHashCode();
                if (this.PostCode != null)
                    hashCode = hashCode * 59 + this.PostCode.GetHashCode();
                if (this.PostalAddress != null)
                    hashCode = hashCode * 59 + this.PostalAddress.GetHashCode();
                if (this.PostalSuburb != null)
                    hashCode = hashCode * 59 + this.PostalSuburb.GetHashCode();
                if (this.PostalTown != null)
                    hashCode = hashCode * 59 + this.PostalTown.GetHashCode();
                if (this.PostalCountry != null)
                    hashCode = hashCode * 59 + this.PostalCountry.GetHashCode();
                if (this.PostalPostCode != null)
                    hashCode = hashCode * 59 + this.PostalPostCode.GetHashCode();
                if (this.PhoneNo != null)
                    hashCode = hashCode * 59 + this.PhoneNo.GetHashCode();
                if (this.FaxNo != null)
                    hashCode = hashCode * 59 + this.FaxNo.GetHashCode();
                if (this.RegNo != null)
                    hashCode = hashCode * 59 + this.RegNo.GetHashCode();
                if (this.RegStatus != null)
                    hashCode = hashCode * 59 + this.RegStatus.GetHashCode();
                if (this.RegStatusCode != null)
                    hashCode = hashCode * 59 + this.RegStatusCode.GetHashCode();
                if (this.TradingNumber != null)
                    hashCode = hashCode * 59 + this.TradingNumber.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
