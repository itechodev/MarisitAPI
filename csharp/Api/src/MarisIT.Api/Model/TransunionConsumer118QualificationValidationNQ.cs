/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118QualificationValidationNQ
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118QualificationValidationNQ :  IEquatable<TransunionConsumer118QualificationValidationNQ>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118QualificationValidationNQ" /> class.
        /// </summary>
        /// <param name="recordNumber">recordNumber.</param>
        /// <param name="consumerNo">consumerNo.</param>
        /// <param name="issueDate">issueDate.</param>
        /// <param name="institutionName">institutionName.</param>
        /// <param name="qualificationName">qualificationName.</param>
        /// <param name="status">status.</param>
        /// <param name="responseCode">responseCode.</param>
        /// <param name="recordsMatched">recordsMatched.</param>
        public TransunionConsumer118QualificationValidationNQ(string recordNumber = default(string), string consumerNo = default(string), string issueDate = default(string), string institutionName = default(string), string qualificationName = default(string), string status = default(string), string responseCode = default(string), string recordsMatched = default(string))
        {
            this.RecordNumber = recordNumber;
            this.ConsumerNo = consumerNo;
            this.IssueDate = issueDate;
            this.InstitutionName = institutionName;
            this.QualificationName = qualificationName;
            this.Status = status;
            this.ResponseCode = responseCode;
            this.RecordsMatched = recordsMatched;
            this.RecordNumber = recordNumber;
            this.ConsumerNo = consumerNo;
            this.IssueDate = issueDate;
            this.InstitutionName = institutionName;
            this.QualificationName = qualificationName;
            this.Status = status;
            this.ResponseCode = responseCode;
            this.RecordsMatched = recordsMatched;
        }

        /// <summary>
        /// Gets or Sets RecordNumber
        /// </summary>
        [DataMember(Name="recordNumber", EmitDefaultValue=true)]
        public string RecordNumber { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerNo
        /// </summary>
        [DataMember(Name="consumerNo", EmitDefaultValue=true)]
        public string ConsumerNo { get; set; }

        /// <summary>
        /// Gets or Sets IssueDate
        /// </summary>
        [DataMember(Name="issueDate", EmitDefaultValue=true)]
        public string IssueDate { get; set; }

        /// <summary>
        /// Gets or Sets InstitutionName
        /// </summary>
        [DataMember(Name="institutionName", EmitDefaultValue=true)]
        public string InstitutionName { get; set; }

        /// <summary>
        /// Gets or Sets QualificationName
        /// </summary>
        [DataMember(Name="qualificationName", EmitDefaultValue=true)]
        public string QualificationName { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=true)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets ResponseCode
        /// </summary>
        [DataMember(Name="responseCode", EmitDefaultValue=true)]
        public string ResponseCode { get; set; }

        /// <summary>
        /// Gets or Sets RecordsMatched
        /// </summary>
        [DataMember(Name="recordsMatched", EmitDefaultValue=true)]
        public string RecordsMatched { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118QualificationValidationNQ {\n");
            sb.Append("  RecordNumber: ").Append(RecordNumber).Append("\n");
            sb.Append("  ConsumerNo: ").Append(ConsumerNo).Append("\n");
            sb.Append("  IssueDate: ").Append(IssueDate).Append("\n");
            sb.Append("  InstitutionName: ").Append(InstitutionName).Append("\n");
            sb.Append("  QualificationName: ").Append(QualificationName).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  ResponseCode: ").Append(ResponseCode).Append("\n");
            sb.Append("  RecordsMatched: ").Append(RecordsMatched).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118QualificationValidationNQ);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118QualificationValidationNQ instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118QualificationValidationNQ to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118QualificationValidationNQ input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.RecordNumber == input.RecordNumber ||
                    (this.RecordNumber != null &&
                    this.RecordNumber.Equals(input.RecordNumber))
                ) && 
                (
                    this.ConsumerNo == input.ConsumerNo ||
                    (this.ConsumerNo != null &&
                    this.ConsumerNo.Equals(input.ConsumerNo))
                ) && 
                (
                    this.IssueDate == input.IssueDate ||
                    (this.IssueDate != null &&
                    this.IssueDate.Equals(input.IssueDate))
                ) && 
                (
                    this.InstitutionName == input.InstitutionName ||
                    (this.InstitutionName != null &&
                    this.InstitutionName.Equals(input.InstitutionName))
                ) && 
                (
                    this.QualificationName == input.QualificationName ||
                    (this.QualificationName != null &&
                    this.QualificationName.Equals(input.QualificationName))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.ResponseCode == input.ResponseCode ||
                    (this.ResponseCode != null &&
                    this.ResponseCode.Equals(input.ResponseCode))
                ) && 
                (
                    this.RecordsMatched == input.RecordsMatched ||
                    (this.RecordsMatched != null &&
                    this.RecordsMatched.Equals(input.RecordsMatched))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RecordNumber != null)
                    hashCode = hashCode * 59 + this.RecordNumber.GetHashCode();
                if (this.ConsumerNo != null)
                    hashCode = hashCode * 59 + this.ConsumerNo.GetHashCode();
                if (this.IssueDate != null)
                    hashCode = hashCode * 59 + this.IssueDate.GetHashCode();
                if (this.InstitutionName != null)
                    hashCode = hashCode * 59 + this.InstitutionName.GetHashCode();
                if (this.QualificationName != null)
                    hashCode = hashCode * 59 + this.QualificationName.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.ResponseCode != null)
                    hashCode = hashCode * 59 + this.ResponseCode.GetHashCode();
                if (this.RecordsMatched != null)
                    hashCode = hashCode * 59 + this.RecordsMatched.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
