/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// CompuscanCOMPNONACTIVEPRINCIPALS
    /// </summary>
    [DataContract]
    public partial class CompuscanCOMPNONACTIVEPRINCIPALS :  IEquatable<CompuscanCOMPNONACTIVEPRINCIPALS>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompuscanCOMPNONACTIVEPRINCIPALS" /> class.
        /// </summary>
        /// <param name="appointmentdate">appointmentdate.</param>
        /// <param name="comments">comments.</param>
        /// <param name="createdby">createdby.</param>
        /// <param name="createddttm">createddttm.</param>
        /// <param name="fullnames">fullnames.</param>
        /// <param name="membertype">membertype.</param>
        /// <param name="modifiedby">modifiedby.</param>
        /// <param name="modifieddttm">modifieddttm.</param>
        /// <param name="status">status.</param>
        public CompuscanCOMPNONACTIVEPRINCIPALS(string appointmentdate = default(string), string comments = default(string), string createdby = default(string), string createddttm = default(string), string fullnames = default(string), string membertype = default(string), string modifiedby = default(string), string modifieddttm = default(string), string status = default(string))
        {
            this.Appointmentdate = appointmentdate;
            this.Comments = comments;
            this.Createdby = createdby;
            this.Createddttm = createddttm;
            this.Fullnames = fullnames;
            this.Membertype = membertype;
            this.Modifiedby = modifiedby;
            this.Modifieddttm = modifieddttm;
            this.Status = status;
            this.Appointmentdate = appointmentdate;
            this.Comments = comments;
            this.Createdby = createdby;
            this.Createddttm = createddttm;
            this.Fullnames = fullnames;
            this.Membertype = membertype;
            this.Modifiedby = modifiedby;
            this.Modifieddttm = modifieddttm;
            this.Status = status;
        }

        /// <summary>
        /// Gets or Sets Appointmentdate
        /// </summary>
        [DataMember(Name="appointmentdate", EmitDefaultValue=true)]
        public string Appointmentdate { get; set; }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name="comments", EmitDefaultValue=true)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets Createdby
        /// </summary>
        [DataMember(Name="createdby", EmitDefaultValue=true)]
        public string Createdby { get; set; }

        /// <summary>
        /// Gets or Sets Createddttm
        /// </summary>
        [DataMember(Name="createddttm", EmitDefaultValue=true)]
        public string Createddttm { get; set; }

        /// <summary>
        /// Gets or Sets Fullnames
        /// </summary>
        [DataMember(Name="fullnames", EmitDefaultValue=true)]
        public string Fullnames { get; set; }

        /// <summary>
        /// Gets or Sets Membertype
        /// </summary>
        [DataMember(Name="membertype", EmitDefaultValue=true)]
        public string Membertype { get; set; }

        /// <summary>
        /// Gets or Sets Modifiedby
        /// </summary>
        [DataMember(Name="modifiedby", EmitDefaultValue=true)]
        public string Modifiedby { get; set; }

        /// <summary>
        /// Gets or Sets Modifieddttm
        /// </summary>
        [DataMember(Name="modifieddttm", EmitDefaultValue=true)]
        public string Modifieddttm { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=true)]
        public string Status { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompuscanCOMPNONACTIVEPRINCIPALS {\n");
            sb.Append("  Appointmentdate: ").Append(Appointmentdate).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  Createdby: ").Append(Createdby).Append("\n");
            sb.Append("  Createddttm: ").Append(Createddttm).Append("\n");
            sb.Append("  Fullnames: ").Append(Fullnames).Append("\n");
            sb.Append("  Membertype: ").Append(Membertype).Append("\n");
            sb.Append("  Modifiedby: ").Append(Modifiedby).Append("\n");
            sb.Append("  Modifieddttm: ").Append(Modifieddttm).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompuscanCOMPNONACTIVEPRINCIPALS);
        }

        /// <summary>
        /// Returns true if CompuscanCOMPNONACTIVEPRINCIPALS instances are equal
        /// </summary>
        /// <param name="input">Instance of CompuscanCOMPNONACTIVEPRINCIPALS to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompuscanCOMPNONACTIVEPRINCIPALS input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Appointmentdate == input.Appointmentdate ||
                    (this.Appointmentdate != null &&
                    this.Appointmentdate.Equals(input.Appointmentdate))
                ) && 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.Createdby == input.Createdby ||
                    (this.Createdby != null &&
                    this.Createdby.Equals(input.Createdby))
                ) && 
                (
                    this.Createddttm == input.Createddttm ||
                    (this.Createddttm != null &&
                    this.Createddttm.Equals(input.Createddttm))
                ) && 
                (
                    this.Fullnames == input.Fullnames ||
                    (this.Fullnames != null &&
                    this.Fullnames.Equals(input.Fullnames))
                ) && 
                (
                    this.Membertype == input.Membertype ||
                    (this.Membertype != null &&
                    this.Membertype.Equals(input.Membertype))
                ) && 
                (
                    this.Modifiedby == input.Modifiedby ||
                    (this.Modifiedby != null &&
                    this.Modifiedby.Equals(input.Modifiedby))
                ) && 
                (
                    this.Modifieddttm == input.Modifieddttm ||
                    (this.Modifieddttm != null &&
                    this.Modifieddttm.Equals(input.Modifieddttm))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Appointmentdate != null)
                    hashCode = hashCode * 59 + this.Appointmentdate.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.Createdby != null)
                    hashCode = hashCode * 59 + this.Createdby.GetHashCode();
                if (this.Createddttm != null)
                    hashCode = hashCode * 59 + this.Createddttm.GetHashCode();
                if (this.Fullnames != null)
                    hashCode = hashCode * 59 + this.Fullnames.GetHashCode();
                if (this.Membertype != null)
                    hashCode = hashCode * 59 + this.Membertype.GetHashCode();
                if (this.Modifiedby != null)
                    hashCode = hashCode * 59 + this.Modifiedby.GetHashCode();
                if (this.Modifieddttm != null)
                    hashCode = hashCode * 59 + this.Modifieddttm.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
