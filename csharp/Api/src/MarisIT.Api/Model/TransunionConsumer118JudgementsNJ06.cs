/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118JudgementsNJ06
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118JudgementsNJ06 :  IEquatable<TransunionConsumer118JudgementsNJ06>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118JudgementsNJ06" /> class.
        /// </summary>
        /// <param name="consumerNo">consumerNo.</param>
        /// <param name="judgmentDate">judgmentDate.</param>
        /// <param name="amount">amount.</param>
        /// <param name="plaintiff">plaintiff.</param>
        /// <param name="judgmentTypeCode">judgmentTypeCode.</param>
        /// <param name="judgmentTypeDesc">judgmentTypeDesc.</param>
        /// <param name="courtTypeCode">courtTypeCode.</param>
        /// <param name="courtTypeDesc">courtTypeDesc.</param>
        /// <param name="courtNameCode">courtNameCode.</param>
        /// <param name="courtNameDesc">courtNameDesc.</param>
        /// <param name="caseNo">caseNo.</param>
        /// <param name="natureOfDebtCode">natureOfDebtCode.</param>
        /// <param name="natureOfDebtDesc">natureOfDebtDesc.</param>
        /// <param name="remarks">remarks.</param>
        public TransunionConsumer118JudgementsNJ06(string consumerNo = default(string), string judgmentDate = default(string), string amount = default(string), string plaintiff = default(string), string judgmentTypeCode = default(string), string judgmentTypeDesc = default(string), string courtTypeCode = default(string), string courtTypeDesc = default(string), string courtNameCode = default(string), string courtNameDesc = default(string), string caseNo = default(string), string natureOfDebtCode = default(string), string natureOfDebtDesc = default(string), string remarks = default(string))
        {
            this.ConsumerNo = consumerNo;
            this.JudgmentDate = judgmentDate;
            this.Amount = amount;
            this.Plaintiff = plaintiff;
            this.JudgmentTypeCode = judgmentTypeCode;
            this.JudgmentTypeDesc = judgmentTypeDesc;
            this.CourtTypeCode = courtTypeCode;
            this.CourtTypeDesc = courtTypeDesc;
            this.CourtNameCode = courtNameCode;
            this.CourtNameDesc = courtNameDesc;
            this.CaseNo = caseNo;
            this.NatureOfDebtCode = natureOfDebtCode;
            this.NatureOfDebtDesc = natureOfDebtDesc;
            this.Remarks = remarks;
            this.ConsumerNo = consumerNo;
            this.JudgmentDate = judgmentDate;
            this.Amount = amount;
            this.Plaintiff = plaintiff;
            this.JudgmentTypeCode = judgmentTypeCode;
            this.JudgmentTypeDesc = judgmentTypeDesc;
            this.CourtTypeCode = courtTypeCode;
            this.CourtTypeDesc = courtTypeDesc;
            this.CourtNameCode = courtNameCode;
            this.CourtNameDesc = courtNameDesc;
            this.CaseNo = caseNo;
            this.NatureOfDebtCode = natureOfDebtCode;
            this.NatureOfDebtDesc = natureOfDebtDesc;
            this.Remarks = remarks;
        }

        /// <summary>
        /// Gets or Sets ConsumerNo
        /// </summary>
        [DataMember(Name="consumerNo", EmitDefaultValue=true)]
        public string ConsumerNo { get; set; }

        /// <summary>
        /// Gets or Sets JudgmentDate
        /// </summary>
        [DataMember(Name="judgmentDate", EmitDefaultValue=true)]
        public string JudgmentDate { get; set; }

        /// <summary>
        /// Gets or Sets Amount
        /// </summary>
        [DataMember(Name="amount", EmitDefaultValue=true)]
        public string Amount { get; set; }

        /// <summary>
        /// Gets or Sets Plaintiff
        /// </summary>
        [DataMember(Name="plaintiff", EmitDefaultValue=true)]
        public string Plaintiff { get; set; }

        /// <summary>
        /// Gets or Sets JudgmentTypeCode
        /// </summary>
        [DataMember(Name="judgmentTypeCode", EmitDefaultValue=true)]
        public string JudgmentTypeCode { get; set; }

        /// <summary>
        /// Gets or Sets JudgmentTypeDesc
        /// </summary>
        [DataMember(Name="judgmentTypeDesc", EmitDefaultValue=true)]
        public string JudgmentTypeDesc { get; set; }

        /// <summary>
        /// Gets or Sets CourtTypeCode
        /// </summary>
        [DataMember(Name="courtTypeCode", EmitDefaultValue=true)]
        public string CourtTypeCode { get; set; }

        /// <summary>
        /// Gets or Sets CourtTypeDesc
        /// </summary>
        [DataMember(Name="courtTypeDesc", EmitDefaultValue=true)]
        public string CourtTypeDesc { get; set; }

        /// <summary>
        /// Gets or Sets CourtNameCode
        /// </summary>
        [DataMember(Name="courtNameCode", EmitDefaultValue=true)]
        public string CourtNameCode { get; set; }

        /// <summary>
        /// Gets or Sets CourtNameDesc
        /// </summary>
        [DataMember(Name="courtNameDesc", EmitDefaultValue=true)]
        public string CourtNameDesc { get; set; }

        /// <summary>
        /// Gets or Sets CaseNo
        /// </summary>
        [DataMember(Name="caseNo", EmitDefaultValue=true)]
        public string CaseNo { get; set; }

        /// <summary>
        /// Gets or Sets NatureOfDebtCode
        /// </summary>
        [DataMember(Name="natureOfDebtCode", EmitDefaultValue=true)]
        public string NatureOfDebtCode { get; set; }

        /// <summary>
        /// Gets or Sets NatureOfDebtDesc
        /// </summary>
        [DataMember(Name="natureOfDebtDesc", EmitDefaultValue=true)]
        public string NatureOfDebtDesc { get; set; }

        /// <summary>
        /// Gets or Sets Remarks
        /// </summary>
        [DataMember(Name="remarks", EmitDefaultValue=true)]
        public string Remarks { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118JudgementsNJ06 {\n");
            sb.Append("  ConsumerNo: ").Append(ConsumerNo).Append("\n");
            sb.Append("  JudgmentDate: ").Append(JudgmentDate).Append("\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  Plaintiff: ").Append(Plaintiff).Append("\n");
            sb.Append("  JudgmentTypeCode: ").Append(JudgmentTypeCode).Append("\n");
            sb.Append("  JudgmentTypeDesc: ").Append(JudgmentTypeDesc).Append("\n");
            sb.Append("  CourtTypeCode: ").Append(CourtTypeCode).Append("\n");
            sb.Append("  CourtTypeDesc: ").Append(CourtTypeDesc).Append("\n");
            sb.Append("  CourtNameCode: ").Append(CourtNameCode).Append("\n");
            sb.Append("  CourtNameDesc: ").Append(CourtNameDesc).Append("\n");
            sb.Append("  CaseNo: ").Append(CaseNo).Append("\n");
            sb.Append("  NatureOfDebtCode: ").Append(NatureOfDebtCode).Append("\n");
            sb.Append("  NatureOfDebtDesc: ").Append(NatureOfDebtDesc).Append("\n");
            sb.Append("  Remarks: ").Append(Remarks).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118JudgementsNJ06);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118JudgementsNJ06 instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118JudgementsNJ06 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118JudgementsNJ06 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConsumerNo == input.ConsumerNo ||
                    (this.ConsumerNo != null &&
                    this.ConsumerNo.Equals(input.ConsumerNo))
                ) && 
                (
                    this.JudgmentDate == input.JudgmentDate ||
                    (this.JudgmentDate != null &&
                    this.JudgmentDate.Equals(input.JudgmentDate))
                ) && 
                (
                    this.Amount == input.Amount ||
                    (this.Amount != null &&
                    this.Amount.Equals(input.Amount))
                ) && 
                (
                    this.Plaintiff == input.Plaintiff ||
                    (this.Plaintiff != null &&
                    this.Plaintiff.Equals(input.Plaintiff))
                ) && 
                (
                    this.JudgmentTypeCode == input.JudgmentTypeCode ||
                    (this.JudgmentTypeCode != null &&
                    this.JudgmentTypeCode.Equals(input.JudgmentTypeCode))
                ) && 
                (
                    this.JudgmentTypeDesc == input.JudgmentTypeDesc ||
                    (this.JudgmentTypeDesc != null &&
                    this.JudgmentTypeDesc.Equals(input.JudgmentTypeDesc))
                ) && 
                (
                    this.CourtTypeCode == input.CourtTypeCode ||
                    (this.CourtTypeCode != null &&
                    this.CourtTypeCode.Equals(input.CourtTypeCode))
                ) && 
                (
                    this.CourtTypeDesc == input.CourtTypeDesc ||
                    (this.CourtTypeDesc != null &&
                    this.CourtTypeDesc.Equals(input.CourtTypeDesc))
                ) && 
                (
                    this.CourtNameCode == input.CourtNameCode ||
                    (this.CourtNameCode != null &&
                    this.CourtNameCode.Equals(input.CourtNameCode))
                ) && 
                (
                    this.CourtNameDesc == input.CourtNameDesc ||
                    (this.CourtNameDesc != null &&
                    this.CourtNameDesc.Equals(input.CourtNameDesc))
                ) && 
                (
                    this.CaseNo == input.CaseNo ||
                    (this.CaseNo != null &&
                    this.CaseNo.Equals(input.CaseNo))
                ) && 
                (
                    this.NatureOfDebtCode == input.NatureOfDebtCode ||
                    (this.NatureOfDebtCode != null &&
                    this.NatureOfDebtCode.Equals(input.NatureOfDebtCode))
                ) && 
                (
                    this.NatureOfDebtDesc == input.NatureOfDebtDesc ||
                    (this.NatureOfDebtDesc != null &&
                    this.NatureOfDebtDesc.Equals(input.NatureOfDebtDesc))
                ) && 
                (
                    this.Remarks == input.Remarks ||
                    (this.Remarks != null &&
                    this.Remarks.Equals(input.Remarks))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConsumerNo != null)
                    hashCode = hashCode * 59 + this.ConsumerNo.GetHashCode();
                if (this.JudgmentDate != null)
                    hashCode = hashCode * 59 + this.JudgmentDate.GetHashCode();
                if (this.Amount != null)
                    hashCode = hashCode * 59 + this.Amount.GetHashCode();
                if (this.Plaintiff != null)
                    hashCode = hashCode * 59 + this.Plaintiff.GetHashCode();
                if (this.JudgmentTypeCode != null)
                    hashCode = hashCode * 59 + this.JudgmentTypeCode.GetHashCode();
                if (this.JudgmentTypeDesc != null)
                    hashCode = hashCode * 59 + this.JudgmentTypeDesc.GetHashCode();
                if (this.CourtTypeCode != null)
                    hashCode = hashCode * 59 + this.CourtTypeCode.GetHashCode();
                if (this.CourtTypeDesc != null)
                    hashCode = hashCode * 59 + this.CourtTypeDesc.GetHashCode();
                if (this.CourtNameCode != null)
                    hashCode = hashCode * 59 + this.CourtNameCode.GetHashCode();
                if (this.CourtNameDesc != null)
                    hashCode = hashCode * 59 + this.CourtNameDesc.GetHashCode();
                if (this.CaseNo != null)
                    hashCode = hashCode * 59 + this.CaseNo.GetHashCode();
                if (this.NatureOfDebtCode != null)
                    hashCode = hashCode * 59 + this.NatureOfDebtCode.GetHashCode();
                if (this.NatureOfDebtDesc != null)
                    hashCode = hashCode * 59 + this.NatureOfDebtDesc.GetHashCode();
                if (this.Remarks != null)
                    hashCode = hashCode * 59 + this.Remarks.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
