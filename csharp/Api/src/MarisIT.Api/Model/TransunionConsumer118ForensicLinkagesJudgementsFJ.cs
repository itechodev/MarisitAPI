/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118ForensicLinkagesJudgementsFJ
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118ForensicLinkagesJudgementsFJ :  IEquatable<TransunionConsumer118ForensicLinkagesJudgementsFJ>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118ForensicLinkagesJudgementsFJ" /> class.
        /// </summary>
        /// <param name="plaintiff">plaintiff.</param>
        /// <param name="judgementDate">judgementDate.</param>
        /// <param name="judgementAmount">judgementAmount.</param>
        /// <param name="judgementType">judgementType.</param>
        /// <param name="courtType">courtType.</param>
        /// <param name="courtName">courtName.</param>
        /// <param name="caseNumber">caseNumber.</param>
        /// <param name="natureOfDebt">natureOfDebt.</param>
        /// <param name="captureDate">captureDate.</param>
        /// <param name="magisterialDistrict">magisterialDistrict.</param>
        /// <param name="judgeRemarks">judgeRemarks.</param>
        /// <param name="numberOfParties">numberOfParties.</param>
        /// <param name="forensicLinkagesJudgementsAssociates">forensicLinkagesJudgementsAssociates.</param>
        /// <param name="message">message.</param>
        public TransunionConsumer118ForensicLinkagesJudgementsFJ(string plaintiff = default(string), string judgementDate = default(string), string judgementAmount = default(string), string judgementType = default(string), string courtType = default(string), string courtName = default(string), string caseNumber = default(string), string natureOfDebt = default(string), string captureDate = default(string), string magisterialDistrict = default(string), string judgeRemarks = default(string), string numberOfParties = default(string), List<TransunionConsumer118ForensicLinkagesJudgementsAssociates> forensicLinkagesJudgementsAssociates = default(List<TransunionConsumer118ForensicLinkagesJudgementsAssociates>), string message = default(string))
        {
            this.Plaintiff = plaintiff;
            this.JudgementDate = judgementDate;
            this.JudgementAmount = judgementAmount;
            this.JudgementType = judgementType;
            this.CourtType = courtType;
            this.CourtName = courtName;
            this.CaseNumber = caseNumber;
            this.NatureOfDebt = natureOfDebt;
            this.CaptureDate = captureDate;
            this.MagisterialDistrict = magisterialDistrict;
            this.JudgeRemarks = judgeRemarks;
            this.NumberOfParties = numberOfParties;
            this.ForensicLinkagesJudgementsAssociates = forensicLinkagesJudgementsAssociates;
            this.Message = message;
            this.Plaintiff = plaintiff;
            this.JudgementDate = judgementDate;
            this.JudgementAmount = judgementAmount;
            this.JudgementType = judgementType;
            this.CourtType = courtType;
            this.CourtName = courtName;
            this.CaseNumber = caseNumber;
            this.NatureOfDebt = natureOfDebt;
            this.CaptureDate = captureDate;
            this.MagisterialDistrict = magisterialDistrict;
            this.JudgeRemarks = judgeRemarks;
            this.NumberOfParties = numberOfParties;
            this.ForensicLinkagesJudgementsAssociates = forensicLinkagesJudgementsAssociates;
            this.Message = message;
        }

        /// <summary>
        /// Gets or Sets Plaintiff
        /// </summary>
        [DataMember(Name="plaintiff", EmitDefaultValue=true)]
        public string Plaintiff { get; set; }

        /// <summary>
        /// Gets or Sets JudgementDate
        /// </summary>
        [DataMember(Name="judgementDate", EmitDefaultValue=true)]
        public string JudgementDate { get; set; }

        /// <summary>
        /// Gets or Sets JudgementAmount
        /// </summary>
        [DataMember(Name="judgementAmount", EmitDefaultValue=true)]
        public string JudgementAmount { get; set; }

        /// <summary>
        /// Gets or Sets JudgementType
        /// </summary>
        [DataMember(Name="judgementType", EmitDefaultValue=true)]
        public string JudgementType { get; set; }

        /// <summary>
        /// Gets or Sets CourtType
        /// </summary>
        [DataMember(Name="courtType", EmitDefaultValue=true)]
        public string CourtType { get; set; }

        /// <summary>
        /// Gets or Sets CourtName
        /// </summary>
        [DataMember(Name="courtName", EmitDefaultValue=true)]
        public string CourtName { get; set; }

        /// <summary>
        /// Gets or Sets CaseNumber
        /// </summary>
        [DataMember(Name="caseNumber", EmitDefaultValue=true)]
        public string CaseNumber { get; set; }

        /// <summary>
        /// Gets or Sets NatureOfDebt
        /// </summary>
        [DataMember(Name="natureOfDebt", EmitDefaultValue=true)]
        public string NatureOfDebt { get; set; }

        /// <summary>
        /// Gets or Sets CaptureDate
        /// </summary>
        [DataMember(Name="captureDate", EmitDefaultValue=true)]
        public string CaptureDate { get; set; }

        /// <summary>
        /// Gets or Sets MagisterialDistrict
        /// </summary>
        [DataMember(Name="magisterialDistrict", EmitDefaultValue=true)]
        public string MagisterialDistrict { get; set; }

        /// <summary>
        /// Gets or Sets JudgeRemarks
        /// </summary>
        [DataMember(Name="judgeRemarks", EmitDefaultValue=true)]
        public string JudgeRemarks { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfParties
        /// </summary>
        [DataMember(Name="numberOfParties", EmitDefaultValue=true)]
        public string NumberOfParties { get; set; }

        /// <summary>
        /// Gets or Sets ForensicLinkagesJudgementsAssociates
        /// </summary>
        [DataMember(Name="forensicLinkagesJudgementsAssociates", EmitDefaultValue=true)]
        public List<TransunionConsumer118ForensicLinkagesJudgementsAssociates> ForensicLinkagesJudgementsAssociates { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name="message", EmitDefaultValue=true)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118ForensicLinkagesJudgementsFJ {\n");
            sb.Append("  Plaintiff: ").Append(Plaintiff).Append("\n");
            sb.Append("  JudgementDate: ").Append(JudgementDate).Append("\n");
            sb.Append("  JudgementAmount: ").Append(JudgementAmount).Append("\n");
            sb.Append("  JudgementType: ").Append(JudgementType).Append("\n");
            sb.Append("  CourtType: ").Append(CourtType).Append("\n");
            sb.Append("  CourtName: ").Append(CourtName).Append("\n");
            sb.Append("  CaseNumber: ").Append(CaseNumber).Append("\n");
            sb.Append("  NatureOfDebt: ").Append(NatureOfDebt).Append("\n");
            sb.Append("  CaptureDate: ").Append(CaptureDate).Append("\n");
            sb.Append("  MagisterialDistrict: ").Append(MagisterialDistrict).Append("\n");
            sb.Append("  JudgeRemarks: ").Append(JudgeRemarks).Append("\n");
            sb.Append("  NumberOfParties: ").Append(NumberOfParties).Append("\n");
            sb.Append("  ForensicLinkagesJudgementsAssociates: ").Append(ForensicLinkagesJudgementsAssociates).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118ForensicLinkagesJudgementsFJ);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118ForensicLinkagesJudgementsFJ instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118ForensicLinkagesJudgementsFJ to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118ForensicLinkagesJudgementsFJ input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Plaintiff == input.Plaintiff ||
                    (this.Plaintiff != null &&
                    this.Plaintiff.Equals(input.Plaintiff))
                ) && 
                (
                    this.JudgementDate == input.JudgementDate ||
                    (this.JudgementDate != null &&
                    this.JudgementDate.Equals(input.JudgementDate))
                ) && 
                (
                    this.JudgementAmount == input.JudgementAmount ||
                    (this.JudgementAmount != null &&
                    this.JudgementAmount.Equals(input.JudgementAmount))
                ) && 
                (
                    this.JudgementType == input.JudgementType ||
                    (this.JudgementType != null &&
                    this.JudgementType.Equals(input.JudgementType))
                ) && 
                (
                    this.CourtType == input.CourtType ||
                    (this.CourtType != null &&
                    this.CourtType.Equals(input.CourtType))
                ) && 
                (
                    this.CourtName == input.CourtName ||
                    (this.CourtName != null &&
                    this.CourtName.Equals(input.CourtName))
                ) && 
                (
                    this.CaseNumber == input.CaseNumber ||
                    (this.CaseNumber != null &&
                    this.CaseNumber.Equals(input.CaseNumber))
                ) && 
                (
                    this.NatureOfDebt == input.NatureOfDebt ||
                    (this.NatureOfDebt != null &&
                    this.NatureOfDebt.Equals(input.NatureOfDebt))
                ) && 
                (
                    this.CaptureDate == input.CaptureDate ||
                    (this.CaptureDate != null &&
                    this.CaptureDate.Equals(input.CaptureDate))
                ) && 
                (
                    this.MagisterialDistrict == input.MagisterialDistrict ||
                    (this.MagisterialDistrict != null &&
                    this.MagisterialDistrict.Equals(input.MagisterialDistrict))
                ) && 
                (
                    this.JudgeRemarks == input.JudgeRemarks ||
                    (this.JudgeRemarks != null &&
                    this.JudgeRemarks.Equals(input.JudgeRemarks))
                ) && 
                (
                    this.NumberOfParties == input.NumberOfParties ||
                    (this.NumberOfParties != null &&
                    this.NumberOfParties.Equals(input.NumberOfParties))
                ) && 
                (
                    this.ForensicLinkagesJudgementsAssociates == input.ForensicLinkagesJudgementsAssociates ||
                    this.ForensicLinkagesJudgementsAssociates != null &&
                    input.ForensicLinkagesJudgementsAssociates != null &&
                    this.ForensicLinkagesJudgementsAssociates.SequenceEqual(input.ForensicLinkagesJudgementsAssociates)
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Plaintiff != null)
                    hashCode = hashCode * 59 + this.Plaintiff.GetHashCode();
                if (this.JudgementDate != null)
                    hashCode = hashCode * 59 + this.JudgementDate.GetHashCode();
                if (this.JudgementAmount != null)
                    hashCode = hashCode * 59 + this.JudgementAmount.GetHashCode();
                if (this.JudgementType != null)
                    hashCode = hashCode * 59 + this.JudgementType.GetHashCode();
                if (this.CourtType != null)
                    hashCode = hashCode * 59 + this.CourtType.GetHashCode();
                if (this.CourtName != null)
                    hashCode = hashCode * 59 + this.CourtName.GetHashCode();
                if (this.CaseNumber != null)
                    hashCode = hashCode * 59 + this.CaseNumber.GetHashCode();
                if (this.NatureOfDebt != null)
                    hashCode = hashCode * 59 + this.NatureOfDebt.GetHashCode();
                if (this.CaptureDate != null)
                    hashCode = hashCode * 59 + this.CaptureDate.GetHashCode();
                if (this.MagisterialDistrict != null)
                    hashCode = hashCode * 59 + this.MagisterialDistrict.GetHashCode();
                if (this.JudgeRemarks != null)
                    hashCode = hashCode * 59 + this.JudgeRemarks.GetHashCode();
                if (this.NumberOfParties != null)
                    hashCode = hashCode * 59 + this.NumberOfParties.GetHashCode();
                if (this.ForensicLinkagesJudgementsAssociates != null)
                    hashCode = hashCode * 59 + this.ForensicLinkagesJudgementsAssociates.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
