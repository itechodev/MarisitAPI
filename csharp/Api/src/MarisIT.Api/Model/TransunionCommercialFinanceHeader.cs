/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialFinanceHeader
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialFinanceHeader :  IEquatable<TransunionCommercialFinanceHeader>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialFinanceHeader" /> class.
        /// </summary>
        /// <param name="majorProduct">majorProduct.</param>
        /// <param name="date">date.</param>
        /// <param name="source">source.</param>
        /// <param name="sourceTitle">sourceTitle.</param>
        /// <param name="comment">comment.</param>
        /// <param name="turnOverDateYear1">turnOverDateYear1.</param>
        /// <param name="turnOverDateYear2">turnOverDateYear2.</param>
        /// <param name="turnOverAmount1">turnOverAmount1.</param>
        /// <param name="turnOverAmount2">turnOverAmount2.</param>
        /// <param name="turnOverYear1Type">turnOverYear1Type.</param>
        /// <param name="turnOverYear2Type">turnOverYear2Type.</param>
        /// <param name="balanceSheetDate">balanceSheetDate.</param>
        /// <param name="balanceSheetUnit">balanceSheetUnit.</param>
        /// <param name="balanceSheetType">balanceSheetType.</param>
        /// <param name="finYearMonth">finYearMonth.</param>
        /// <param name="drCededInd">drCededInd.</param>
        /// <param name="drCededName">drCededName.</param>
        /// <param name="drFactored">drFactored.</param>
        /// <param name="drFactoredName">drFactoredName.</param>
        public TransunionCommercialFinanceHeader(string majorProduct = default(string), string date = default(string), string source = default(string), string sourceTitle = default(string), string comment = default(string), string turnOverDateYear1 = default(string), string turnOverDateYear2 = default(string), string turnOverAmount1 = default(string), string turnOverAmount2 = default(string), string turnOverYear1Type = default(string), string turnOverYear2Type = default(string), string balanceSheetDate = default(string), string balanceSheetUnit = default(string), string balanceSheetType = default(string), string finYearMonth = default(string), string drCededInd = default(string), string drCededName = default(string), string drFactored = default(string), string drFactoredName = default(string))
        {
            this.MajorProduct = majorProduct;
            this.Date = date;
            this.Source = source;
            this.SourceTitle = sourceTitle;
            this.Comment = comment;
            this.TurnOverDateYear1 = turnOverDateYear1;
            this.TurnOverDateYear2 = turnOverDateYear2;
            this.TurnOverAmount1 = turnOverAmount1;
            this.TurnOverAmount2 = turnOverAmount2;
            this.TurnOverYear1Type = turnOverYear1Type;
            this.TurnOverYear2Type = turnOverYear2Type;
            this.BalanceSheetDate = balanceSheetDate;
            this.BalanceSheetUnit = balanceSheetUnit;
            this.BalanceSheetType = balanceSheetType;
            this.FinYearMonth = finYearMonth;
            this.DrCededInd = drCededInd;
            this.DrCededName = drCededName;
            this.DrFactored = drFactored;
            this.DrFactoredName = drFactoredName;
            this.MajorProduct = majorProduct;
            this.Date = date;
            this.Source = source;
            this.SourceTitle = sourceTitle;
            this.Comment = comment;
            this.TurnOverDateYear1 = turnOverDateYear1;
            this.TurnOverDateYear2 = turnOverDateYear2;
            this.TurnOverAmount1 = turnOverAmount1;
            this.TurnOverAmount2 = turnOverAmount2;
            this.TurnOverYear1Type = turnOverYear1Type;
            this.TurnOverYear2Type = turnOverYear2Type;
            this.BalanceSheetDate = balanceSheetDate;
            this.BalanceSheetUnit = balanceSheetUnit;
            this.BalanceSheetType = balanceSheetType;
            this.FinYearMonth = finYearMonth;
            this.DrCededInd = drCededInd;
            this.DrCededName = drCededName;
            this.DrFactored = drFactored;
            this.DrFactoredName = drFactoredName;
        }

        /// <summary>
        /// Gets or Sets MajorProduct
        /// </summary>
        [DataMember(Name="majorProduct", EmitDefaultValue=true)]
        public string MajorProduct { get; set; }

        /// <summary>
        /// Gets or Sets Date
        /// </summary>
        [DataMember(Name="date", EmitDefaultValue=true)]
        public string Date { get; set; }

        /// <summary>
        /// Gets or Sets Source
        /// </summary>
        [DataMember(Name="source", EmitDefaultValue=true)]
        public string Source { get; set; }

        /// <summary>
        /// Gets or Sets SourceTitle
        /// </summary>
        [DataMember(Name="sourceTitle", EmitDefaultValue=true)]
        public string SourceTitle { get; set; }

        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [DataMember(Name="comment", EmitDefaultValue=true)]
        public string Comment { get; set; }

        /// <summary>
        /// Gets or Sets TurnOverDateYear1
        /// </summary>
        [DataMember(Name="turnOverDateYear1", EmitDefaultValue=true)]
        public string TurnOverDateYear1 { get; set; }

        /// <summary>
        /// Gets or Sets TurnOverDateYear2
        /// </summary>
        [DataMember(Name="turnOverDateYear2", EmitDefaultValue=true)]
        public string TurnOverDateYear2 { get; set; }

        /// <summary>
        /// Gets or Sets TurnOverAmount1
        /// </summary>
        [DataMember(Name="turnOverAmount1", EmitDefaultValue=true)]
        public string TurnOverAmount1 { get; set; }

        /// <summary>
        /// Gets or Sets TurnOverAmount2
        /// </summary>
        [DataMember(Name="turnOverAmount2", EmitDefaultValue=true)]
        public string TurnOverAmount2 { get; set; }

        /// <summary>
        /// Gets or Sets TurnOverYear1Type
        /// </summary>
        [DataMember(Name="turnOverYear1Type", EmitDefaultValue=true)]
        public string TurnOverYear1Type { get; set; }

        /// <summary>
        /// Gets or Sets TurnOverYear2Type
        /// </summary>
        [DataMember(Name="turnOverYear2Type", EmitDefaultValue=true)]
        public string TurnOverYear2Type { get; set; }

        /// <summary>
        /// Gets or Sets BalanceSheetDate
        /// </summary>
        [DataMember(Name="balanceSheetDate", EmitDefaultValue=true)]
        public string BalanceSheetDate { get; set; }

        /// <summary>
        /// Gets or Sets BalanceSheetUnit
        /// </summary>
        [DataMember(Name="balanceSheetUnit", EmitDefaultValue=true)]
        public string BalanceSheetUnit { get; set; }

        /// <summary>
        /// Gets or Sets BalanceSheetType
        /// </summary>
        [DataMember(Name="balanceSheetType", EmitDefaultValue=true)]
        public string BalanceSheetType { get; set; }

        /// <summary>
        /// Gets or Sets FinYearMonth
        /// </summary>
        [DataMember(Name="finYearMonth", EmitDefaultValue=true)]
        public string FinYearMonth { get; set; }

        /// <summary>
        /// Gets or Sets DrCededInd
        /// </summary>
        [DataMember(Name="drCededInd", EmitDefaultValue=true)]
        public string DrCededInd { get; set; }

        /// <summary>
        /// Gets or Sets DrCededName
        /// </summary>
        [DataMember(Name="drCededName", EmitDefaultValue=true)]
        public string DrCededName { get; set; }

        /// <summary>
        /// Gets or Sets DrFactored
        /// </summary>
        [DataMember(Name="drFactored", EmitDefaultValue=true)]
        public string DrFactored { get; set; }

        /// <summary>
        /// Gets or Sets DrFactoredName
        /// </summary>
        [DataMember(Name="drFactoredName", EmitDefaultValue=true)]
        public string DrFactoredName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialFinanceHeader {\n");
            sb.Append("  MajorProduct: ").Append(MajorProduct).Append("\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  Source: ").Append(Source).Append("\n");
            sb.Append("  SourceTitle: ").Append(SourceTitle).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  TurnOverDateYear1: ").Append(TurnOverDateYear1).Append("\n");
            sb.Append("  TurnOverDateYear2: ").Append(TurnOverDateYear2).Append("\n");
            sb.Append("  TurnOverAmount1: ").Append(TurnOverAmount1).Append("\n");
            sb.Append("  TurnOverAmount2: ").Append(TurnOverAmount2).Append("\n");
            sb.Append("  TurnOverYear1Type: ").Append(TurnOverYear1Type).Append("\n");
            sb.Append("  TurnOverYear2Type: ").Append(TurnOverYear2Type).Append("\n");
            sb.Append("  BalanceSheetDate: ").Append(BalanceSheetDate).Append("\n");
            sb.Append("  BalanceSheetUnit: ").Append(BalanceSheetUnit).Append("\n");
            sb.Append("  BalanceSheetType: ").Append(BalanceSheetType).Append("\n");
            sb.Append("  FinYearMonth: ").Append(FinYearMonth).Append("\n");
            sb.Append("  DrCededInd: ").Append(DrCededInd).Append("\n");
            sb.Append("  DrCededName: ").Append(DrCededName).Append("\n");
            sb.Append("  DrFactored: ").Append(DrFactored).Append("\n");
            sb.Append("  DrFactoredName: ").Append(DrFactoredName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialFinanceHeader);
        }

        /// <summary>
        /// Returns true if TransunionCommercialFinanceHeader instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialFinanceHeader to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialFinanceHeader input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MajorProduct == input.MajorProduct ||
                    (this.MajorProduct != null &&
                    this.MajorProduct.Equals(input.MajorProduct))
                ) && 
                (
                    this.Date == input.Date ||
                    (this.Date != null &&
                    this.Date.Equals(input.Date))
                ) && 
                (
                    this.Source == input.Source ||
                    (this.Source != null &&
                    this.Source.Equals(input.Source))
                ) && 
                (
                    this.SourceTitle == input.SourceTitle ||
                    (this.SourceTitle != null &&
                    this.SourceTitle.Equals(input.SourceTitle))
                ) && 
                (
                    this.Comment == input.Comment ||
                    (this.Comment != null &&
                    this.Comment.Equals(input.Comment))
                ) && 
                (
                    this.TurnOverDateYear1 == input.TurnOverDateYear1 ||
                    (this.TurnOverDateYear1 != null &&
                    this.TurnOverDateYear1.Equals(input.TurnOverDateYear1))
                ) && 
                (
                    this.TurnOverDateYear2 == input.TurnOverDateYear2 ||
                    (this.TurnOverDateYear2 != null &&
                    this.TurnOverDateYear2.Equals(input.TurnOverDateYear2))
                ) && 
                (
                    this.TurnOverAmount1 == input.TurnOverAmount1 ||
                    (this.TurnOverAmount1 != null &&
                    this.TurnOverAmount1.Equals(input.TurnOverAmount1))
                ) && 
                (
                    this.TurnOverAmount2 == input.TurnOverAmount2 ||
                    (this.TurnOverAmount2 != null &&
                    this.TurnOverAmount2.Equals(input.TurnOverAmount2))
                ) && 
                (
                    this.TurnOverYear1Type == input.TurnOverYear1Type ||
                    (this.TurnOverYear1Type != null &&
                    this.TurnOverYear1Type.Equals(input.TurnOverYear1Type))
                ) && 
                (
                    this.TurnOverYear2Type == input.TurnOverYear2Type ||
                    (this.TurnOverYear2Type != null &&
                    this.TurnOverYear2Type.Equals(input.TurnOverYear2Type))
                ) && 
                (
                    this.BalanceSheetDate == input.BalanceSheetDate ||
                    (this.BalanceSheetDate != null &&
                    this.BalanceSheetDate.Equals(input.BalanceSheetDate))
                ) && 
                (
                    this.BalanceSheetUnit == input.BalanceSheetUnit ||
                    (this.BalanceSheetUnit != null &&
                    this.BalanceSheetUnit.Equals(input.BalanceSheetUnit))
                ) && 
                (
                    this.BalanceSheetType == input.BalanceSheetType ||
                    (this.BalanceSheetType != null &&
                    this.BalanceSheetType.Equals(input.BalanceSheetType))
                ) && 
                (
                    this.FinYearMonth == input.FinYearMonth ||
                    (this.FinYearMonth != null &&
                    this.FinYearMonth.Equals(input.FinYearMonth))
                ) && 
                (
                    this.DrCededInd == input.DrCededInd ||
                    (this.DrCededInd != null &&
                    this.DrCededInd.Equals(input.DrCededInd))
                ) && 
                (
                    this.DrCededName == input.DrCededName ||
                    (this.DrCededName != null &&
                    this.DrCededName.Equals(input.DrCededName))
                ) && 
                (
                    this.DrFactored == input.DrFactored ||
                    (this.DrFactored != null &&
                    this.DrFactored.Equals(input.DrFactored))
                ) && 
                (
                    this.DrFactoredName == input.DrFactoredName ||
                    (this.DrFactoredName != null &&
                    this.DrFactoredName.Equals(input.DrFactoredName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MajorProduct != null)
                    hashCode = hashCode * 59 + this.MajorProduct.GetHashCode();
                if (this.Date != null)
                    hashCode = hashCode * 59 + this.Date.GetHashCode();
                if (this.Source != null)
                    hashCode = hashCode * 59 + this.Source.GetHashCode();
                if (this.SourceTitle != null)
                    hashCode = hashCode * 59 + this.SourceTitle.GetHashCode();
                if (this.Comment != null)
                    hashCode = hashCode * 59 + this.Comment.GetHashCode();
                if (this.TurnOverDateYear1 != null)
                    hashCode = hashCode * 59 + this.TurnOverDateYear1.GetHashCode();
                if (this.TurnOverDateYear2 != null)
                    hashCode = hashCode * 59 + this.TurnOverDateYear2.GetHashCode();
                if (this.TurnOverAmount1 != null)
                    hashCode = hashCode * 59 + this.TurnOverAmount1.GetHashCode();
                if (this.TurnOverAmount2 != null)
                    hashCode = hashCode * 59 + this.TurnOverAmount2.GetHashCode();
                if (this.TurnOverYear1Type != null)
                    hashCode = hashCode * 59 + this.TurnOverYear1Type.GetHashCode();
                if (this.TurnOverYear2Type != null)
                    hashCode = hashCode * 59 + this.TurnOverYear2Type.GetHashCode();
                if (this.BalanceSheetDate != null)
                    hashCode = hashCode * 59 + this.BalanceSheetDate.GetHashCode();
                if (this.BalanceSheetUnit != null)
                    hashCode = hashCode * 59 + this.BalanceSheetUnit.GetHashCode();
                if (this.BalanceSheetType != null)
                    hashCode = hashCode * 59 + this.BalanceSheetType.GetHashCode();
                if (this.FinYearMonth != null)
                    hashCode = hashCode * 59 + this.FinYearMonth.GetHashCode();
                if (this.DrCededInd != null)
                    hashCode = hashCode * 59 + this.DrCededInd.GetHashCode();
                if (this.DrCededName != null)
                    hashCode = hashCode * 59 + this.DrCededName.GetHashCode();
                if (this.DrFactored != null)
                    hashCode = hashCode * 59 + this.DrFactored.GetHashCode();
                if (this.DrFactoredName != null)
                    hashCode = hashCode * 59 + this.DrFactoredName.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
