/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialConsumerNotarialBonds
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialConsumerNotarialBonds :  IEquatable<TransunionCommercialConsumerNotarialBonds>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialConsumerNotarialBonds" /> class.
        /// </summary>
        /// <param name="majorProduct">majorProduct.</param>
        /// <param name="consumerNumber">consumerNumber.</param>
        /// <param name="defendantName">defendantName.</param>
        /// <param name="defendantNumber">defendantNumber.</param>
        /// <param name="address">address.</param>
        /// <param name="dateOfBirth">dateOfBirth.</param>
        /// <param name="idNo">idNo.</param>
        /// <param name="plaintiff">plaintiff.</param>
        /// <param name="judgementCode">judgementCode.</param>
        /// <param name="judgementDesc">judgementDesc.</param>
        /// <param name="courtType">courtType.</param>
        /// <param name="courtTypeDesc">courtTypeDesc.</param>
        /// <param name="courtCode">courtCode.</param>
        /// <param name="courtDesc">courtDesc.</param>
        /// <param name="caseNo">caseNo.</param>
        /// <param name="notarialDate">notarialDate.</param>
        /// <param name="captureDate">captureDate.</param>
        /// <param name="amount">amount.</param>
        /// <param name="bondPerc">bondPerc.</param>
        /// <param name="masterNo">masterNo.</param>
        /// <param name="remarks">remarks.</param>
        /// <param name="transType">transType.</param>
        /// <param name="message">message.</param>
        public TransunionCommercialConsumerNotarialBonds(string majorProduct = default(string), string consumerNumber = default(string), string defendantName = default(string), string defendantNumber = default(string), string address = default(string), string dateOfBirth = default(string), string idNo = default(string), string plaintiff = default(string), string judgementCode = default(string), string judgementDesc = default(string), string courtType = default(string), string courtTypeDesc = default(string), string courtCode = default(string), string courtDesc = default(string), string caseNo = default(string), string notarialDate = default(string), string captureDate = default(string), string amount = default(string), string bondPerc = default(string), string masterNo = default(string), string remarks = default(string), string transType = default(string), string message = default(string))
        {
            this.MajorProduct = majorProduct;
            this.ConsumerNumber = consumerNumber;
            this.DefendantName = defendantName;
            this.DefendantNumber = defendantNumber;
            this.Address = address;
            this.DateOfBirth = dateOfBirth;
            this.IdNo = idNo;
            this.Plaintiff = plaintiff;
            this.JudgementCode = judgementCode;
            this.JudgementDesc = judgementDesc;
            this.CourtType = courtType;
            this.CourtTypeDesc = courtTypeDesc;
            this.CourtCode = courtCode;
            this.CourtDesc = courtDesc;
            this.CaseNo = caseNo;
            this.NotarialDate = notarialDate;
            this.CaptureDate = captureDate;
            this.Amount = amount;
            this.BondPerc = bondPerc;
            this.MasterNo = masterNo;
            this.Remarks = remarks;
            this.TransType = transType;
            this.Message = message;
            this.MajorProduct = majorProduct;
            this.ConsumerNumber = consumerNumber;
            this.DefendantName = defendantName;
            this.DefendantNumber = defendantNumber;
            this.Address = address;
            this.DateOfBirth = dateOfBirth;
            this.IdNo = idNo;
            this.Plaintiff = plaintiff;
            this.JudgementCode = judgementCode;
            this.JudgementDesc = judgementDesc;
            this.CourtType = courtType;
            this.CourtTypeDesc = courtTypeDesc;
            this.CourtCode = courtCode;
            this.CourtDesc = courtDesc;
            this.CaseNo = caseNo;
            this.NotarialDate = notarialDate;
            this.CaptureDate = captureDate;
            this.Amount = amount;
            this.BondPerc = bondPerc;
            this.MasterNo = masterNo;
            this.Remarks = remarks;
            this.TransType = transType;
            this.Message = message;
        }

        /// <summary>
        /// Gets or Sets MajorProduct
        /// </summary>
        [DataMember(Name="majorProduct", EmitDefaultValue=true)]
        public string MajorProduct { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerNumber
        /// </summary>
        [DataMember(Name="consumerNumber", EmitDefaultValue=true)]
        public string ConsumerNumber { get; set; }

        /// <summary>
        /// Gets or Sets DefendantName
        /// </summary>
        [DataMember(Name="defendantName", EmitDefaultValue=true)]
        public string DefendantName { get; set; }

        /// <summary>
        /// Gets or Sets DefendantNumber
        /// </summary>
        [DataMember(Name="defendantNumber", EmitDefaultValue=true)]
        public string DefendantNumber { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=true)]
        public string Address { get; set; }

        /// <summary>
        /// Gets or Sets DateOfBirth
        /// </summary>
        [DataMember(Name="dateOfBirth", EmitDefaultValue=true)]
        public string DateOfBirth { get; set; }

        /// <summary>
        /// Gets or Sets IdNo
        /// </summary>
        [DataMember(Name="idNo", EmitDefaultValue=true)]
        public string IdNo { get; set; }

        /// <summary>
        /// Gets or Sets Plaintiff
        /// </summary>
        [DataMember(Name="plaintiff", EmitDefaultValue=true)]
        public string Plaintiff { get; set; }

        /// <summary>
        /// Gets or Sets JudgementCode
        /// </summary>
        [DataMember(Name="judgementCode", EmitDefaultValue=true)]
        public string JudgementCode { get; set; }

        /// <summary>
        /// Gets or Sets JudgementDesc
        /// </summary>
        [DataMember(Name="judgementDesc", EmitDefaultValue=true)]
        public string JudgementDesc { get; set; }

        /// <summary>
        /// Gets or Sets CourtType
        /// </summary>
        [DataMember(Name="courtType", EmitDefaultValue=true)]
        public string CourtType { get; set; }

        /// <summary>
        /// Gets or Sets CourtTypeDesc
        /// </summary>
        [DataMember(Name="courtTypeDesc", EmitDefaultValue=true)]
        public string CourtTypeDesc { get; set; }

        /// <summary>
        /// Gets or Sets CourtCode
        /// </summary>
        [DataMember(Name="courtCode", EmitDefaultValue=true)]
        public string CourtCode { get; set; }

        /// <summary>
        /// Gets or Sets CourtDesc
        /// </summary>
        [DataMember(Name="courtDesc", EmitDefaultValue=true)]
        public string CourtDesc { get; set; }

        /// <summary>
        /// Gets or Sets CaseNo
        /// </summary>
        [DataMember(Name="caseNo", EmitDefaultValue=true)]
        public string CaseNo { get; set; }

        /// <summary>
        /// Gets or Sets NotarialDate
        /// </summary>
        [DataMember(Name="notarialDate", EmitDefaultValue=true)]
        public string NotarialDate { get; set; }

        /// <summary>
        /// Gets or Sets CaptureDate
        /// </summary>
        [DataMember(Name="captureDate", EmitDefaultValue=true)]
        public string CaptureDate { get; set; }

        /// <summary>
        /// Gets or Sets Amount
        /// </summary>
        [DataMember(Name="amount", EmitDefaultValue=true)]
        public string Amount { get; set; }

        /// <summary>
        /// Gets or Sets BondPerc
        /// </summary>
        [DataMember(Name="bondPerc", EmitDefaultValue=true)]
        public string BondPerc { get; set; }

        /// <summary>
        /// Gets or Sets MasterNo
        /// </summary>
        [DataMember(Name="masterNo", EmitDefaultValue=true)]
        public string MasterNo { get; set; }

        /// <summary>
        /// Gets or Sets Remarks
        /// </summary>
        [DataMember(Name="remarks", EmitDefaultValue=true)]
        public string Remarks { get; set; }

        /// <summary>
        /// Gets or Sets TransType
        /// </summary>
        [DataMember(Name="transType", EmitDefaultValue=true)]
        public string TransType { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name="message", EmitDefaultValue=true)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialConsumerNotarialBonds {\n");
            sb.Append("  MajorProduct: ").Append(MajorProduct).Append("\n");
            sb.Append("  ConsumerNumber: ").Append(ConsumerNumber).Append("\n");
            sb.Append("  DefendantName: ").Append(DefendantName).Append("\n");
            sb.Append("  DefendantNumber: ").Append(DefendantNumber).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  DateOfBirth: ").Append(DateOfBirth).Append("\n");
            sb.Append("  IdNo: ").Append(IdNo).Append("\n");
            sb.Append("  Plaintiff: ").Append(Plaintiff).Append("\n");
            sb.Append("  JudgementCode: ").Append(JudgementCode).Append("\n");
            sb.Append("  JudgementDesc: ").Append(JudgementDesc).Append("\n");
            sb.Append("  CourtType: ").Append(CourtType).Append("\n");
            sb.Append("  CourtTypeDesc: ").Append(CourtTypeDesc).Append("\n");
            sb.Append("  CourtCode: ").Append(CourtCode).Append("\n");
            sb.Append("  CourtDesc: ").Append(CourtDesc).Append("\n");
            sb.Append("  CaseNo: ").Append(CaseNo).Append("\n");
            sb.Append("  NotarialDate: ").Append(NotarialDate).Append("\n");
            sb.Append("  CaptureDate: ").Append(CaptureDate).Append("\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  BondPerc: ").Append(BondPerc).Append("\n");
            sb.Append("  MasterNo: ").Append(MasterNo).Append("\n");
            sb.Append("  Remarks: ").Append(Remarks).Append("\n");
            sb.Append("  TransType: ").Append(TransType).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialConsumerNotarialBonds);
        }

        /// <summary>
        /// Returns true if TransunionCommercialConsumerNotarialBonds instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialConsumerNotarialBonds to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialConsumerNotarialBonds input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MajorProduct == input.MajorProduct ||
                    (this.MajorProduct != null &&
                    this.MajorProduct.Equals(input.MajorProduct))
                ) && 
                (
                    this.ConsumerNumber == input.ConsumerNumber ||
                    (this.ConsumerNumber != null &&
                    this.ConsumerNumber.Equals(input.ConsumerNumber))
                ) && 
                (
                    this.DefendantName == input.DefendantName ||
                    (this.DefendantName != null &&
                    this.DefendantName.Equals(input.DefendantName))
                ) && 
                (
                    this.DefendantNumber == input.DefendantNumber ||
                    (this.DefendantNumber != null &&
                    this.DefendantNumber.Equals(input.DefendantNumber))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.DateOfBirth == input.DateOfBirth ||
                    (this.DateOfBirth != null &&
                    this.DateOfBirth.Equals(input.DateOfBirth))
                ) && 
                (
                    this.IdNo == input.IdNo ||
                    (this.IdNo != null &&
                    this.IdNo.Equals(input.IdNo))
                ) && 
                (
                    this.Plaintiff == input.Plaintiff ||
                    (this.Plaintiff != null &&
                    this.Plaintiff.Equals(input.Plaintiff))
                ) && 
                (
                    this.JudgementCode == input.JudgementCode ||
                    (this.JudgementCode != null &&
                    this.JudgementCode.Equals(input.JudgementCode))
                ) && 
                (
                    this.JudgementDesc == input.JudgementDesc ||
                    (this.JudgementDesc != null &&
                    this.JudgementDesc.Equals(input.JudgementDesc))
                ) && 
                (
                    this.CourtType == input.CourtType ||
                    (this.CourtType != null &&
                    this.CourtType.Equals(input.CourtType))
                ) && 
                (
                    this.CourtTypeDesc == input.CourtTypeDesc ||
                    (this.CourtTypeDesc != null &&
                    this.CourtTypeDesc.Equals(input.CourtTypeDesc))
                ) && 
                (
                    this.CourtCode == input.CourtCode ||
                    (this.CourtCode != null &&
                    this.CourtCode.Equals(input.CourtCode))
                ) && 
                (
                    this.CourtDesc == input.CourtDesc ||
                    (this.CourtDesc != null &&
                    this.CourtDesc.Equals(input.CourtDesc))
                ) && 
                (
                    this.CaseNo == input.CaseNo ||
                    (this.CaseNo != null &&
                    this.CaseNo.Equals(input.CaseNo))
                ) && 
                (
                    this.NotarialDate == input.NotarialDate ||
                    (this.NotarialDate != null &&
                    this.NotarialDate.Equals(input.NotarialDate))
                ) && 
                (
                    this.CaptureDate == input.CaptureDate ||
                    (this.CaptureDate != null &&
                    this.CaptureDate.Equals(input.CaptureDate))
                ) && 
                (
                    this.Amount == input.Amount ||
                    (this.Amount != null &&
                    this.Amount.Equals(input.Amount))
                ) && 
                (
                    this.BondPerc == input.BondPerc ||
                    (this.BondPerc != null &&
                    this.BondPerc.Equals(input.BondPerc))
                ) && 
                (
                    this.MasterNo == input.MasterNo ||
                    (this.MasterNo != null &&
                    this.MasterNo.Equals(input.MasterNo))
                ) && 
                (
                    this.Remarks == input.Remarks ||
                    (this.Remarks != null &&
                    this.Remarks.Equals(input.Remarks))
                ) && 
                (
                    this.TransType == input.TransType ||
                    (this.TransType != null &&
                    this.TransType.Equals(input.TransType))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MajorProduct != null)
                    hashCode = hashCode * 59 + this.MajorProduct.GetHashCode();
                if (this.ConsumerNumber != null)
                    hashCode = hashCode * 59 + this.ConsumerNumber.GetHashCode();
                if (this.DefendantName != null)
                    hashCode = hashCode * 59 + this.DefendantName.GetHashCode();
                if (this.DefendantNumber != null)
                    hashCode = hashCode * 59 + this.DefendantNumber.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.DateOfBirth != null)
                    hashCode = hashCode * 59 + this.DateOfBirth.GetHashCode();
                if (this.IdNo != null)
                    hashCode = hashCode * 59 + this.IdNo.GetHashCode();
                if (this.Plaintiff != null)
                    hashCode = hashCode * 59 + this.Plaintiff.GetHashCode();
                if (this.JudgementCode != null)
                    hashCode = hashCode * 59 + this.JudgementCode.GetHashCode();
                if (this.JudgementDesc != null)
                    hashCode = hashCode * 59 + this.JudgementDesc.GetHashCode();
                if (this.CourtType != null)
                    hashCode = hashCode * 59 + this.CourtType.GetHashCode();
                if (this.CourtTypeDesc != null)
                    hashCode = hashCode * 59 + this.CourtTypeDesc.GetHashCode();
                if (this.CourtCode != null)
                    hashCode = hashCode * 59 + this.CourtCode.GetHashCode();
                if (this.CourtDesc != null)
                    hashCode = hashCode * 59 + this.CourtDesc.GetHashCode();
                if (this.CaseNo != null)
                    hashCode = hashCode * 59 + this.CaseNo.GetHashCode();
                if (this.NotarialDate != null)
                    hashCode = hashCode * 59 + this.NotarialDate.GetHashCode();
                if (this.CaptureDate != null)
                    hashCode = hashCode * 59 + this.CaptureDate.GetHashCode();
                if (this.Amount != null)
                    hashCode = hashCode * 59 + this.Amount.GetHashCode();
                if (this.BondPerc != null)
                    hashCode = hashCode * 59 + this.BondPerc.GetHashCode();
                if (this.MasterNo != null)
                    hashCode = hashCode * 59 + this.MasterNo.GetHashCode();
                if (this.Remarks != null)
                    hashCode = hashCode * 59 + this.Remarks.GetHashCode();
                if (this.TransType != null)
                    hashCode = hashCode * 59 + this.TransType.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
