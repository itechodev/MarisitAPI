/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// XdsConsumerTelephoneHistoryLite
    /// </summary>
    [DataContract]
    public partial class XdsConsumerTelephoneHistoryLite :  IEquatable<XdsConsumerTelephoneHistoryLite>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XdsConsumerTelephoneHistoryLite" /> class.
        /// </summary>
        /// <param name="displayText">displayText.</param>
        /// <param name="consumerTelephoneID">consumerTelephoneID.</param>
        /// <param name="telephoneType">telephoneType.</param>
        /// <param name="telephoneTypeInd">telephoneTypeInd.</param>
        /// <param name="telCode">telCode.</param>
        /// <param name="telNo">telNo.</param>
        /// <param name="telephoneNo">telephoneNo.</param>
        /// <param name="emailAddress">emailAddress.</param>
        /// <param name="lastUpdatedDate">lastUpdatedDate.</param>
        /// <param name="firstReportedDate">firstReportedDate.</param>
        public XdsConsumerTelephoneHistoryLite(string displayText = default(string), string consumerTelephoneID = default(string), string telephoneType = default(string), string telephoneTypeInd = default(string), string telCode = default(string), string telNo = default(string), string telephoneNo = default(string), string emailAddress = default(string), string lastUpdatedDate = default(string), string firstReportedDate = default(string))
        {
            this.DisplayText = displayText;
            this.ConsumerTelephoneID = consumerTelephoneID;
            this.TelephoneType = telephoneType;
            this.TelephoneTypeInd = telephoneTypeInd;
            this.TelCode = telCode;
            this.TelNo = telNo;
            this.TelephoneNo = telephoneNo;
            this.EmailAddress = emailAddress;
            this.LastUpdatedDate = lastUpdatedDate;
            this.FirstReportedDate = firstReportedDate;
            this.DisplayText = displayText;
            this.ConsumerTelephoneID = consumerTelephoneID;
            this.TelephoneType = telephoneType;
            this.TelephoneTypeInd = telephoneTypeInd;
            this.TelCode = telCode;
            this.TelNo = telNo;
            this.TelephoneNo = telephoneNo;
            this.EmailAddress = emailAddress;
            this.LastUpdatedDate = lastUpdatedDate;
            this.FirstReportedDate = firstReportedDate;
        }

        /// <summary>
        /// Gets or Sets DisplayText
        /// </summary>
        [DataMember(Name="displayText", EmitDefaultValue=true)]
        public string DisplayText { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerTelephoneID
        /// </summary>
        [DataMember(Name="consumerTelephoneID", EmitDefaultValue=true)]
        public string ConsumerTelephoneID { get; set; }

        /// <summary>
        /// Gets or Sets TelephoneType
        /// </summary>
        [DataMember(Name="telephoneType", EmitDefaultValue=true)]
        public string TelephoneType { get; set; }

        /// <summary>
        /// Gets or Sets TelephoneTypeInd
        /// </summary>
        [DataMember(Name="telephoneTypeInd", EmitDefaultValue=true)]
        public string TelephoneTypeInd { get; set; }

        /// <summary>
        /// Gets or Sets TelCode
        /// </summary>
        [DataMember(Name="telCode", EmitDefaultValue=true)]
        public string TelCode { get; set; }

        /// <summary>
        /// Gets or Sets TelNo
        /// </summary>
        [DataMember(Name="telNo", EmitDefaultValue=true)]
        public string TelNo { get; set; }

        /// <summary>
        /// Gets or Sets TelephoneNo
        /// </summary>
        [DataMember(Name="telephoneNo", EmitDefaultValue=true)]
        public string TelephoneNo { get; set; }

        /// <summary>
        /// Gets or Sets EmailAddress
        /// </summary>
        [DataMember(Name="emailAddress", EmitDefaultValue=true)]
        public string EmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdatedDate
        /// </summary>
        [DataMember(Name="lastUpdatedDate", EmitDefaultValue=true)]
        public string LastUpdatedDate { get; set; }

        /// <summary>
        /// Gets or Sets FirstReportedDate
        /// </summary>
        [DataMember(Name="firstReportedDate", EmitDefaultValue=true)]
        public string FirstReportedDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class XdsConsumerTelephoneHistoryLite {\n");
            sb.Append("  DisplayText: ").Append(DisplayText).Append("\n");
            sb.Append("  ConsumerTelephoneID: ").Append(ConsumerTelephoneID).Append("\n");
            sb.Append("  TelephoneType: ").Append(TelephoneType).Append("\n");
            sb.Append("  TelephoneTypeInd: ").Append(TelephoneTypeInd).Append("\n");
            sb.Append("  TelCode: ").Append(TelCode).Append("\n");
            sb.Append("  TelNo: ").Append(TelNo).Append("\n");
            sb.Append("  TelephoneNo: ").Append(TelephoneNo).Append("\n");
            sb.Append("  EmailAddress: ").Append(EmailAddress).Append("\n");
            sb.Append("  LastUpdatedDate: ").Append(LastUpdatedDate).Append("\n");
            sb.Append("  FirstReportedDate: ").Append(FirstReportedDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as XdsConsumerTelephoneHistoryLite);
        }

        /// <summary>
        /// Returns true if XdsConsumerTelephoneHistoryLite instances are equal
        /// </summary>
        /// <param name="input">Instance of XdsConsumerTelephoneHistoryLite to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(XdsConsumerTelephoneHistoryLite input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DisplayText == input.DisplayText ||
                    (this.DisplayText != null &&
                    this.DisplayText.Equals(input.DisplayText))
                ) && 
                (
                    this.ConsumerTelephoneID == input.ConsumerTelephoneID ||
                    (this.ConsumerTelephoneID != null &&
                    this.ConsumerTelephoneID.Equals(input.ConsumerTelephoneID))
                ) && 
                (
                    this.TelephoneType == input.TelephoneType ||
                    (this.TelephoneType != null &&
                    this.TelephoneType.Equals(input.TelephoneType))
                ) && 
                (
                    this.TelephoneTypeInd == input.TelephoneTypeInd ||
                    (this.TelephoneTypeInd != null &&
                    this.TelephoneTypeInd.Equals(input.TelephoneTypeInd))
                ) && 
                (
                    this.TelCode == input.TelCode ||
                    (this.TelCode != null &&
                    this.TelCode.Equals(input.TelCode))
                ) && 
                (
                    this.TelNo == input.TelNo ||
                    (this.TelNo != null &&
                    this.TelNo.Equals(input.TelNo))
                ) && 
                (
                    this.TelephoneNo == input.TelephoneNo ||
                    (this.TelephoneNo != null &&
                    this.TelephoneNo.Equals(input.TelephoneNo))
                ) && 
                (
                    this.EmailAddress == input.EmailAddress ||
                    (this.EmailAddress != null &&
                    this.EmailAddress.Equals(input.EmailAddress))
                ) && 
                (
                    this.LastUpdatedDate == input.LastUpdatedDate ||
                    (this.LastUpdatedDate != null &&
                    this.LastUpdatedDate.Equals(input.LastUpdatedDate))
                ) && 
                (
                    this.FirstReportedDate == input.FirstReportedDate ||
                    (this.FirstReportedDate != null &&
                    this.FirstReportedDate.Equals(input.FirstReportedDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DisplayText != null)
                    hashCode = hashCode * 59 + this.DisplayText.GetHashCode();
                if (this.ConsumerTelephoneID != null)
                    hashCode = hashCode * 59 + this.ConsumerTelephoneID.GetHashCode();
                if (this.TelephoneType != null)
                    hashCode = hashCode * 59 + this.TelephoneType.GetHashCode();
                if (this.TelephoneTypeInd != null)
                    hashCode = hashCode * 59 + this.TelephoneTypeInd.GetHashCode();
                if (this.TelCode != null)
                    hashCode = hashCode * 59 + this.TelCode.GetHashCode();
                if (this.TelNo != null)
                    hashCode = hashCode * 59 + this.TelNo.GetHashCode();
                if (this.TelephoneNo != null)
                    hashCode = hashCode * 59 + this.TelephoneNo.GetHashCode();
                if (this.EmailAddress != null)
                    hashCode = hashCode * 59 + this.EmailAddress.GetHashCode();
                if (this.LastUpdatedDate != null)
                    hashCode = hashCode * 59 + this.LastUpdatedDate.GetHashCode();
                if (this.FirstReportedDate != null)
                    hashCode = hashCode * 59 + this.FirstReportedDate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
