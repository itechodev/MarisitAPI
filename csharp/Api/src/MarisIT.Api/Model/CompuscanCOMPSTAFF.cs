/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// CompuscanCOMPSTAFF
    /// </summary>
    [DataContract]
    public partial class CompuscanCOMPSTAFF :  IEquatable<CompuscanCOMPSTAFF>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompuscanCOMPSTAFF" /> class.
        /// </summary>
        /// <param name="aveonsite">aveonsite.</param>
        /// <param name="aveonsiteslry">aveonsiteslry.</param>
        /// <param name="casual">casual.</param>
        /// <param name="comments">comments.</param>
        /// <param name="createdby">createdby.</param>
        /// <param name="createddttm">createddttm.</param>
        /// <param name="modifiedby">modifiedby.</param>
        /// <param name="modifieddttm">modifieddttm.</param>
        /// <param name="permanent">permanent.</param>
        /// <param name="totalstaff">totalstaff.</param>
        public CompuscanCOMPSTAFF(string aveonsite = default(string), string aveonsiteslry = default(string), string casual = default(string), string comments = default(string), string createdby = default(string), string createddttm = default(string), string modifiedby = default(string), string modifieddttm = default(string), string permanent = default(string), string totalstaff = default(string))
        {
            this.Aveonsite = aveonsite;
            this.Aveonsiteslry = aveonsiteslry;
            this.Casual = casual;
            this.Comments = comments;
            this.Createdby = createdby;
            this.Createddttm = createddttm;
            this.Modifiedby = modifiedby;
            this.Modifieddttm = modifieddttm;
            this.Permanent = permanent;
            this.Totalstaff = totalstaff;
            this.Aveonsite = aveonsite;
            this.Aveonsiteslry = aveonsiteslry;
            this.Casual = casual;
            this.Comments = comments;
            this.Createdby = createdby;
            this.Createddttm = createddttm;
            this.Modifiedby = modifiedby;
            this.Modifieddttm = modifieddttm;
            this.Permanent = permanent;
            this.Totalstaff = totalstaff;
        }

        /// <summary>
        /// Gets or Sets Aveonsite
        /// </summary>
        [DataMember(Name="aveonsite", EmitDefaultValue=true)]
        public string Aveonsite { get; set; }

        /// <summary>
        /// Gets or Sets Aveonsiteslry
        /// </summary>
        [DataMember(Name="aveonsiteslry", EmitDefaultValue=true)]
        public string Aveonsiteslry { get; set; }

        /// <summary>
        /// Gets or Sets Casual
        /// </summary>
        [DataMember(Name="casual", EmitDefaultValue=true)]
        public string Casual { get; set; }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name="comments", EmitDefaultValue=true)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets Createdby
        /// </summary>
        [DataMember(Name="createdby", EmitDefaultValue=true)]
        public string Createdby { get; set; }

        /// <summary>
        /// Gets or Sets Createddttm
        /// </summary>
        [DataMember(Name="createddttm", EmitDefaultValue=true)]
        public string Createddttm { get; set; }

        /// <summary>
        /// Gets or Sets Modifiedby
        /// </summary>
        [DataMember(Name="modifiedby", EmitDefaultValue=true)]
        public string Modifiedby { get; set; }

        /// <summary>
        /// Gets or Sets Modifieddttm
        /// </summary>
        [DataMember(Name="modifieddttm", EmitDefaultValue=true)]
        public string Modifieddttm { get; set; }

        /// <summary>
        /// Gets or Sets Permanent
        /// </summary>
        [DataMember(Name="permanent", EmitDefaultValue=true)]
        public string Permanent { get; set; }

        /// <summary>
        /// Gets or Sets Totalstaff
        /// </summary>
        [DataMember(Name="totalstaff", EmitDefaultValue=true)]
        public string Totalstaff { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompuscanCOMPSTAFF {\n");
            sb.Append("  Aveonsite: ").Append(Aveonsite).Append("\n");
            sb.Append("  Aveonsiteslry: ").Append(Aveonsiteslry).Append("\n");
            sb.Append("  Casual: ").Append(Casual).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  Createdby: ").Append(Createdby).Append("\n");
            sb.Append("  Createddttm: ").Append(Createddttm).Append("\n");
            sb.Append("  Modifiedby: ").Append(Modifiedby).Append("\n");
            sb.Append("  Modifieddttm: ").Append(Modifieddttm).Append("\n");
            sb.Append("  Permanent: ").Append(Permanent).Append("\n");
            sb.Append("  Totalstaff: ").Append(Totalstaff).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompuscanCOMPSTAFF);
        }

        /// <summary>
        /// Returns true if CompuscanCOMPSTAFF instances are equal
        /// </summary>
        /// <param name="input">Instance of CompuscanCOMPSTAFF to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompuscanCOMPSTAFF input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Aveonsite == input.Aveonsite ||
                    (this.Aveonsite != null &&
                    this.Aveonsite.Equals(input.Aveonsite))
                ) && 
                (
                    this.Aveonsiteslry == input.Aveonsiteslry ||
                    (this.Aveonsiteslry != null &&
                    this.Aveonsiteslry.Equals(input.Aveonsiteslry))
                ) && 
                (
                    this.Casual == input.Casual ||
                    (this.Casual != null &&
                    this.Casual.Equals(input.Casual))
                ) && 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.Createdby == input.Createdby ||
                    (this.Createdby != null &&
                    this.Createdby.Equals(input.Createdby))
                ) && 
                (
                    this.Createddttm == input.Createddttm ||
                    (this.Createddttm != null &&
                    this.Createddttm.Equals(input.Createddttm))
                ) && 
                (
                    this.Modifiedby == input.Modifiedby ||
                    (this.Modifiedby != null &&
                    this.Modifiedby.Equals(input.Modifiedby))
                ) && 
                (
                    this.Modifieddttm == input.Modifieddttm ||
                    (this.Modifieddttm != null &&
                    this.Modifieddttm.Equals(input.Modifieddttm))
                ) && 
                (
                    this.Permanent == input.Permanent ||
                    (this.Permanent != null &&
                    this.Permanent.Equals(input.Permanent))
                ) && 
                (
                    this.Totalstaff == input.Totalstaff ||
                    (this.Totalstaff != null &&
                    this.Totalstaff.Equals(input.Totalstaff))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Aveonsite != null)
                    hashCode = hashCode * 59 + this.Aveonsite.GetHashCode();
                if (this.Aveonsiteslry != null)
                    hashCode = hashCode * 59 + this.Aveonsiteslry.GetHashCode();
                if (this.Casual != null)
                    hashCode = hashCode * 59 + this.Casual.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.Createdby != null)
                    hashCode = hashCode * 59 + this.Createdby.GetHashCode();
                if (this.Createddttm != null)
                    hashCode = hashCode * 59 + this.Createddttm.GetHashCode();
                if (this.Modifiedby != null)
                    hashCode = hashCode * 59 + this.Modifiedby.GetHashCode();
                if (this.Modifieddttm != null)
                    hashCode = hashCode * 59 + this.Modifieddttm.GetHashCode();
                if (this.Permanent != null)
                    hashCode = hashCode * 59 + this.Permanent.GetHashCode();
                if (this.Totalstaff != null)
                    hashCode = hashCode * 59 + this.Totalstaff.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
