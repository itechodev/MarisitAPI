/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// WindeedCipcProxiesCompanyReportFlatten
    /// </summary>
    [DataContract]
    public partial class WindeedCipcProxiesCompanyReportFlatten :  IEquatable<WindeedCipcProxiesCompanyReportFlatten>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WindeedCipcProxiesCompanyReportFlatten" /> class.
        /// </summary>
        /// <param name="companyInformation">companyInformation.</param>
        /// <param name="financials">financials.</param>
        public WindeedCipcProxiesCompanyReportFlatten(WindeedCipcCompanyInformation companyInformation = default(WindeedCipcCompanyInformation), WindeedCipcFinancials financials = default(WindeedCipcFinancials))
        {
            this.CompanyInformation = companyInformation;
            this.Financials = financials;
        }

        /// <summary>
        /// Gets or Sets CompanyInformation
        /// </summary>
        [DataMember(Name="companyInformation", EmitDefaultValue=false)]
        public WindeedCipcCompanyInformation CompanyInformation { get; set; }

        /// <summary>
        /// Gets or Sets Financials
        /// </summary>
        [DataMember(Name="financials", EmitDefaultValue=false)]
        public WindeedCipcFinancials Financials { get; set; }

        /// <summary>
        /// Gets or Sets Members
        /// </summary>
        [DataMember(Name="members", EmitDefaultValue=true)]
        public List<WindeedCipcProxiesNaturalOrJuristicMember> Members { get; private set; }

        /// <summary>
        /// Gets or Sets Auditors
        /// </summary>
        [DataMember(Name="auditors", EmitDefaultValue=true)]
        public List<WindeedCipcAuditor> Auditors { get; private set; }

        /// <summary>
        /// Gets or Sets CapitalInformation
        /// </summary>
        [DataMember(Name="capitalInformation", EmitDefaultValue=true)]
        public List<WindeedCipcCapital> CapitalInformation { get; private set; }

        /// <summary>
        /// Gets or Sets HistoryInformation
        /// </summary>
        [DataMember(Name="historyInformation", EmitDefaultValue=true)]
        public List<WindeedCipcHistory> HistoryInformation { get; private set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WindeedCipcProxiesCompanyReportFlatten {\n");
            sb.Append("  CompanyInformation: ").Append(CompanyInformation).Append("\n");
            sb.Append("  Financials: ").Append(Financials).Append("\n");
            sb.Append("  Members: ").Append(Members).Append("\n");
            sb.Append("  Auditors: ").Append(Auditors).Append("\n");
            sb.Append("  CapitalInformation: ").Append(CapitalInformation).Append("\n");
            sb.Append("  HistoryInformation: ").Append(HistoryInformation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WindeedCipcProxiesCompanyReportFlatten);
        }

        /// <summary>
        /// Returns true if WindeedCipcProxiesCompanyReportFlatten instances are equal
        /// </summary>
        /// <param name="input">Instance of WindeedCipcProxiesCompanyReportFlatten to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WindeedCipcProxiesCompanyReportFlatten input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CompanyInformation == input.CompanyInformation ||
                    (this.CompanyInformation != null &&
                    this.CompanyInformation.Equals(input.CompanyInformation))
                ) && 
                (
                    this.Financials == input.Financials ||
                    (this.Financials != null &&
                    this.Financials.Equals(input.Financials))
                ) && 
                (
                    this.Members == input.Members ||
                    this.Members != null &&
                    input.Members != null &&
                    this.Members.SequenceEqual(input.Members)
                ) && 
                (
                    this.Auditors == input.Auditors ||
                    this.Auditors != null &&
                    input.Auditors != null &&
                    this.Auditors.SequenceEqual(input.Auditors)
                ) && 
                (
                    this.CapitalInformation == input.CapitalInformation ||
                    this.CapitalInformation != null &&
                    input.CapitalInformation != null &&
                    this.CapitalInformation.SequenceEqual(input.CapitalInformation)
                ) && 
                (
                    this.HistoryInformation == input.HistoryInformation ||
                    this.HistoryInformation != null &&
                    input.HistoryInformation != null &&
                    this.HistoryInformation.SequenceEqual(input.HistoryInformation)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CompanyInformation != null)
                    hashCode = hashCode * 59 + this.CompanyInformation.GetHashCode();
                if (this.Financials != null)
                    hashCode = hashCode * 59 + this.Financials.GetHashCode();
                if (this.Members != null)
                    hashCode = hashCode * 59 + this.Members.GetHashCode();
                if (this.Auditors != null)
                    hashCode = hashCode * 59 + this.Auditors.GetHashCode();
                if (this.CapitalInformation != null)
                    hashCode = hashCode * 59 + this.CapitalInformation.GetHashCode();
                if (this.HistoryInformation != null)
                    hashCode = hashCode * 59 + this.HistoryInformation.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
