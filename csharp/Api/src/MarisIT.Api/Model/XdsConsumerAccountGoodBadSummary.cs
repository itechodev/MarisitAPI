/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// XdsConsumerAccountGoodBadSummary
    /// </summary>
    [DataContract]
    public partial class XdsConsumerAccountGoodBadSummary :  IEquatable<XdsConsumerAccountGoodBadSummary>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XdsConsumerAccountGoodBadSummary" /> class.
        /// </summary>
        /// <param name="noOfBankAccountsBad">noOfBankAccountsBad.</param>
        /// <param name="noOfBankAccountsGood">noOfBankAccountsGood.</param>
        /// <param name="noOfCreditCardAccountsBad">noOfCreditCardAccountsBad.</param>
        /// <param name="noOfCreditCardAccountsGood">noOfCreditCardAccountsGood.</param>
        /// <param name="noOfFurnitureAccountsBad">noOfFurnitureAccountsBad.</param>
        /// <param name="noOfFurnitureAccountsGood">noOfFurnitureAccountsGood.</param>
        /// <param name="noOfHomeLoanAccountsBad">noOfHomeLoanAccountsBad.</param>
        /// <param name="noOfHomeLoanAccountsGood">noOfHomeLoanAccountsGood.</param>
        /// <param name="noOfInsuranceAccountsBad">noOfInsuranceAccountsBad.</param>
        /// <param name="noOfInsuranceAccountsGood">noOfInsuranceAccountsGood.</param>
        /// <param name="noOfMotorFinanceAccountsBad">noOfMotorFinanceAccountsBad.</param>
        /// <param name="noOfMotorFinanceAccountsGood">noOfMotorFinanceAccountsGood.</param>
        /// <param name="noOfOtherAccountsBad">noOfOtherAccountsBad.</param>
        /// <param name="noOfOtherAccountsGood">noOfOtherAccountsGood.</param>
        /// <param name="noOfPersonalFinAccountsBad">noOfPersonalFinAccountsBad.</param>
        /// <param name="noOfPersonalFinAccountsGood">noOfPersonalFinAccountsGood.</param>
        /// <param name="noOfRetailAccountsBad">noOfRetailAccountsBad.</param>
        /// <param name="noOfRetailAccountsGood">noOfRetailAccountsGood.</param>
        /// <param name="noOfTelecomAccountsBad">noOfTelecomAccountsBad.</param>
        /// <param name="noOfTelecomAccountsGood">noOfTelecomAccountsGood.</param>
        public XdsConsumerAccountGoodBadSummary(int noOfBankAccountsBad = default(int), int noOfBankAccountsGood = default(int), int noOfCreditCardAccountsBad = default(int), int noOfCreditCardAccountsGood = default(int), int noOfFurnitureAccountsBad = default(int), int noOfFurnitureAccountsGood = default(int), int noOfHomeLoanAccountsBad = default(int), int noOfHomeLoanAccountsGood = default(int), int noOfInsuranceAccountsBad = default(int), int noOfInsuranceAccountsGood = default(int), int noOfMotorFinanceAccountsBad = default(int), int noOfMotorFinanceAccountsGood = default(int), int noOfOtherAccountsBad = default(int), int noOfOtherAccountsGood = default(int), int noOfPersonalFinAccountsBad = default(int), int noOfPersonalFinAccountsGood = default(int), int noOfRetailAccountsBad = default(int), int noOfRetailAccountsGood = default(int), int noOfTelecomAccountsBad = default(int), int noOfTelecomAccountsGood = default(int))
        {
            this.NoOfBankAccountsBad = noOfBankAccountsBad;
            this.NoOfBankAccountsGood = noOfBankAccountsGood;
            this.NoOfCreditCardAccountsBad = noOfCreditCardAccountsBad;
            this.NoOfCreditCardAccountsGood = noOfCreditCardAccountsGood;
            this.NoOfFurnitureAccountsBad = noOfFurnitureAccountsBad;
            this.NoOfFurnitureAccountsGood = noOfFurnitureAccountsGood;
            this.NoOfHomeLoanAccountsBad = noOfHomeLoanAccountsBad;
            this.NoOfHomeLoanAccountsGood = noOfHomeLoanAccountsGood;
            this.NoOfInsuranceAccountsBad = noOfInsuranceAccountsBad;
            this.NoOfInsuranceAccountsGood = noOfInsuranceAccountsGood;
            this.NoOfMotorFinanceAccountsBad = noOfMotorFinanceAccountsBad;
            this.NoOfMotorFinanceAccountsGood = noOfMotorFinanceAccountsGood;
            this.NoOfOtherAccountsBad = noOfOtherAccountsBad;
            this.NoOfOtherAccountsGood = noOfOtherAccountsGood;
            this.NoOfPersonalFinAccountsBad = noOfPersonalFinAccountsBad;
            this.NoOfPersonalFinAccountsGood = noOfPersonalFinAccountsGood;
            this.NoOfRetailAccountsBad = noOfRetailAccountsBad;
            this.NoOfRetailAccountsGood = noOfRetailAccountsGood;
            this.NoOfTelecomAccountsBad = noOfTelecomAccountsBad;
            this.NoOfTelecomAccountsGood = noOfTelecomAccountsGood;
        }

        /// <summary>
        /// Gets or Sets NoOfBankAccountsBad
        /// </summary>
        [DataMember(Name="noOfBankAccountsBad", EmitDefaultValue=false)]
        public int NoOfBankAccountsBad { get; set; }

        /// <summary>
        /// Gets or Sets NoOfBankAccountsGood
        /// </summary>
        [DataMember(Name="noOfBankAccountsGood", EmitDefaultValue=false)]
        public int NoOfBankAccountsGood { get; set; }

        /// <summary>
        /// Gets or Sets NoOfCreditCardAccountsBad
        /// </summary>
        [DataMember(Name="noOfCreditCardAccountsBad", EmitDefaultValue=false)]
        public int NoOfCreditCardAccountsBad { get; set; }

        /// <summary>
        /// Gets or Sets NoOfCreditCardAccountsGood
        /// </summary>
        [DataMember(Name="noOfCreditCardAccountsGood", EmitDefaultValue=false)]
        public int NoOfCreditCardAccountsGood { get; set; }

        /// <summary>
        /// Gets or Sets NoOfFurnitureAccountsBad
        /// </summary>
        [DataMember(Name="noOfFurnitureAccountsBad", EmitDefaultValue=false)]
        public int NoOfFurnitureAccountsBad { get; set; }

        /// <summary>
        /// Gets or Sets NoOfFurnitureAccountsGood
        /// </summary>
        [DataMember(Name="noOfFurnitureAccountsGood", EmitDefaultValue=false)]
        public int NoOfFurnitureAccountsGood { get; set; }

        /// <summary>
        /// Gets or Sets NoOfHomeLoanAccountsBad
        /// </summary>
        [DataMember(Name="noOfHomeLoanAccountsBad", EmitDefaultValue=false)]
        public int NoOfHomeLoanAccountsBad { get; set; }

        /// <summary>
        /// Gets or Sets NoOfHomeLoanAccountsGood
        /// </summary>
        [DataMember(Name="noOfHomeLoanAccountsGood", EmitDefaultValue=false)]
        public int NoOfHomeLoanAccountsGood { get; set; }

        /// <summary>
        /// Gets or Sets NoOfInsuranceAccountsBad
        /// </summary>
        [DataMember(Name="noOfInsuranceAccountsBad", EmitDefaultValue=false)]
        public int NoOfInsuranceAccountsBad { get; set; }

        /// <summary>
        /// Gets or Sets NoOfInsuranceAccountsGood
        /// </summary>
        [DataMember(Name="noOfInsuranceAccountsGood", EmitDefaultValue=false)]
        public int NoOfInsuranceAccountsGood { get; set; }

        /// <summary>
        /// Gets or Sets NoOfMotorFinanceAccountsBad
        /// </summary>
        [DataMember(Name="noOfMotorFinanceAccountsBad", EmitDefaultValue=false)]
        public int NoOfMotorFinanceAccountsBad { get; set; }

        /// <summary>
        /// Gets or Sets NoOfMotorFinanceAccountsGood
        /// </summary>
        [DataMember(Name="noOfMotorFinanceAccountsGood", EmitDefaultValue=false)]
        public int NoOfMotorFinanceAccountsGood { get; set; }

        /// <summary>
        /// Gets or Sets NoOfOtherAccountsBad
        /// </summary>
        [DataMember(Name="noOfOtherAccountsBad", EmitDefaultValue=false)]
        public int NoOfOtherAccountsBad { get; set; }

        /// <summary>
        /// Gets or Sets NoOfOtherAccountsGood
        /// </summary>
        [DataMember(Name="noOfOtherAccountsGood", EmitDefaultValue=false)]
        public int NoOfOtherAccountsGood { get; set; }

        /// <summary>
        /// Gets or Sets NoOfPersonalFinAccountsBad
        /// </summary>
        [DataMember(Name="noOfPersonalFinAccountsBad", EmitDefaultValue=false)]
        public int NoOfPersonalFinAccountsBad { get; set; }

        /// <summary>
        /// Gets or Sets NoOfPersonalFinAccountsGood
        /// </summary>
        [DataMember(Name="noOfPersonalFinAccountsGood", EmitDefaultValue=false)]
        public int NoOfPersonalFinAccountsGood { get; set; }

        /// <summary>
        /// Gets or Sets NoOfRetailAccountsBad
        /// </summary>
        [DataMember(Name="noOfRetailAccountsBad", EmitDefaultValue=false)]
        public int NoOfRetailAccountsBad { get; set; }

        /// <summary>
        /// Gets or Sets NoOfRetailAccountsGood
        /// </summary>
        [DataMember(Name="noOfRetailAccountsGood", EmitDefaultValue=false)]
        public int NoOfRetailAccountsGood { get; set; }

        /// <summary>
        /// Gets or Sets NoOfTelecomAccountsBad
        /// </summary>
        [DataMember(Name="noOfTelecomAccountsBad", EmitDefaultValue=false)]
        public int NoOfTelecomAccountsBad { get; set; }

        /// <summary>
        /// Gets or Sets NoOfTelecomAccountsGood
        /// </summary>
        [DataMember(Name="noOfTelecomAccountsGood", EmitDefaultValue=false)]
        public int NoOfTelecomAccountsGood { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class XdsConsumerAccountGoodBadSummary {\n");
            sb.Append("  NoOfBankAccountsBad: ").Append(NoOfBankAccountsBad).Append("\n");
            sb.Append("  NoOfBankAccountsGood: ").Append(NoOfBankAccountsGood).Append("\n");
            sb.Append("  NoOfCreditCardAccountsBad: ").Append(NoOfCreditCardAccountsBad).Append("\n");
            sb.Append("  NoOfCreditCardAccountsGood: ").Append(NoOfCreditCardAccountsGood).Append("\n");
            sb.Append("  NoOfFurnitureAccountsBad: ").Append(NoOfFurnitureAccountsBad).Append("\n");
            sb.Append("  NoOfFurnitureAccountsGood: ").Append(NoOfFurnitureAccountsGood).Append("\n");
            sb.Append("  NoOfHomeLoanAccountsBad: ").Append(NoOfHomeLoanAccountsBad).Append("\n");
            sb.Append("  NoOfHomeLoanAccountsGood: ").Append(NoOfHomeLoanAccountsGood).Append("\n");
            sb.Append("  NoOfInsuranceAccountsBad: ").Append(NoOfInsuranceAccountsBad).Append("\n");
            sb.Append("  NoOfInsuranceAccountsGood: ").Append(NoOfInsuranceAccountsGood).Append("\n");
            sb.Append("  NoOfMotorFinanceAccountsBad: ").Append(NoOfMotorFinanceAccountsBad).Append("\n");
            sb.Append("  NoOfMotorFinanceAccountsGood: ").Append(NoOfMotorFinanceAccountsGood).Append("\n");
            sb.Append("  NoOfOtherAccountsBad: ").Append(NoOfOtherAccountsBad).Append("\n");
            sb.Append("  NoOfOtherAccountsGood: ").Append(NoOfOtherAccountsGood).Append("\n");
            sb.Append("  NoOfPersonalFinAccountsBad: ").Append(NoOfPersonalFinAccountsBad).Append("\n");
            sb.Append("  NoOfPersonalFinAccountsGood: ").Append(NoOfPersonalFinAccountsGood).Append("\n");
            sb.Append("  NoOfRetailAccountsBad: ").Append(NoOfRetailAccountsBad).Append("\n");
            sb.Append("  NoOfRetailAccountsGood: ").Append(NoOfRetailAccountsGood).Append("\n");
            sb.Append("  NoOfTelecomAccountsBad: ").Append(NoOfTelecomAccountsBad).Append("\n");
            sb.Append("  NoOfTelecomAccountsGood: ").Append(NoOfTelecomAccountsGood).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as XdsConsumerAccountGoodBadSummary);
        }

        /// <summary>
        /// Returns true if XdsConsumerAccountGoodBadSummary instances are equal
        /// </summary>
        /// <param name="input">Instance of XdsConsumerAccountGoodBadSummary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(XdsConsumerAccountGoodBadSummary input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.NoOfBankAccountsBad == input.NoOfBankAccountsBad ||
                    (this.NoOfBankAccountsBad != null &&
                    this.NoOfBankAccountsBad.Equals(input.NoOfBankAccountsBad))
                ) && 
                (
                    this.NoOfBankAccountsGood == input.NoOfBankAccountsGood ||
                    (this.NoOfBankAccountsGood != null &&
                    this.NoOfBankAccountsGood.Equals(input.NoOfBankAccountsGood))
                ) && 
                (
                    this.NoOfCreditCardAccountsBad == input.NoOfCreditCardAccountsBad ||
                    (this.NoOfCreditCardAccountsBad != null &&
                    this.NoOfCreditCardAccountsBad.Equals(input.NoOfCreditCardAccountsBad))
                ) && 
                (
                    this.NoOfCreditCardAccountsGood == input.NoOfCreditCardAccountsGood ||
                    (this.NoOfCreditCardAccountsGood != null &&
                    this.NoOfCreditCardAccountsGood.Equals(input.NoOfCreditCardAccountsGood))
                ) && 
                (
                    this.NoOfFurnitureAccountsBad == input.NoOfFurnitureAccountsBad ||
                    (this.NoOfFurnitureAccountsBad != null &&
                    this.NoOfFurnitureAccountsBad.Equals(input.NoOfFurnitureAccountsBad))
                ) && 
                (
                    this.NoOfFurnitureAccountsGood == input.NoOfFurnitureAccountsGood ||
                    (this.NoOfFurnitureAccountsGood != null &&
                    this.NoOfFurnitureAccountsGood.Equals(input.NoOfFurnitureAccountsGood))
                ) && 
                (
                    this.NoOfHomeLoanAccountsBad == input.NoOfHomeLoanAccountsBad ||
                    (this.NoOfHomeLoanAccountsBad != null &&
                    this.NoOfHomeLoanAccountsBad.Equals(input.NoOfHomeLoanAccountsBad))
                ) && 
                (
                    this.NoOfHomeLoanAccountsGood == input.NoOfHomeLoanAccountsGood ||
                    (this.NoOfHomeLoanAccountsGood != null &&
                    this.NoOfHomeLoanAccountsGood.Equals(input.NoOfHomeLoanAccountsGood))
                ) && 
                (
                    this.NoOfInsuranceAccountsBad == input.NoOfInsuranceAccountsBad ||
                    (this.NoOfInsuranceAccountsBad != null &&
                    this.NoOfInsuranceAccountsBad.Equals(input.NoOfInsuranceAccountsBad))
                ) && 
                (
                    this.NoOfInsuranceAccountsGood == input.NoOfInsuranceAccountsGood ||
                    (this.NoOfInsuranceAccountsGood != null &&
                    this.NoOfInsuranceAccountsGood.Equals(input.NoOfInsuranceAccountsGood))
                ) && 
                (
                    this.NoOfMotorFinanceAccountsBad == input.NoOfMotorFinanceAccountsBad ||
                    (this.NoOfMotorFinanceAccountsBad != null &&
                    this.NoOfMotorFinanceAccountsBad.Equals(input.NoOfMotorFinanceAccountsBad))
                ) && 
                (
                    this.NoOfMotorFinanceAccountsGood == input.NoOfMotorFinanceAccountsGood ||
                    (this.NoOfMotorFinanceAccountsGood != null &&
                    this.NoOfMotorFinanceAccountsGood.Equals(input.NoOfMotorFinanceAccountsGood))
                ) && 
                (
                    this.NoOfOtherAccountsBad == input.NoOfOtherAccountsBad ||
                    (this.NoOfOtherAccountsBad != null &&
                    this.NoOfOtherAccountsBad.Equals(input.NoOfOtherAccountsBad))
                ) && 
                (
                    this.NoOfOtherAccountsGood == input.NoOfOtherAccountsGood ||
                    (this.NoOfOtherAccountsGood != null &&
                    this.NoOfOtherAccountsGood.Equals(input.NoOfOtherAccountsGood))
                ) && 
                (
                    this.NoOfPersonalFinAccountsBad == input.NoOfPersonalFinAccountsBad ||
                    (this.NoOfPersonalFinAccountsBad != null &&
                    this.NoOfPersonalFinAccountsBad.Equals(input.NoOfPersonalFinAccountsBad))
                ) && 
                (
                    this.NoOfPersonalFinAccountsGood == input.NoOfPersonalFinAccountsGood ||
                    (this.NoOfPersonalFinAccountsGood != null &&
                    this.NoOfPersonalFinAccountsGood.Equals(input.NoOfPersonalFinAccountsGood))
                ) && 
                (
                    this.NoOfRetailAccountsBad == input.NoOfRetailAccountsBad ||
                    (this.NoOfRetailAccountsBad != null &&
                    this.NoOfRetailAccountsBad.Equals(input.NoOfRetailAccountsBad))
                ) && 
                (
                    this.NoOfRetailAccountsGood == input.NoOfRetailAccountsGood ||
                    (this.NoOfRetailAccountsGood != null &&
                    this.NoOfRetailAccountsGood.Equals(input.NoOfRetailAccountsGood))
                ) && 
                (
                    this.NoOfTelecomAccountsBad == input.NoOfTelecomAccountsBad ||
                    (this.NoOfTelecomAccountsBad != null &&
                    this.NoOfTelecomAccountsBad.Equals(input.NoOfTelecomAccountsBad))
                ) && 
                (
                    this.NoOfTelecomAccountsGood == input.NoOfTelecomAccountsGood ||
                    (this.NoOfTelecomAccountsGood != null &&
                    this.NoOfTelecomAccountsGood.Equals(input.NoOfTelecomAccountsGood))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.NoOfBankAccountsBad != null)
                    hashCode = hashCode * 59 + this.NoOfBankAccountsBad.GetHashCode();
                if (this.NoOfBankAccountsGood != null)
                    hashCode = hashCode * 59 + this.NoOfBankAccountsGood.GetHashCode();
                if (this.NoOfCreditCardAccountsBad != null)
                    hashCode = hashCode * 59 + this.NoOfCreditCardAccountsBad.GetHashCode();
                if (this.NoOfCreditCardAccountsGood != null)
                    hashCode = hashCode * 59 + this.NoOfCreditCardAccountsGood.GetHashCode();
                if (this.NoOfFurnitureAccountsBad != null)
                    hashCode = hashCode * 59 + this.NoOfFurnitureAccountsBad.GetHashCode();
                if (this.NoOfFurnitureAccountsGood != null)
                    hashCode = hashCode * 59 + this.NoOfFurnitureAccountsGood.GetHashCode();
                if (this.NoOfHomeLoanAccountsBad != null)
                    hashCode = hashCode * 59 + this.NoOfHomeLoanAccountsBad.GetHashCode();
                if (this.NoOfHomeLoanAccountsGood != null)
                    hashCode = hashCode * 59 + this.NoOfHomeLoanAccountsGood.GetHashCode();
                if (this.NoOfInsuranceAccountsBad != null)
                    hashCode = hashCode * 59 + this.NoOfInsuranceAccountsBad.GetHashCode();
                if (this.NoOfInsuranceAccountsGood != null)
                    hashCode = hashCode * 59 + this.NoOfInsuranceAccountsGood.GetHashCode();
                if (this.NoOfMotorFinanceAccountsBad != null)
                    hashCode = hashCode * 59 + this.NoOfMotorFinanceAccountsBad.GetHashCode();
                if (this.NoOfMotorFinanceAccountsGood != null)
                    hashCode = hashCode * 59 + this.NoOfMotorFinanceAccountsGood.GetHashCode();
                if (this.NoOfOtherAccountsBad != null)
                    hashCode = hashCode * 59 + this.NoOfOtherAccountsBad.GetHashCode();
                if (this.NoOfOtherAccountsGood != null)
                    hashCode = hashCode * 59 + this.NoOfOtherAccountsGood.GetHashCode();
                if (this.NoOfPersonalFinAccountsBad != null)
                    hashCode = hashCode * 59 + this.NoOfPersonalFinAccountsBad.GetHashCode();
                if (this.NoOfPersonalFinAccountsGood != null)
                    hashCode = hashCode * 59 + this.NoOfPersonalFinAccountsGood.GetHashCode();
                if (this.NoOfRetailAccountsBad != null)
                    hashCode = hashCode * 59 + this.NoOfRetailAccountsBad.GetHashCode();
                if (this.NoOfRetailAccountsGood != null)
                    hashCode = hashCode * 59 + this.NoOfRetailAccountsGood.GetHashCode();
                if (this.NoOfTelecomAccountsBad != null)
                    hashCode = hashCode * 59 + this.NoOfTelecomAccountsBad.GetHashCode();
                if (this.NoOfTelecomAccountsGood != null)
                    hashCode = hashCode * 59 + this.NoOfTelecomAccountsGood.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
