/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118PLScorecardUL01
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118PLScorecardUL01 :  IEquatable<TransunionConsumer118PLScorecardUL01>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118PLScorecardUL01" /> class.
        /// </summary>
        /// <param name="consumerNo">consumerNo.</param>
        /// <param name="noFile">noFile.</param>
        /// <param name="filter1">filter1.</param>
        /// <param name="filter2">filter2.</param>
        /// <param name="filter3">filter3.</param>
        /// <param name="filter4">filter4.</param>
        /// <param name="filter5">filter5.</param>
        /// <param name="filter6">filter6.</param>
        /// <param name="filter7">filter7.</param>
        /// <param name="shortScore">shortScore.</param>
        /// <param name="mediumScore">mediumScore.</param>
        /// <param name="longScore">longScore.</param>
        /// <param name="avarageScore">avarageScore.</param>
        /// <param name="score1">score1.</param>
        /// <param name="scoreSegment">scoreSegment.</param>
        /// <param name="aarc1Short">aarc1Short.</param>
        /// <param name="aarc1Medium">aarc1Medium.</param>
        /// <param name="aarc1Long">aarc1Long.</param>
        /// <param name="aarc2Short">aarc2Short.</param>
        /// <param name="aarc2Medium">aarc2Medium.</param>
        /// <param name="aarc2Long">aarc2Long.</param>
        /// <param name="aarc3Short">aarc3Short.</param>
        /// <param name="aarc3Medium">aarc3Medium.</param>
        /// <param name="aarc3Long">aarc3Long.</param>
        /// <param name="aarc4Short">aarc4Short.</param>
        /// <param name="aarc4Medium">aarc4Medium.</param>
        /// <param name="aarc4Long">aarc4Long.</param>
        public TransunionConsumer118PLScorecardUL01(string consumerNo = default(string), string noFile = default(string), string filter1 = default(string), string filter2 = default(string), string filter3 = default(string), string filter4 = default(string), string filter5 = default(string), string filter6 = default(string), string filter7 = default(string), string shortScore = default(string), string mediumScore = default(string), string longScore = default(string), string avarageScore = default(string), string score1 = default(string), string scoreSegment = default(string), string aarc1Short = default(string), string aarc1Medium = default(string), string aarc1Long = default(string), string aarc2Short = default(string), string aarc2Medium = default(string), string aarc2Long = default(string), string aarc3Short = default(string), string aarc3Medium = default(string), string aarc3Long = default(string), string aarc4Short = default(string), string aarc4Medium = default(string), string aarc4Long = default(string))
        {
            this.ConsumerNo = consumerNo;
            this.NoFile = noFile;
            this.Filter1 = filter1;
            this.Filter2 = filter2;
            this.Filter3 = filter3;
            this.Filter4 = filter4;
            this.Filter5 = filter5;
            this.Filter6 = filter6;
            this.Filter7 = filter7;
            this.ShortScore = shortScore;
            this.MediumScore = mediumScore;
            this.LongScore = longScore;
            this.AvarageScore = avarageScore;
            this.Score1 = score1;
            this.ScoreSegment = scoreSegment;
            this.Aarc1Short = aarc1Short;
            this.Aarc1Medium = aarc1Medium;
            this.Aarc1Long = aarc1Long;
            this.Aarc2Short = aarc2Short;
            this.Aarc2Medium = aarc2Medium;
            this.Aarc2Long = aarc2Long;
            this.Aarc3Short = aarc3Short;
            this.Aarc3Medium = aarc3Medium;
            this.Aarc3Long = aarc3Long;
            this.Aarc4Short = aarc4Short;
            this.Aarc4Medium = aarc4Medium;
            this.Aarc4Long = aarc4Long;
            this.ConsumerNo = consumerNo;
            this.NoFile = noFile;
            this.Filter1 = filter1;
            this.Filter2 = filter2;
            this.Filter3 = filter3;
            this.Filter4 = filter4;
            this.Filter5 = filter5;
            this.Filter6 = filter6;
            this.Filter7 = filter7;
            this.ShortScore = shortScore;
            this.MediumScore = mediumScore;
            this.LongScore = longScore;
            this.AvarageScore = avarageScore;
            this.Score1 = score1;
            this.ScoreSegment = scoreSegment;
            this.Aarc1Short = aarc1Short;
            this.Aarc1Medium = aarc1Medium;
            this.Aarc1Long = aarc1Long;
            this.Aarc2Short = aarc2Short;
            this.Aarc2Medium = aarc2Medium;
            this.Aarc2Long = aarc2Long;
            this.Aarc3Short = aarc3Short;
            this.Aarc3Medium = aarc3Medium;
            this.Aarc3Long = aarc3Long;
            this.Aarc4Short = aarc4Short;
            this.Aarc4Medium = aarc4Medium;
            this.Aarc4Long = aarc4Long;
        }

        /// <summary>
        /// Gets or Sets ConsumerNo
        /// </summary>
        [DataMember(Name="consumerNo", EmitDefaultValue=true)]
        public string ConsumerNo { get; set; }

        /// <summary>
        /// Gets or Sets NoFile
        /// </summary>
        [DataMember(Name="noFile", EmitDefaultValue=true)]
        public string NoFile { get; set; }

        /// <summary>
        /// Gets or Sets Filter1
        /// </summary>
        [DataMember(Name="filter1", EmitDefaultValue=true)]
        public string Filter1 { get; set; }

        /// <summary>
        /// Gets or Sets Filter2
        /// </summary>
        [DataMember(Name="filter2", EmitDefaultValue=true)]
        public string Filter2 { get; set; }

        /// <summary>
        /// Gets or Sets Filter3
        /// </summary>
        [DataMember(Name="filter3", EmitDefaultValue=true)]
        public string Filter3 { get; set; }

        /// <summary>
        /// Gets or Sets Filter4
        /// </summary>
        [DataMember(Name="filter4", EmitDefaultValue=true)]
        public string Filter4 { get; set; }

        /// <summary>
        /// Gets or Sets Filter5
        /// </summary>
        [DataMember(Name="filter5", EmitDefaultValue=true)]
        public string Filter5 { get; set; }

        /// <summary>
        /// Gets or Sets Filter6
        /// </summary>
        [DataMember(Name="filter6", EmitDefaultValue=true)]
        public string Filter6 { get; set; }

        /// <summary>
        /// Gets or Sets Filter7
        /// </summary>
        [DataMember(Name="filter7", EmitDefaultValue=true)]
        public string Filter7 { get; set; }

        /// <summary>
        /// Gets or Sets ShortScore
        /// </summary>
        [DataMember(Name="shortScore", EmitDefaultValue=true)]
        public string ShortScore { get; set; }

        /// <summary>
        /// Gets or Sets MediumScore
        /// </summary>
        [DataMember(Name="mediumScore", EmitDefaultValue=true)]
        public string MediumScore { get; set; }

        /// <summary>
        /// Gets or Sets LongScore
        /// </summary>
        [DataMember(Name="longScore", EmitDefaultValue=true)]
        public string LongScore { get; set; }

        /// <summary>
        /// Gets or Sets AvarageScore
        /// </summary>
        [DataMember(Name="avarageScore", EmitDefaultValue=true)]
        public string AvarageScore { get; set; }

        /// <summary>
        /// Gets or Sets Score1
        /// </summary>
        [DataMember(Name="score1", EmitDefaultValue=true)]
        public string Score1 { get; set; }

        /// <summary>
        /// Gets or Sets ScoreSegment
        /// </summary>
        [DataMember(Name="scoreSegment", EmitDefaultValue=true)]
        public string ScoreSegment { get; set; }

        /// <summary>
        /// Gets or Sets Aarc1Short
        /// </summary>
        [DataMember(Name="aarc1Short", EmitDefaultValue=true)]
        public string Aarc1Short { get; set; }

        /// <summary>
        /// Gets or Sets Aarc1Medium
        /// </summary>
        [DataMember(Name="aarc1Medium", EmitDefaultValue=true)]
        public string Aarc1Medium { get; set; }

        /// <summary>
        /// Gets or Sets Aarc1Long
        /// </summary>
        [DataMember(Name="aarc1Long", EmitDefaultValue=true)]
        public string Aarc1Long { get; set; }

        /// <summary>
        /// Gets or Sets Aarc2Short
        /// </summary>
        [DataMember(Name="aarc2Short", EmitDefaultValue=true)]
        public string Aarc2Short { get; set; }

        /// <summary>
        /// Gets or Sets Aarc2Medium
        /// </summary>
        [DataMember(Name="aarc2Medium", EmitDefaultValue=true)]
        public string Aarc2Medium { get; set; }

        /// <summary>
        /// Gets or Sets Aarc2Long
        /// </summary>
        [DataMember(Name="aarc2Long", EmitDefaultValue=true)]
        public string Aarc2Long { get; set; }

        /// <summary>
        /// Gets or Sets Aarc3Short
        /// </summary>
        [DataMember(Name="aarc3Short", EmitDefaultValue=true)]
        public string Aarc3Short { get; set; }

        /// <summary>
        /// Gets or Sets Aarc3Medium
        /// </summary>
        [DataMember(Name="aarc3Medium", EmitDefaultValue=true)]
        public string Aarc3Medium { get; set; }

        /// <summary>
        /// Gets or Sets Aarc3Long
        /// </summary>
        [DataMember(Name="aarc3Long", EmitDefaultValue=true)]
        public string Aarc3Long { get; set; }

        /// <summary>
        /// Gets or Sets Aarc4Short
        /// </summary>
        [DataMember(Name="aarc4Short", EmitDefaultValue=true)]
        public string Aarc4Short { get; set; }

        /// <summary>
        /// Gets or Sets Aarc4Medium
        /// </summary>
        [DataMember(Name="aarc4Medium", EmitDefaultValue=true)]
        public string Aarc4Medium { get; set; }

        /// <summary>
        /// Gets or Sets Aarc4Long
        /// </summary>
        [DataMember(Name="aarc4Long", EmitDefaultValue=true)]
        public string Aarc4Long { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118PLScorecardUL01 {\n");
            sb.Append("  ConsumerNo: ").Append(ConsumerNo).Append("\n");
            sb.Append("  NoFile: ").Append(NoFile).Append("\n");
            sb.Append("  Filter1: ").Append(Filter1).Append("\n");
            sb.Append("  Filter2: ").Append(Filter2).Append("\n");
            sb.Append("  Filter3: ").Append(Filter3).Append("\n");
            sb.Append("  Filter4: ").Append(Filter4).Append("\n");
            sb.Append("  Filter5: ").Append(Filter5).Append("\n");
            sb.Append("  Filter6: ").Append(Filter6).Append("\n");
            sb.Append("  Filter7: ").Append(Filter7).Append("\n");
            sb.Append("  ShortScore: ").Append(ShortScore).Append("\n");
            sb.Append("  MediumScore: ").Append(MediumScore).Append("\n");
            sb.Append("  LongScore: ").Append(LongScore).Append("\n");
            sb.Append("  AvarageScore: ").Append(AvarageScore).Append("\n");
            sb.Append("  Score1: ").Append(Score1).Append("\n");
            sb.Append("  ScoreSegment: ").Append(ScoreSegment).Append("\n");
            sb.Append("  Aarc1Short: ").Append(Aarc1Short).Append("\n");
            sb.Append("  Aarc1Medium: ").Append(Aarc1Medium).Append("\n");
            sb.Append("  Aarc1Long: ").Append(Aarc1Long).Append("\n");
            sb.Append("  Aarc2Short: ").Append(Aarc2Short).Append("\n");
            sb.Append("  Aarc2Medium: ").Append(Aarc2Medium).Append("\n");
            sb.Append("  Aarc2Long: ").Append(Aarc2Long).Append("\n");
            sb.Append("  Aarc3Short: ").Append(Aarc3Short).Append("\n");
            sb.Append("  Aarc3Medium: ").Append(Aarc3Medium).Append("\n");
            sb.Append("  Aarc3Long: ").Append(Aarc3Long).Append("\n");
            sb.Append("  Aarc4Short: ").Append(Aarc4Short).Append("\n");
            sb.Append("  Aarc4Medium: ").Append(Aarc4Medium).Append("\n");
            sb.Append("  Aarc4Long: ").Append(Aarc4Long).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118PLScorecardUL01);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118PLScorecardUL01 instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118PLScorecardUL01 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118PLScorecardUL01 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConsumerNo == input.ConsumerNo ||
                    (this.ConsumerNo != null &&
                    this.ConsumerNo.Equals(input.ConsumerNo))
                ) && 
                (
                    this.NoFile == input.NoFile ||
                    (this.NoFile != null &&
                    this.NoFile.Equals(input.NoFile))
                ) && 
                (
                    this.Filter1 == input.Filter1 ||
                    (this.Filter1 != null &&
                    this.Filter1.Equals(input.Filter1))
                ) && 
                (
                    this.Filter2 == input.Filter2 ||
                    (this.Filter2 != null &&
                    this.Filter2.Equals(input.Filter2))
                ) && 
                (
                    this.Filter3 == input.Filter3 ||
                    (this.Filter3 != null &&
                    this.Filter3.Equals(input.Filter3))
                ) && 
                (
                    this.Filter4 == input.Filter4 ||
                    (this.Filter4 != null &&
                    this.Filter4.Equals(input.Filter4))
                ) && 
                (
                    this.Filter5 == input.Filter5 ||
                    (this.Filter5 != null &&
                    this.Filter5.Equals(input.Filter5))
                ) && 
                (
                    this.Filter6 == input.Filter6 ||
                    (this.Filter6 != null &&
                    this.Filter6.Equals(input.Filter6))
                ) && 
                (
                    this.Filter7 == input.Filter7 ||
                    (this.Filter7 != null &&
                    this.Filter7.Equals(input.Filter7))
                ) && 
                (
                    this.ShortScore == input.ShortScore ||
                    (this.ShortScore != null &&
                    this.ShortScore.Equals(input.ShortScore))
                ) && 
                (
                    this.MediumScore == input.MediumScore ||
                    (this.MediumScore != null &&
                    this.MediumScore.Equals(input.MediumScore))
                ) && 
                (
                    this.LongScore == input.LongScore ||
                    (this.LongScore != null &&
                    this.LongScore.Equals(input.LongScore))
                ) && 
                (
                    this.AvarageScore == input.AvarageScore ||
                    (this.AvarageScore != null &&
                    this.AvarageScore.Equals(input.AvarageScore))
                ) && 
                (
                    this.Score1 == input.Score1 ||
                    (this.Score1 != null &&
                    this.Score1.Equals(input.Score1))
                ) && 
                (
                    this.ScoreSegment == input.ScoreSegment ||
                    (this.ScoreSegment != null &&
                    this.ScoreSegment.Equals(input.ScoreSegment))
                ) && 
                (
                    this.Aarc1Short == input.Aarc1Short ||
                    (this.Aarc1Short != null &&
                    this.Aarc1Short.Equals(input.Aarc1Short))
                ) && 
                (
                    this.Aarc1Medium == input.Aarc1Medium ||
                    (this.Aarc1Medium != null &&
                    this.Aarc1Medium.Equals(input.Aarc1Medium))
                ) && 
                (
                    this.Aarc1Long == input.Aarc1Long ||
                    (this.Aarc1Long != null &&
                    this.Aarc1Long.Equals(input.Aarc1Long))
                ) && 
                (
                    this.Aarc2Short == input.Aarc2Short ||
                    (this.Aarc2Short != null &&
                    this.Aarc2Short.Equals(input.Aarc2Short))
                ) && 
                (
                    this.Aarc2Medium == input.Aarc2Medium ||
                    (this.Aarc2Medium != null &&
                    this.Aarc2Medium.Equals(input.Aarc2Medium))
                ) && 
                (
                    this.Aarc2Long == input.Aarc2Long ||
                    (this.Aarc2Long != null &&
                    this.Aarc2Long.Equals(input.Aarc2Long))
                ) && 
                (
                    this.Aarc3Short == input.Aarc3Short ||
                    (this.Aarc3Short != null &&
                    this.Aarc3Short.Equals(input.Aarc3Short))
                ) && 
                (
                    this.Aarc3Medium == input.Aarc3Medium ||
                    (this.Aarc3Medium != null &&
                    this.Aarc3Medium.Equals(input.Aarc3Medium))
                ) && 
                (
                    this.Aarc3Long == input.Aarc3Long ||
                    (this.Aarc3Long != null &&
                    this.Aarc3Long.Equals(input.Aarc3Long))
                ) && 
                (
                    this.Aarc4Short == input.Aarc4Short ||
                    (this.Aarc4Short != null &&
                    this.Aarc4Short.Equals(input.Aarc4Short))
                ) && 
                (
                    this.Aarc4Medium == input.Aarc4Medium ||
                    (this.Aarc4Medium != null &&
                    this.Aarc4Medium.Equals(input.Aarc4Medium))
                ) && 
                (
                    this.Aarc4Long == input.Aarc4Long ||
                    (this.Aarc4Long != null &&
                    this.Aarc4Long.Equals(input.Aarc4Long))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConsumerNo != null)
                    hashCode = hashCode * 59 + this.ConsumerNo.GetHashCode();
                if (this.NoFile != null)
                    hashCode = hashCode * 59 + this.NoFile.GetHashCode();
                if (this.Filter1 != null)
                    hashCode = hashCode * 59 + this.Filter1.GetHashCode();
                if (this.Filter2 != null)
                    hashCode = hashCode * 59 + this.Filter2.GetHashCode();
                if (this.Filter3 != null)
                    hashCode = hashCode * 59 + this.Filter3.GetHashCode();
                if (this.Filter4 != null)
                    hashCode = hashCode * 59 + this.Filter4.GetHashCode();
                if (this.Filter5 != null)
                    hashCode = hashCode * 59 + this.Filter5.GetHashCode();
                if (this.Filter6 != null)
                    hashCode = hashCode * 59 + this.Filter6.GetHashCode();
                if (this.Filter7 != null)
                    hashCode = hashCode * 59 + this.Filter7.GetHashCode();
                if (this.ShortScore != null)
                    hashCode = hashCode * 59 + this.ShortScore.GetHashCode();
                if (this.MediumScore != null)
                    hashCode = hashCode * 59 + this.MediumScore.GetHashCode();
                if (this.LongScore != null)
                    hashCode = hashCode * 59 + this.LongScore.GetHashCode();
                if (this.AvarageScore != null)
                    hashCode = hashCode * 59 + this.AvarageScore.GetHashCode();
                if (this.Score1 != null)
                    hashCode = hashCode * 59 + this.Score1.GetHashCode();
                if (this.ScoreSegment != null)
                    hashCode = hashCode * 59 + this.ScoreSegment.GetHashCode();
                if (this.Aarc1Short != null)
                    hashCode = hashCode * 59 + this.Aarc1Short.GetHashCode();
                if (this.Aarc1Medium != null)
                    hashCode = hashCode * 59 + this.Aarc1Medium.GetHashCode();
                if (this.Aarc1Long != null)
                    hashCode = hashCode * 59 + this.Aarc1Long.GetHashCode();
                if (this.Aarc2Short != null)
                    hashCode = hashCode * 59 + this.Aarc2Short.GetHashCode();
                if (this.Aarc2Medium != null)
                    hashCode = hashCode * 59 + this.Aarc2Medium.GetHashCode();
                if (this.Aarc2Long != null)
                    hashCode = hashCode * 59 + this.Aarc2Long.GetHashCode();
                if (this.Aarc3Short != null)
                    hashCode = hashCode * 59 + this.Aarc3Short.GetHashCode();
                if (this.Aarc3Medium != null)
                    hashCode = hashCode * 59 + this.Aarc3Medium.GetHashCode();
                if (this.Aarc3Long != null)
                    hashCode = hashCode * 59 + this.Aarc3Long.GetHashCode();
                if (this.Aarc4Short != null)
                    hashCode = hashCode * 59 + this.Aarc4Short.GetHashCode();
                if (this.Aarc4Medium != null)
                    hashCode = hashCode * 59 + this.Aarc4Medium.GetHashCode();
                if (this.Aarc4Long != null)
                    hashCode = hashCode * 59 + this.Aarc4Long.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
