/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialAffiliations
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialAffiliations :  IEquatable<TransunionCommercialAffiliations>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialAffiliations" /> class.
        /// </summary>
        /// <param name="majorProduct">majorProduct.</param>
        /// <param name="relationshipType">relationshipType.</param>
        /// <param name="startDate">startDate.</param>
        /// <param name="endDate">endDate.</param>
        /// <param name="percentShare">percentShare.</param>
        /// <param name="comment">comment.</param>
        /// <param name="objectName">objectName.</param>
        /// <param name="objectTown">objectTown.</param>
        /// <param name="objectCountry">objectCountry.</param>
        /// <param name="itNumber">itNumber.</param>
        /// <param name="dunsNumber">dunsNumber.</param>
        /// <param name="infoDate">infoDate.</param>
        /// <param name="registrationNumber">registrationNumber.</param>
        public TransunionCommercialAffiliations(string majorProduct = default(string), string relationshipType = default(string), string startDate = default(string), string endDate = default(string), string percentShare = default(string), string comment = default(string), string objectName = default(string), string objectTown = default(string), string objectCountry = default(string), string itNumber = default(string), string dunsNumber = default(string), string infoDate = default(string), string registrationNumber = default(string))
        {
            this.MajorProduct = majorProduct;
            this.RelationshipType = relationshipType;
            this.StartDate = startDate;
            this.EndDate = endDate;
            this.PercentShare = percentShare;
            this.Comment = comment;
            this.ObjectName = objectName;
            this.ObjectTown = objectTown;
            this.ObjectCountry = objectCountry;
            this.ItNumber = itNumber;
            this.DunsNumber = dunsNumber;
            this.InfoDate = infoDate;
            this.RegistrationNumber = registrationNumber;
            this.MajorProduct = majorProduct;
            this.RelationshipType = relationshipType;
            this.StartDate = startDate;
            this.EndDate = endDate;
            this.PercentShare = percentShare;
            this.Comment = comment;
            this.ObjectName = objectName;
            this.ObjectTown = objectTown;
            this.ObjectCountry = objectCountry;
            this.ItNumber = itNumber;
            this.DunsNumber = dunsNumber;
            this.InfoDate = infoDate;
            this.RegistrationNumber = registrationNumber;
        }

        /// <summary>
        /// Gets or Sets MajorProduct
        /// </summary>
        [DataMember(Name="majorProduct", EmitDefaultValue=true)]
        public string MajorProduct { get; set; }

        /// <summary>
        /// Gets or Sets RelationshipType
        /// </summary>
        [DataMember(Name="relationshipType", EmitDefaultValue=true)]
        public string RelationshipType { get; set; }

        /// <summary>
        /// Gets or Sets StartDate
        /// </summary>
        [DataMember(Name="startDate", EmitDefaultValue=true)]
        public string StartDate { get; set; }

        /// <summary>
        /// Gets or Sets EndDate
        /// </summary>
        [DataMember(Name="endDate", EmitDefaultValue=true)]
        public string EndDate { get; set; }

        /// <summary>
        /// Gets or Sets PercentShare
        /// </summary>
        [DataMember(Name="percentShare", EmitDefaultValue=true)]
        public string PercentShare { get; set; }

        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [DataMember(Name="comment", EmitDefaultValue=true)]
        public string Comment { get; set; }

        /// <summary>
        /// Gets or Sets ObjectName
        /// </summary>
        [DataMember(Name="objectName", EmitDefaultValue=true)]
        public string ObjectName { get; set; }

        /// <summary>
        /// Gets or Sets ObjectTown
        /// </summary>
        [DataMember(Name="objectTown", EmitDefaultValue=true)]
        public string ObjectTown { get; set; }

        /// <summary>
        /// Gets or Sets ObjectCountry
        /// </summary>
        [DataMember(Name="objectCountry", EmitDefaultValue=true)]
        public string ObjectCountry { get; set; }

        /// <summary>
        /// Gets or Sets ItNumber
        /// </summary>
        [DataMember(Name="itNumber", EmitDefaultValue=true)]
        public string ItNumber { get; set; }

        /// <summary>
        /// Gets or Sets DunsNumber
        /// </summary>
        [DataMember(Name="dunsNumber", EmitDefaultValue=true)]
        public string DunsNumber { get; set; }

        /// <summary>
        /// Gets or Sets InfoDate
        /// </summary>
        [DataMember(Name="infoDate", EmitDefaultValue=true)]
        public string InfoDate { get; set; }

        /// <summary>
        /// Gets or Sets RegistrationNumber
        /// </summary>
        [DataMember(Name="registrationNumber", EmitDefaultValue=true)]
        public string RegistrationNumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialAffiliations {\n");
            sb.Append("  MajorProduct: ").Append(MajorProduct).Append("\n");
            sb.Append("  RelationshipType: ").Append(RelationshipType).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("  EndDate: ").Append(EndDate).Append("\n");
            sb.Append("  PercentShare: ").Append(PercentShare).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  ObjectName: ").Append(ObjectName).Append("\n");
            sb.Append("  ObjectTown: ").Append(ObjectTown).Append("\n");
            sb.Append("  ObjectCountry: ").Append(ObjectCountry).Append("\n");
            sb.Append("  ItNumber: ").Append(ItNumber).Append("\n");
            sb.Append("  DunsNumber: ").Append(DunsNumber).Append("\n");
            sb.Append("  InfoDate: ").Append(InfoDate).Append("\n");
            sb.Append("  RegistrationNumber: ").Append(RegistrationNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialAffiliations);
        }

        /// <summary>
        /// Returns true if TransunionCommercialAffiliations instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialAffiliations to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialAffiliations input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MajorProduct == input.MajorProduct ||
                    (this.MajorProduct != null &&
                    this.MajorProduct.Equals(input.MajorProduct))
                ) && 
                (
                    this.RelationshipType == input.RelationshipType ||
                    (this.RelationshipType != null &&
                    this.RelationshipType.Equals(input.RelationshipType))
                ) && 
                (
                    this.StartDate == input.StartDate ||
                    (this.StartDate != null &&
                    this.StartDate.Equals(input.StartDate))
                ) && 
                (
                    this.EndDate == input.EndDate ||
                    (this.EndDate != null &&
                    this.EndDate.Equals(input.EndDate))
                ) && 
                (
                    this.PercentShare == input.PercentShare ||
                    (this.PercentShare != null &&
                    this.PercentShare.Equals(input.PercentShare))
                ) && 
                (
                    this.Comment == input.Comment ||
                    (this.Comment != null &&
                    this.Comment.Equals(input.Comment))
                ) && 
                (
                    this.ObjectName == input.ObjectName ||
                    (this.ObjectName != null &&
                    this.ObjectName.Equals(input.ObjectName))
                ) && 
                (
                    this.ObjectTown == input.ObjectTown ||
                    (this.ObjectTown != null &&
                    this.ObjectTown.Equals(input.ObjectTown))
                ) && 
                (
                    this.ObjectCountry == input.ObjectCountry ||
                    (this.ObjectCountry != null &&
                    this.ObjectCountry.Equals(input.ObjectCountry))
                ) && 
                (
                    this.ItNumber == input.ItNumber ||
                    (this.ItNumber != null &&
                    this.ItNumber.Equals(input.ItNumber))
                ) && 
                (
                    this.DunsNumber == input.DunsNumber ||
                    (this.DunsNumber != null &&
                    this.DunsNumber.Equals(input.DunsNumber))
                ) && 
                (
                    this.InfoDate == input.InfoDate ||
                    (this.InfoDate != null &&
                    this.InfoDate.Equals(input.InfoDate))
                ) && 
                (
                    this.RegistrationNumber == input.RegistrationNumber ||
                    (this.RegistrationNumber != null &&
                    this.RegistrationNumber.Equals(input.RegistrationNumber))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MajorProduct != null)
                    hashCode = hashCode * 59 + this.MajorProduct.GetHashCode();
                if (this.RelationshipType != null)
                    hashCode = hashCode * 59 + this.RelationshipType.GetHashCode();
                if (this.StartDate != null)
                    hashCode = hashCode * 59 + this.StartDate.GetHashCode();
                if (this.EndDate != null)
                    hashCode = hashCode * 59 + this.EndDate.GetHashCode();
                if (this.PercentShare != null)
                    hashCode = hashCode * 59 + this.PercentShare.GetHashCode();
                if (this.Comment != null)
                    hashCode = hashCode * 59 + this.Comment.GetHashCode();
                if (this.ObjectName != null)
                    hashCode = hashCode * 59 + this.ObjectName.GetHashCode();
                if (this.ObjectTown != null)
                    hashCode = hashCode * 59 + this.ObjectTown.GetHashCode();
                if (this.ObjectCountry != null)
                    hashCode = hashCode * 59 + this.ObjectCountry.GetHashCode();
                if (this.ItNumber != null)
                    hashCode = hashCode * 59 + this.ItNumber.GetHashCode();
                if (this.DunsNumber != null)
                    hashCode = hashCode * 59 + this.DunsNumber.GetHashCode();
                if (this.InfoDate != null)
                    hashCode = hashCode * 59 + this.InfoDate.GetHashCode();
                if (this.RegistrationNumber != null)
                    hashCode = hashCode * 59 + this.RegistrationNumber.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
