/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118TraceInformationTI
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118TraceInformationTI :  IEquatable<TransunionConsumer118TraceInformationTI>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118TraceInformationTI" /> class.
        /// </summary>
        /// <param name="oSearchType">oSearchType.</param>
        /// <param name="oTicketNumber">oTicketNumber.</param>
        /// <param name="oMoreDetails">oMoreDetails.</param>
        /// <param name="oErrorMessage">oErrorMessage.</param>
        /// <param name="oArrayOccurance">oArrayOccurance.</param>
        public TransunionConsumer118TraceInformationTI(string oSearchType = default(string), string oTicketNumber = default(string), string oMoreDetails = default(string), string oErrorMessage = default(string), string oArrayOccurance = default(string))
        {
            this.OSearchType = oSearchType;
            this.OTicketNumber = oTicketNumber;
            this.OMoreDetails = oMoreDetails;
            this.OErrorMessage = oErrorMessage;
            this.OArrayOccurance = oArrayOccurance;
            this.OSearchType = oSearchType;
            this.OTicketNumber = oTicketNumber;
            this.OMoreDetails = oMoreDetails;
            this.OErrorMessage = oErrorMessage;
            this.OArrayOccurance = oArrayOccurance;
        }

        /// <summary>
        /// Gets or Sets OSearchType
        /// </summary>
        [DataMember(Name="oSearchType", EmitDefaultValue=true)]
        public string OSearchType { get; set; }

        /// <summary>
        /// Gets or Sets OTicketNumber
        /// </summary>
        [DataMember(Name="oTicketNumber", EmitDefaultValue=true)]
        public string OTicketNumber { get; set; }

        /// <summary>
        /// Gets or Sets OMoreDetails
        /// </summary>
        [DataMember(Name="oMoreDetails", EmitDefaultValue=true)]
        public string OMoreDetails { get; set; }

        /// <summary>
        /// Gets or Sets OErrorMessage
        /// </summary>
        [DataMember(Name="oErrorMessage", EmitDefaultValue=true)]
        public string OErrorMessage { get; set; }

        /// <summary>
        /// Gets or Sets OArrayOccurance
        /// </summary>
        [DataMember(Name="oArrayOccurance", EmitDefaultValue=true)]
        public string OArrayOccurance { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118TraceInformationTI {\n");
            sb.Append("  OSearchType: ").Append(OSearchType).Append("\n");
            sb.Append("  OTicketNumber: ").Append(OTicketNumber).Append("\n");
            sb.Append("  OMoreDetails: ").Append(OMoreDetails).Append("\n");
            sb.Append("  OErrorMessage: ").Append(OErrorMessage).Append("\n");
            sb.Append("  OArrayOccurance: ").Append(OArrayOccurance).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118TraceInformationTI);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118TraceInformationTI instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118TraceInformationTI to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118TraceInformationTI input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OSearchType == input.OSearchType ||
                    (this.OSearchType != null &&
                    this.OSearchType.Equals(input.OSearchType))
                ) && 
                (
                    this.OTicketNumber == input.OTicketNumber ||
                    (this.OTicketNumber != null &&
                    this.OTicketNumber.Equals(input.OTicketNumber))
                ) && 
                (
                    this.OMoreDetails == input.OMoreDetails ||
                    (this.OMoreDetails != null &&
                    this.OMoreDetails.Equals(input.OMoreDetails))
                ) && 
                (
                    this.OErrorMessage == input.OErrorMessage ||
                    (this.OErrorMessage != null &&
                    this.OErrorMessage.Equals(input.OErrorMessage))
                ) && 
                (
                    this.OArrayOccurance == input.OArrayOccurance ||
                    (this.OArrayOccurance != null &&
                    this.OArrayOccurance.Equals(input.OArrayOccurance))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OSearchType != null)
                    hashCode = hashCode * 59 + this.OSearchType.GetHashCode();
                if (this.OTicketNumber != null)
                    hashCode = hashCode * 59 + this.OTicketNumber.GetHashCode();
                if (this.OMoreDetails != null)
                    hashCode = hashCode * 59 + this.OMoreDetails.GetHashCode();
                if (this.OErrorMessage != null)
                    hashCode = hashCode * 59 + this.OErrorMessage.GetHashCode();
                if (this.OArrayOccurance != null)
                    hashCode = hashCode * 59 + this.OArrayOccurance.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
