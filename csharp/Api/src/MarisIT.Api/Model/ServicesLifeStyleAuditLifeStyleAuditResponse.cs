/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// ServicesLifeStyleAuditLifeStyleAuditResponse
    /// </summary>
    [DataContract]
    public partial class ServicesLifeStyleAuditLifeStyleAuditResponse :  IEquatable<ServicesLifeStyleAuditLifeStyleAuditResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServicesLifeStyleAuditLifeStyleAuditResponse" /> class.
        /// </summary>
        /// <param name="verification">verification.</param>
        /// <param name="consumerCredit">consumerCredit.</param>
        /// <param name="income">income.</param>
        /// <param name="getScore">getScore.</param>
        /// <param name="safps">safps.</param>
        /// <param name="biometric">biometric.</param>
        public ServicesLifeStyleAuditLifeStyleAuditResponse(XdsHomeAffairs verification = default(XdsHomeAffairs), XdsConsumer consumerCredit = default(XdsConsumer), XdsXdsIncomePredictorResponse income = default(XdsXdsIncomePredictorResponse), CompuscanGetScoreResult getScore = default(CompuscanGetScoreResult), List<SafpsDetailedSearchResponse> safps = default(List<SafpsDetailedSearchResponse>), XdsHomeAffairs biometric = default(XdsHomeAffairs))
        {
            this.Safps = safps;
            this.Verification = verification;
            this.ConsumerCredit = consumerCredit;
            this.Income = income;
            this.GetScore = getScore;
            this.Safps = safps;
            this.Biometric = biometric;
        }

        /// <summary>
        /// Gets or Sets Verification
        /// </summary>
        [DataMember(Name="verification", EmitDefaultValue=false)]
        public XdsHomeAffairs Verification { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerCredit
        /// </summary>
        [DataMember(Name="consumerCredit", EmitDefaultValue=false)]
        public XdsConsumer ConsumerCredit { get; set; }

        /// <summary>
        /// Gets or Sets Income
        /// </summary>
        [DataMember(Name="income", EmitDefaultValue=false)]
        public XdsXdsIncomePredictorResponse Income { get; set; }

        /// <summary>
        /// Gets or Sets GetScore
        /// </summary>
        [DataMember(Name="getScore", EmitDefaultValue=false)]
        public CompuscanGetScoreResult GetScore { get; set; }

        /// <summary>
        /// Gets or Sets Safps
        /// </summary>
        [DataMember(Name="safps", EmitDefaultValue=true)]
        public List<SafpsDetailedSearchResponse> Safps { get; set; }

        /// <summary>
        /// Gets or Sets Biometric
        /// </summary>
        [DataMember(Name="biometric", EmitDefaultValue=false)]
        public XdsHomeAffairs Biometric { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ServicesLifeStyleAuditLifeStyleAuditResponse {\n");
            sb.Append("  Verification: ").Append(Verification).Append("\n");
            sb.Append("  ConsumerCredit: ").Append(ConsumerCredit).Append("\n");
            sb.Append("  Income: ").Append(Income).Append("\n");
            sb.Append("  GetScore: ").Append(GetScore).Append("\n");
            sb.Append("  Safps: ").Append(Safps).Append("\n");
            sb.Append("  Biometric: ").Append(Biometric).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ServicesLifeStyleAuditLifeStyleAuditResponse);
        }

        /// <summary>
        /// Returns true if ServicesLifeStyleAuditLifeStyleAuditResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of ServicesLifeStyleAuditLifeStyleAuditResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ServicesLifeStyleAuditLifeStyleAuditResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Verification == input.Verification ||
                    (this.Verification != null &&
                    this.Verification.Equals(input.Verification))
                ) && 
                (
                    this.ConsumerCredit == input.ConsumerCredit ||
                    (this.ConsumerCredit != null &&
                    this.ConsumerCredit.Equals(input.ConsumerCredit))
                ) && 
                (
                    this.Income == input.Income ||
                    (this.Income != null &&
                    this.Income.Equals(input.Income))
                ) && 
                (
                    this.GetScore == input.GetScore ||
                    (this.GetScore != null &&
                    this.GetScore.Equals(input.GetScore))
                ) && 
                (
                    this.Safps == input.Safps ||
                    this.Safps != null &&
                    input.Safps != null &&
                    this.Safps.SequenceEqual(input.Safps)
                ) && 
                (
                    this.Biometric == input.Biometric ||
                    (this.Biometric != null &&
                    this.Biometric.Equals(input.Biometric))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Verification != null)
                    hashCode = hashCode * 59 + this.Verification.GetHashCode();
                if (this.ConsumerCredit != null)
                    hashCode = hashCode * 59 + this.ConsumerCredit.GetHashCode();
                if (this.Income != null)
                    hashCode = hashCode * 59 + this.Income.GetHashCode();
                if (this.GetScore != null)
                    hashCode = hashCode * 59 + this.GetScore.GetHashCode();
                if (this.Safps != null)
                    hashCode = hashCode * 59 + this.Safps.GetHashCode();
                if (this.Biometric != null)
                    hashCode = hashCode * 59 + this.Biometric.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
