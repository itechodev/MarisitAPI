/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// XdsConsumerIdentityVerification
    /// </summary>
    [DataContract]
    public partial class XdsConsumerIdentityVerification :  IEquatable<XdsConsumerIdentityVerification>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XdsConsumerIdentityVerification" /> class.
        /// </summary>
        /// <param name="displayText">displayText.</param>
        /// <param name="homeAffairsCauseOfDeath">homeAffairsCauseOfDeath.</param>
        /// <param name="homeAffairsDeceasedDate">homeAffairsDeceasedDate.</param>
        /// <param name="homeAffairsDeceasedStatus">homeAffairsDeceasedStatus.</param>
        /// <param name="homeAffairsFirstName">homeAffairsFirstName.</param>
        /// <param name="homeAffairsMaidenname">homeAffairsMaidenname.</param>
        /// <param name="homeAffairsSurname">homeAffairsSurname.</param>
        /// <param name="idNo">idNo.</param>
        /// <param name="xdsDeceasedDate">xdsDeceasedDate.</param>
        /// <param name="xdsDeceasedStatus">xdsDeceasedStatus.</param>
        public XdsConsumerIdentityVerification(string displayText = default(string), string homeAffairsCauseOfDeath = default(string), string homeAffairsDeceasedDate = default(string), string homeAffairsDeceasedStatus = default(string), string homeAffairsFirstName = default(string), string homeAffairsMaidenname = default(string), string homeAffairsSurname = default(string), string idNo = default(string), string xdsDeceasedDate = default(string), string xdsDeceasedStatus = default(string))
        {
            this.DisplayText = displayText;
            this.HomeAffairsCauseOfDeath = homeAffairsCauseOfDeath;
            this.HomeAffairsDeceasedDate = homeAffairsDeceasedDate;
            this.HomeAffairsDeceasedStatus = homeAffairsDeceasedStatus;
            this.HomeAffairsFirstName = homeAffairsFirstName;
            this.HomeAffairsMaidenname = homeAffairsMaidenname;
            this.HomeAffairsSurname = homeAffairsSurname;
            this.IdNo = idNo;
            this.XdsDeceasedDate = xdsDeceasedDate;
            this.XdsDeceasedStatus = xdsDeceasedStatus;
            this.DisplayText = displayText;
            this.HomeAffairsCauseOfDeath = homeAffairsCauseOfDeath;
            this.HomeAffairsDeceasedDate = homeAffairsDeceasedDate;
            this.HomeAffairsDeceasedStatus = homeAffairsDeceasedStatus;
            this.HomeAffairsFirstName = homeAffairsFirstName;
            this.HomeAffairsMaidenname = homeAffairsMaidenname;
            this.HomeAffairsSurname = homeAffairsSurname;
            this.IdNo = idNo;
            this.XdsDeceasedDate = xdsDeceasedDate;
            this.XdsDeceasedStatus = xdsDeceasedStatus;
        }

        /// <summary>
        /// Gets or Sets DisplayText
        /// </summary>
        [DataMember(Name="displayText", EmitDefaultValue=true)]
        public string DisplayText { get; set; }

        /// <summary>
        /// Gets or Sets HomeAffairsCauseOfDeath
        /// </summary>
        [DataMember(Name="homeAffairsCauseOfDeath", EmitDefaultValue=true)]
        public string HomeAffairsCauseOfDeath { get; set; }

        /// <summary>
        /// Gets or Sets HomeAffairsDeceasedDate
        /// </summary>
        [DataMember(Name="homeAffairsDeceasedDate", EmitDefaultValue=true)]
        public string HomeAffairsDeceasedDate { get; set; }

        /// <summary>
        /// Gets or Sets HomeAffairsDeceasedStatus
        /// </summary>
        [DataMember(Name="homeAffairsDeceasedStatus", EmitDefaultValue=true)]
        public string HomeAffairsDeceasedStatus { get; set; }

        /// <summary>
        /// Gets or Sets HomeAffairsFirstName
        /// </summary>
        [DataMember(Name="homeAffairsFirstName", EmitDefaultValue=true)]
        public string HomeAffairsFirstName { get; set; }

        /// <summary>
        /// Gets or Sets HomeAffairsMaidenname
        /// </summary>
        [DataMember(Name="homeAffairsMaidenname", EmitDefaultValue=true)]
        public string HomeAffairsMaidenname { get; set; }

        /// <summary>
        /// Gets or Sets HomeAffairsSurname
        /// </summary>
        [DataMember(Name="homeAffairsSurname", EmitDefaultValue=true)]
        public string HomeAffairsSurname { get; set; }

        /// <summary>
        /// Gets or Sets IdNo
        /// </summary>
        [DataMember(Name="idNo", EmitDefaultValue=true)]
        public string IdNo { get; set; }

        /// <summary>
        /// Gets or Sets XdsDeceasedDate
        /// </summary>
        [DataMember(Name="xdsDeceasedDate", EmitDefaultValue=true)]
        public string XdsDeceasedDate { get; set; }

        /// <summary>
        /// Gets or Sets XdsDeceasedStatus
        /// </summary>
        [DataMember(Name="xdsDeceasedStatus", EmitDefaultValue=true)]
        public string XdsDeceasedStatus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class XdsConsumerIdentityVerification {\n");
            sb.Append("  DisplayText: ").Append(DisplayText).Append("\n");
            sb.Append("  HomeAffairsCauseOfDeath: ").Append(HomeAffairsCauseOfDeath).Append("\n");
            sb.Append("  HomeAffairsDeceasedDate: ").Append(HomeAffairsDeceasedDate).Append("\n");
            sb.Append("  HomeAffairsDeceasedStatus: ").Append(HomeAffairsDeceasedStatus).Append("\n");
            sb.Append("  HomeAffairsFirstName: ").Append(HomeAffairsFirstName).Append("\n");
            sb.Append("  HomeAffairsMaidenname: ").Append(HomeAffairsMaidenname).Append("\n");
            sb.Append("  HomeAffairsSurname: ").Append(HomeAffairsSurname).Append("\n");
            sb.Append("  IdNo: ").Append(IdNo).Append("\n");
            sb.Append("  XdsDeceasedDate: ").Append(XdsDeceasedDate).Append("\n");
            sb.Append("  XdsDeceasedStatus: ").Append(XdsDeceasedStatus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as XdsConsumerIdentityVerification);
        }

        /// <summary>
        /// Returns true if XdsConsumerIdentityVerification instances are equal
        /// </summary>
        /// <param name="input">Instance of XdsConsumerIdentityVerification to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(XdsConsumerIdentityVerification input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DisplayText == input.DisplayText ||
                    (this.DisplayText != null &&
                    this.DisplayText.Equals(input.DisplayText))
                ) && 
                (
                    this.HomeAffairsCauseOfDeath == input.HomeAffairsCauseOfDeath ||
                    (this.HomeAffairsCauseOfDeath != null &&
                    this.HomeAffairsCauseOfDeath.Equals(input.HomeAffairsCauseOfDeath))
                ) && 
                (
                    this.HomeAffairsDeceasedDate == input.HomeAffairsDeceasedDate ||
                    (this.HomeAffairsDeceasedDate != null &&
                    this.HomeAffairsDeceasedDate.Equals(input.HomeAffairsDeceasedDate))
                ) && 
                (
                    this.HomeAffairsDeceasedStatus == input.HomeAffairsDeceasedStatus ||
                    (this.HomeAffairsDeceasedStatus != null &&
                    this.HomeAffairsDeceasedStatus.Equals(input.HomeAffairsDeceasedStatus))
                ) && 
                (
                    this.HomeAffairsFirstName == input.HomeAffairsFirstName ||
                    (this.HomeAffairsFirstName != null &&
                    this.HomeAffairsFirstName.Equals(input.HomeAffairsFirstName))
                ) && 
                (
                    this.HomeAffairsMaidenname == input.HomeAffairsMaidenname ||
                    (this.HomeAffairsMaidenname != null &&
                    this.HomeAffairsMaidenname.Equals(input.HomeAffairsMaidenname))
                ) && 
                (
                    this.HomeAffairsSurname == input.HomeAffairsSurname ||
                    (this.HomeAffairsSurname != null &&
                    this.HomeAffairsSurname.Equals(input.HomeAffairsSurname))
                ) && 
                (
                    this.IdNo == input.IdNo ||
                    (this.IdNo != null &&
                    this.IdNo.Equals(input.IdNo))
                ) && 
                (
                    this.XdsDeceasedDate == input.XdsDeceasedDate ||
                    (this.XdsDeceasedDate != null &&
                    this.XdsDeceasedDate.Equals(input.XdsDeceasedDate))
                ) && 
                (
                    this.XdsDeceasedStatus == input.XdsDeceasedStatus ||
                    (this.XdsDeceasedStatus != null &&
                    this.XdsDeceasedStatus.Equals(input.XdsDeceasedStatus))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DisplayText != null)
                    hashCode = hashCode * 59 + this.DisplayText.GetHashCode();
                if (this.HomeAffairsCauseOfDeath != null)
                    hashCode = hashCode * 59 + this.HomeAffairsCauseOfDeath.GetHashCode();
                if (this.HomeAffairsDeceasedDate != null)
                    hashCode = hashCode * 59 + this.HomeAffairsDeceasedDate.GetHashCode();
                if (this.HomeAffairsDeceasedStatus != null)
                    hashCode = hashCode * 59 + this.HomeAffairsDeceasedStatus.GetHashCode();
                if (this.HomeAffairsFirstName != null)
                    hashCode = hashCode * 59 + this.HomeAffairsFirstName.GetHashCode();
                if (this.HomeAffairsMaidenname != null)
                    hashCode = hashCode * 59 + this.HomeAffairsMaidenname.GetHashCode();
                if (this.HomeAffairsSurname != null)
                    hashCode = hashCode * 59 + this.HomeAffairsSurname.GetHashCode();
                if (this.IdNo != null)
                    hashCode = hashCode * 59 + this.IdNo.GetHashCode();
                if (this.XdsDeceasedDate != null)
                    hashCode = hashCode * 59 + this.XdsDeceasedDate.GetHashCode();
                if (this.XdsDeceasedStatus != null)
                    hashCode = hashCode * 59 + this.XdsDeceasedStatus.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
