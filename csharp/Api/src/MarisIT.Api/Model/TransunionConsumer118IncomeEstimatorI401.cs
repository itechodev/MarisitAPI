/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118IncomeEstimatorI401
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118IncomeEstimatorI401 :  IEquatable<TransunionConsumer118IncomeEstimatorI401>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118IncomeEstimatorI401" /> class.
        /// </summary>
        /// <param name="scoreVersion">scoreVersion.</param>
        /// <param name="lineNumber">lineNumber.</param>
        /// <param name="consumerNo">consumerNo.</param>
        /// <param name="variableCount">variableCount.</param>
        /// <param name="headingLength">headingLength.</param>
        /// <param name="incomeEstimatorI4Variable">incomeEstimatorI4Variable.</param>
        /// <param name="ieData">ieData.</param>
        public TransunionConsumer118IncomeEstimatorI401(string scoreVersion = default(string), int lineNumber = default(int), string consumerNo = default(string), int variableCount = default(int), int headingLength = default(int), List<TransunionConsumer118IncomeEstimatorVariableI401> incomeEstimatorI4Variable = default(List<TransunionConsumer118IncomeEstimatorVariableI401>), Object ieData = default(Object))
        {
            this.ScoreVersion = scoreVersion;
            this.ConsumerNo = consumerNo;
            this.IncomeEstimatorI4Variable = incomeEstimatorI4Variable;
            this.IeData = ieData;
            this.ScoreVersion = scoreVersion;
            this.LineNumber = lineNumber;
            this.ConsumerNo = consumerNo;
            this.VariableCount = variableCount;
            this.HeadingLength = headingLength;
            this.IncomeEstimatorI4Variable = incomeEstimatorI4Variable;
            this.IeData = ieData;
        }

        /// <summary>
        /// Gets or Sets ScoreVersion
        /// </summary>
        [DataMember(Name="scoreVersion", EmitDefaultValue=true)]
        public string ScoreVersion { get; set; }

        /// <summary>
        /// Gets or Sets LineNumber
        /// </summary>
        [DataMember(Name="lineNumber", EmitDefaultValue=false)]
        public int LineNumber { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerNo
        /// </summary>
        [DataMember(Name="consumerNo", EmitDefaultValue=true)]
        public string ConsumerNo { get; set; }

        /// <summary>
        /// Gets or Sets VariableCount
        /// </summary>
        [DataMember(Name="variableCount", EmitDefaultValue=false)]
        public int VariableCount { get; set; }

        /// <summary>
        /// Gets or Sets HeadingLength
        /// </summary>
        [DataMember(Name="headingLength", EmitDefaultValue=false)]
        public int HeadingLength { get; set; }

        /// <summary>
        /// Gets or Sets IncomeEstimatorI4Variable
        /// </summary>
        [DataMember(Name="incomeEstimatorI4Variable", EmitDefaultValue=true)]
        public List<TransunionConsumer118IncomeEstimatorVariableI401> IncomeEstimatorI4Variable { get; set; }

        /// <summary>
        /// Gets or Sets IeData
        /// </summary>
        [DataMember(Name="ieData", EmitDefaultValue=true)]
        public Object IeData { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118IncomeEstimatorI401 {\n");
            sb.Append("  ScoreVersion: ").Append(ScoreVersion).Append("\n");
            sb.Append("  LineNumber: ").Append(LineNumber).Append("\n");
            sb.Append("  ConsumerNo: ").Append(ConsumerNo).Append("\n");
            sb.Append("  VariableCount: ").Append(VariableCount).Append("\n");
            sb.Append("  HeadingLength: ").Append(HeadingLength).Append("\n");
            sb.Append("  IncomeEstimatorI4Variable: ").Append(IncomeEstimatorI4Variable).Append("\n");
            sb.Append("  IeData: ").Append(IeData).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118IncomeEstimatorI401);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118IncomeEstimatorI401 instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118IncomeEstimatorI401 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118IncomeEstimatorI401 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ScoreVersion == input.ScoreVersion ||
                    (this.ScoreVersion != null &&
                    this.ScoreVersion.Equals(input.ScoreVersion))
                ) && 
                (
                    this.LineNumber == input.LineNumber ||
                    (this.LineNumber != null &&
                    this.LineNumber.Equals(input.LineNumber))
                ) && 
                (
                    this.ConsumerNo == input.ConsumerNo ||
                    (this.ConsumerNo != null &&
                    this.ConsumerNo.Equals(input.ConsumerNo))
                ) && 
                (
                    this.VariableCount == input.VariableCount ||
                    (this.VariableCount != null &&
                    this.VariableCount.Equals(input.VariableCount))
                ) && 
                (
                    this.HeadingLength == input.HeadingLength ||
                    (this.HeadingLength != null &&
                    this.HeadingLength.Equals(input.HeadingLength))
                ) && 
                (
                    this.IncomeEstimatorI4Variable == input.IncomeEstimatorI4Variable ||
                    this.IncomeEstimatorI4Variable != null &&
                    input.IncomeEstimatorI4Variable != null &&
                    this.IncomeEstimatorI4Variable.SequenceEqual(input.IncomeEstimatorI4Variable)
                ) && 
                (
                    this.IeData == input.IeData ||
                    (this.IeData != null &&
                    this.IeData.Equals(input.IeData))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ScoreVersion != null)
                    hashCode = hashCode * 59 + this.ScoreVersion.GetHashCode();
                if (this.LineNumber != null)
                    hashCode = hashCode * 59 + this.LineNumber.GetHashCode();
                if (this.ConsumerNo != null)
                    hashCode = hashCode * 59 + this.ConsumerNo.GetHashCode();
                if (this.VariableCount != null)
                    hashCode = hashCode * 59 + this.VariableCount.GetHashCode();
                if (this.HeadingLength != null)
                    hashCode = hashCode * 59 + this.HeadingLength.GetHashCode();
                if (this.IncomeEstimatorI4Variable != null)
                    hashCode = hashCode * 59 + this.IncomeEstimatorI4Variable.GetHashCode();
                if (this.IeData != null)
                    hashCode = hashCode * 59 + this.IeData.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
