/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118EvolutionEN01
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118EvolutionEN01 :  IEquatable<TransunionConsumer118EvolutionEN01>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118EvolutionEN01" /> class.
        /// </summary>
        /// <param name="consumerNo">consumerNo.</param>
        /// <param name="dateOfEnquiry">dateOfEnquiry.</param>
        /// <param name="enqSubscriberName">enqSubscriberName.</param>
        /// <param name="enqSubscriberContact">enqSubscriberContact.</param>
        /// <param name="enqTypeCd">enqTypeCd.</param>
        /// <param name="enqTypeDesc">enqTypeDesc.</param>
        /// <param name="ownAccount">ownAccount.</param>
        /// <param name="loanReasonCd">loanReasonCd.</param>
        /// <param name="loanReasonDesc">loanReasonDesc.</param>
        /// <param name="enqRefNo">enqRefNo.</param>
        /// <param name="industryCd">industryCd.</param>
        /// <param name="industryDesc">industryDesc.</param>
        /// <param name="message">message.</param>
        public TransunionConsumer118EvolutionEN01(string consumerNo = default(string), string dateOfEnquiry = default(string), string enqSubscriberName = default(string), string enqSubscriberContact = default(string), string enqTypeCd = default(string), string enqTypeDesc = default(string), string ownAccount = default(string), string loanReasonCd = default(string), string loanReasonDesc = default(string), string enqRefNo = default(string), string industryCd = default(string), string industryDesc = default(string), string message = default(string))
        {
            this.ConsumerNo = consumerNo;
            this.DateOfEnquiry = dateOfEnquiry;
            this.EnqSubscriberName = enqSubscriberName;
            this.EnqSubscriberContact = enqSubscriberContact;
            this.EnqTypeCd = enqTypeCd;
            this.EnqTypeDesc = enqTypeDesc;
            this.OwnAccount = ownAccount;
            this.LoanReasonCd = loanReasonCd;
            this.LoanReasonDesc = loanReasonDesc;
            this.EnqRefNo = enqRefNo;
            this.IndustryCd = industryCd;
            this.IndustryDesc = industryDesc;
            this.Message = message;
            this.ConsumerNo = consumerNo;
            this.DateOfEnquiry = dateOfEnquiry;
            this.EnqSubscriberName = enqSubscriberName;
            this.EnqSubscriberContact = enqSubscriberContact;
            this.EnqTypeCd = enqTypeCd;
            this.EnqTypeDesc = enqTypeDesc;
            this.OwnAccount = ownAccount;
            this.LoanReasonCd = loanReasonCd;
            this.LoanReasonDesc = loanReasonDesc;
            this.EnqRefNo = enqRefNo;
            this.IndustryCd = industryCd;
            this.IndustryDesc = industryDesc;
            this.Message = message;
        }

        /// <summary>
        /// Gets or Sets ConsumerNo
        /// </summary>
        [DataMember(Name="consumerNo", EmitDefaultValue=true)]
        public string ConsumerNo { get; set; }

        /// <summary>
        /// Gets or Sets DateOfEnquiry
        /// </summary>
        [DataMember(Name="date_of_enquiry", EmitDefaultValue=true)]
        public string DateOfEnquiry { get; set; }

        /// <summary>
        /// Gets or Sets EnqSubscriberName
        /// </summary>
        [DataMember(Name="enq_subscriber_name", EmitDefaultValue=true)]
        public string EnqSubscriberName { get; set; }

        /// <summary>
        /// Gets or Sets EnqSubscriberContact
        /// </summary>
        [DataMember(Name="enq_subscriber_contact", EmitDefaultValue=true)]
        public string EnqSubscriberContact { get; set; }

        /// <summary>
        /// Gets or Sets EnqTypeCd
        /// </summary>
        [DataMember(Name="enq_type_cd", EmitDefaultValue=true)]
        public string EnqTypeCd { get; set; }

        /// <summary>
        /// Gets or Sets EnqTypeDesc
        /// </summary>
        [DataMember(Name="enq_type_desc", EmitDefaultValue=true)]
        public string EnqTypeDesc { get; set; }

        /// <summary>
        /// Gets or Sets OwnAccount
        /// </summary>
        [DataMember(Name="own_account", EmitDefaultValue=true)]
        public string OwnAccount { get; set; }

        /// <summary>
        /// Gets or Sets LoanReasonCd
        /// </summary>
        [DataMember(Name="loan_reason_cd", EmitDefaultValue=true)]
        public string LoanReasonCd { get; set; }

        /// <summary>
        /// Gets or Sets LoanReasonDesc
        /// </summary>
        [DataMember(Name="loan_reason_desc", EmitDefaultValue=true)]
        public string LoanReasonDesc { get; set; }

        /// <summary>
        /// Gets or Sets EnqRefNo
        /// </summary>
        [DataMember(Name="enq_ref_no", EmitDefaultValue=true)]
        public string EnqRefNo { get; set; }

        /// <summary>
        /// Gets or Sets IndustryCd
        /// </summary>
        [DataMember(Name="industry_cd", EmitDefaultValue=true)]
        public string IndustryCd { get; set; }

        /// <summary>
        /// Gets or Sets IndustryDesc
        /// </summary>
        [DataMember(Name="industry_desc", EmitDefaultValue=true)]
        public string IndustryDesc { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name="message", EmitDefaultValue=true)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118EvolutionEN01 {\n");
            sb.Append("  ConsumerNo: ").Append(ConsumerNo).Append("\n");
            sb.Append("  DateOfEnquiry: ").Append(DateOfEnquiry).Append("\n");
            sb.Append("  EnqSubscriberName: ").Append(EnqSubscriberName).Append("\n");
            sb.Append("  EnqSubscriberContact: ").Append(EnqSubscriberContact).Append("\n");
            sb.Append("  EnqTypeCd: ").Append(EnqTypeCd).Append("\n");
            sb.Append("  EnqTypeDesc: ").Append(EnqTypeDesc).Append("\n");
            sb.Append("  OwnAccount: ").Append(OwnAccount).Append("\n");
            sb.Append("  LoanReasonCd: ").Append(LoanReasonCd).Append("\n");
            sb.Append("  LoanReasonDesc: ").Append(LoanReasonDesc).Append("\n");
            sb.Append("  EnqRefNo: ").Append(EnqRefNo).Append("\n");
            sb.Append("  IndustryCd: ").Append(IndustryCd).Append("\n");
            sb.Append("  IndustryDesc: ").Append(IndustryDesc).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118EvolutionEN01);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118EvolutionEN01 instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118EvolutionEN01 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118EvolutionEN01 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConsumerNo == input.ConsumerNo ||
                    (this.ConsumerNo != null &&
                    this.ConsumerNo.Equals(input.ConsumerNo))
                ) && 
                (
                    this.DateOfEnquiry == input.DateOfEnquiry ||
                    (this.DateOfEnquiry != null &&
                    this.DateOfEnquiry.Equals(input.DateOfEnquiry))
                ) && 
                (
                    this.EnqSubscriberName == input.EnqSubscriberName ||
                    (this.EnqSubscriberName != null &&
                    this.EnqSubscriberName.Equals(input.EnqSubscriberName))
                ) && 
                (
                    this.EnqSubscriberContact == input.EnqSubscriberContact ||
                    (this.EnqSubscriberContact != null &&
                    this.EnqSubscriberContact.Equals(input.EnqSubscriberContact))
                ) && 
                (
                    this.EnqTypeCd == input.EnqTypeCd ||
                    (this.EnqTypeCd != null &&
                    this.EnqTypeCd.Equals(input.EnqTypeCd))
                ) && 
                (
                    this.EnqTypeDesc == input.EnqTypeDesc ||
                    (this.EnqTypeDesc != null &&
                    this.EnqTypeDesc.Equals(input.EnqTypeDesc))
                ) && 
                (
                    this.OwnAccount == input.OwnAccount ||
                    (this.OwnAccount != null &&
                    this.OwnAccount.Equals(input.OwnAccount))
                ) && 
                (
                    this.LoanReasonCd == input.LoanReasonCd ||
                    (this.LoanReasonCd != null &&
                    this.LoanReasonCd.Equals(input.LoanReasonCd))
                ) && 
                (
                    this.LoanReasonDesc == input.LoanReasonDesc ||
                    (this.LoanReasonDesc != null &&
                    this.LoanReasonDesc.Equals(input.LoanReasonDesc))
                ) && 
                (
                    this.EnqRefNo == input.EnqRefNo ||
                    (this.EnqRefNo != null &&
                    this.EnqRefNo.Equals(input.EnqRefNo))
                ) && 
                (
                    this.IndustryCd == input.IndustryCd ||
                    (this.IndustryCd != null &&
                    this.IndustryCd.Equals(input.IndustryCd))
                ) && 
                (
                    this.IndustryDesc == input.IndustryDesc ||
                    (this.IndustryDesc != null &&
                    this.IndustryDesc.Equals(input.IndustryDesc))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConsumerNo != null)
                    hashCode = hashCode * 59 + this.ConsumerNo.GetHashCode();
                if (this.DateOfEnquiry != null)
                    hashCode = hashCode * 59 + this.DateOfEnquiry.GetHashCode();
                if (this.EnqSubscriberName != null)
                    hashCode = hashCode * 59 + this.EnqSubscriberName.GetHashCode();
                if (this.EnqSubscriberContact != null)
                    hashCode = hashCode * 59 + this.EnqSubscriberContact.GetHashCode();
                if (this.EnqTypeCd != null)
                    hashCode = hashCode * 59 + this.EnqTypeCd.GetHashCode();
                if (this.EnqTypeDesc != null)
                    hashCode = hashCode * 59 + this.EnqTypeDesc.GetHashCode();
                if (this.OwnAccount != null)
                    hashCode = hashCode * 59 + this.OwnAccount.GetHashCode();
                if (this.LoanReasonCd != null)
                    hashCode = hashCode * 59 + this.LoanReasonCd.GetHashCode();
                if (this.LoanReasonDesc != null)
                    hashCode = hashCode * 59 + this.LoanReasonDesc.GetHashCode();
                if (this.EnqRefNo != null)
                    hashCode = hashCode * 59 + this.EnqRefNo.GetHashCode();
                if (this.IndustryCd != null)
                    hashCode = hashCode * 59 + this.IndustryCd.GetHashCode();
                if (this.IndustryDesc != null)
                    hashCode = hashCode * 59 + this.IndustryDesc.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
