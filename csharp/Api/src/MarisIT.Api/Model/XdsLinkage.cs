/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// XdsLinkage
    /// </summary>
    [DataContract]
    public partial class XdsLinkage :  IEquatable<XdsLinkage>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XdsLinkage" /> class.
        /// </summary>
        /// <param name="confirmedLinkages">confirmedLinkages.</param>
        /// <param name="consumer">consumer.</param>
        /// <param name="consumerOther">consumerOther.</param>
        /// <param name="subscriberInputDetails">subscriberInputDetails.</param>
        /// <param name="subscriberInputDetailsOther">subscriberInputDetailsOther.</param>
        public XdsLinkage(XdsConfirmedLinkages confirmedLinkages = default(XdsConfirmedLinkages), XdsConsumer consumer = default(XdsConsumer), XdsConsumer consumerOther = default(XdsConsumer), XdsSubscriberInputDetails subscriberInputDetails = default(XdsSubscriberInputDetails), XdsSubscriberInputDetails subscriberInputDetailsOther = default(XdsSubscriberInputDetails))
        {
            this.ConfirmedLinkages = confirmedLinkages;
            this.Consumer = consumer;
            this.ConsumerOther = consumerOther;
            this.SubscriberInputDetails = subscriberInputDetails;
            this.SubscriberInputDetailsOther = subscriberInputDetailsOther;
        }

        /// <summary>
        /// Gets or Sets ConfirmedLinkages
        /// </summary>
        [DataMember(Name="confirmedLinkages", EmitDefaultValue=false)]
        public XdsConfirmedLinkages ConfirmedLinkages { get; set; }

        /// <summary>
        /// Gets or Sets Consumer
        /// </summary>
        [DataMember(Name="consumer", EmitDefaultValue=false)]
        public XdsConsumer Consumer { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerOther
        /// </summary>
        [DataMember(Name="consumerOther", EmitDefaultValue=false)]
        public XdsConsumer ConsumerOther { get; set; }

        /// <summary>
        /// Gets or Sets SubscriberInputDetails
        /// </summary>
        [DataMember(Name="subscriberInputDetails", EmitDefaultValue=false)]
        public XdsSubscriberInputDetails SubscriberInputDetails { get; set; }

        /// <summary>
        /// Gets or Sets SubscriberInputDetailsOther
        /// </summary>
        [DataMember(Name="subscriberInputDetailsOther", EmitDefaultValue=false)]
        public XdsSubscriberInputDetails SubscriberInputDetailsOther { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class XdsLinkage {\n");
            sb.Append("  ConfirmedLinkages: ").Append(ConfirmedLinkages).Append("\n");
            sb.Append("  Consumer: ").Append(Consumer).Append("\n");
            sb.Append("  ConsumerOther: ").Append(ConsumerOther).Append("\n");
            sb.Append("  SubscriberInputDetails: ").Append(SubscriberInputDetails).Append("\n");
            sb.Append("  SubscriberInputDetailsOther: ").Append(SubscriberInputDetailsOther).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as XdsLinkage);
        }

        /// <summary>
        /// Returns true if XdsLinkage instances are equal
        /// </summary>
        /// <param name="input">Instance of XdsLinkage to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(XdsLinkage input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConfirmedLinkages == input.ConfirmedLinkages ||
                    (this.ConfirmedLinkages != null &&
                    this.ConfirmedLinkages.Equals(input.ConfirmedLinkages))
                ) && 
                (
                    this.Consumer == input.Consumer ||
                    (this.Consumer != null &&
                    this.Consumer.Equals(input.Consumer))
                ) && 
                (
                    this.ConsumerOther == input.ConsumerOther ||
                    (this.ConsumerOther != null &&
                    this.ConsumerOther.Equals(input.ConsumerOther))
                ) && 
                (
                    this.SubscriberInputDetails == input.SubscriberInputDetails ||
                    (this.SubscriberInputDetails != null &&
                    this.SubscriberInputDetails.Equals(input.SubscriberInputDetails))
                ) && 
                (
                    this.SubscriberInputDetailsOther == input.SubscriberInputDetailsOther ||
                    (this.SubscriberInputDetailsOther != null &&
                    this.SubscriberInputDetailsOther.Equals(input.SubscriberInputDetailsOther))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConfirmedLinkages != null)
                    hashCode = hashCode * 59 + this.ConfirmedLinkages.GetHashCode();
                if (this.Consumer != null)
                    hashCode = hashCode * 59 + this.Consumer.GetHashCode();
                if (this.ConsumerOther != null)
                    hashCode = hashCode * 59 + this.ConsumerOther.GetHashCode();
                if (this.SubscriberInputDetails != null)
                    hashCode = hashCode * 59 + this.SubscriberInputDetails.GetHashCode();
                if (this.SubscriberInputDetailsOther != null)
                    hashCode = hashCode * 59 + this.SubscriberInputDetailsOther.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
