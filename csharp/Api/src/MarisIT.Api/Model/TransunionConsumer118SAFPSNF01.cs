/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118SAFPSNF01
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118SAFPSNF01 :  IEquatable<TransunionConsumer118SAFPSNF01>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118SAFPSNF01" /> class.
        /// </summary>
        /// <param name="fpsRefNo">fpsRefNo.</param>
        /// <param name="originatorRefNo">originatorRefNo.</param>
        /// <param name="memberRegNo">memberRegNo.</param>
        /// <param name="organisationName">organisationName.</param>
        /// <param name="organisationDivision">organisationDivision.</param>
        /// <param name="contactPhoneCode">contactPhoneCode.</param>
        /// <param name="contactPhoneNo">contactPhoneNo.</param>
        /// <param name="contactEmail">contactEmail.</param>
        /// <param name="nameDataOriginator">nameDataOriginator.</param>
        /// <param name="fraudCategory">fraudCategory.</param>
        /// <param name="fraudCaseDate">fraudCaseDate.</param>
        public TransunionConsumer118SAFPSNF01(string fpsRefNo = default(string), string originatorRefNo = default(string), string memberRegNo = default(string), string organisationName = default(string), string organisationDivision = default(string), string contactPhoneCode = default(string), string contactPhoneNo = default(string), string contactEmail = default(string), string nameDataOriginator = default(string), string fraudCategory = default(string), string fraudCaseDate = default(string))
        {
            this.FpsRefNo = fpsRefNo;
            this.OriginatorRefNo = originatorRefNo;
            this.MemberRegNo = memberRegNo;
            this.OrganisationName = organisationName;
            this.OrganisationDivision = organisationDivision;
            this.ContactPhoneCode = contactPhoneCode;
            this.ContactPhoneNo = contactPhoneNo;
            this.ContactEmail = contactEmail;
            this.NameDataOriginator = nameDataOriginator;
            this.FraudCategory = fraudCategory;
            this.FraudCaseDate = fraudCaseDate;
            this.FpsRefNo = fpsRefNo;
            this.OriginatorRefNo = originatorRefNo;
            this.MemberRegNo = memberRegNo;
            this.OrganisationName = organisationName;
            this.OrganisationDivision = organisationDivision;
            this.ContactPhoneCode = contactPhoneCode;
            this.ContactPhoneNo = contactPhoneNo;
            this.ContactEmail = contactEmail;
            this.NameDataOriginator = nameDataOriginator;
            this.FraudCategory = fraudCategory;
            this.FraudCaseDate = fraudCaseDate;
        }

        /// <summary>
        /// Gets or Sets FpsRefNo
        /// </summary>
        [DataMember(Name="fpsRefNo", EmitDefaultValue=true)]
        public string FpsRefNo { get; set; }

        /// <summary>
        /// Gets or Sets OriginatorRefNo
        /// </summary>
        [DataMember(Name="originatorRefNo", EmitDefaultValue=true)]
        public string OriginatorRefNo { get; set; }

        /// <summary>
        /// Gets or Sets MemberRegNo
        /// </summary>
        [DataMember(Name="memberRegNo", EmitDefaultValue=true)]
        public string MemberRegNo { get; set; }

        /// <summary>
        /// Gets or Sets OrganisationName
        /// </summary>
        [DataMember(Name="organisationName", EmitDefaultValue=true)]
        public string OrganisationName { get; set; }

        /// <summary>
        /// Gets or Sets OrganisationDivision
        /// </summary>
        [DataMember(Name="organisationDivision", EmitDefaultValue=true)]
        public string OrganisationDivision { get; set; }

        /// <summary>
        /// Gets or Sets ContactPhoneCode
        /// </summary>
        [DataMember(Name="contactPhoneCode", EmitDefaultValue=true)]
        public string ContactPhoneCode { get; set; }

        /// <summary>
        /// Gets or Sets ContactPhoneNo
        /// </summary>
        [DataMember(Name="contactPhoneNo", EmitDefaultValue=true)]
        public string ContactPhoneNo { get; set; }

        /// <summary>
        /// Gets or Sets ContactEmail
        /// </summary>
        [DataMember(Name="contactEmail", EmitDefaultValue=true)]
        public string ContactEmail { get; set; }

        /// <summary>
        /// Gets or Sets NameDataOriginator
        /// </summary>
        [DataMember(Name="nameDataOriginator", EmitDefaultValue=true)]
        public string NameDataOriginator { get; set; }

        /// <summary>
        /// Gets or Sets FraudCategory
        /// </summary>
        [DataMember(Name="fraudCategory", EmitDefaultValue=true)]
        public string FraudCategory { get; set; }

        /// <summary>
        /// Gets or Sets FraudCaseDate
        /// </summary>
        [DataMember(Name="fraudCaseDate", EmitDefaultValue=true)]
        public string FraudCaseDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118SAFPSNF01 {\n");
            sb.Append("  FpsRefNo: ").Append(FpsRefNo).Append("\n");
            sb.Append("  OriginatorRefNo: ").Append(OriginatorRefNo).Append("\n");
            sb.Append("  MemberRegNo: ").Append(MemberRegNo).Append("\n");
            sb.Append("  OrganisationName: ").Append(OrganisationName).Append("\n");
            sb.Append("  OrganisationDivision: ").Append(OrganisationDivision).Append("\n");
            sb.Append("  ContactPhoneCode: ").Append(ContactPhoneCode).Append("\n");
            sb.Append("  ContactPhoneNo: ").Append(ContactPhoneNo).Append("\n");
            sb.Append("  ContactEmail: ").Append(ContactEmail).Append("\n");
            sb.Append("  NameDataOriginator: ").Append(NameDataOriginator).Append("\n");
            sb.Append("  FraudCategory: ").Append(FraudCategory).Append("\n");
            sb.Append("  FraudCaseDate: ").Append(FraudCaseDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118SAFPSNF01);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118SAFPSNF01 instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118SAFPSNF01 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118SAFPSNF01 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.FpsRefNo == input.FpsRefNo ||
                    (this.FpsRefNo != null &&
                    this.FpsRefNo.Equals(input.FpsRefNo))
                ) && 
                (
                    this.OriginatorRefNo == input.OriginatorRefNo ||
                    (this.OriginatorRefNo != null &&
                    this.OriginatorRefNo.Equals(input.OriginatorRefNo))
                ) && 
                (
                    this.MemberRegNo == input.MemberRegNo ||
                    (this.MemberRegNo != null &&
                    this.MemberRegNo.Equals(input.MemberRegNo))
                ) && 
                (
                    this.OrganisationName == input.OrganisationName ||
                    (this.OrganisationName != null &&
                    this.OrganisationName.Equals(input.OrganisationName))
                ) && 
                (
                    this.OrganisationDivision == input.OrganisationDivision ||
                    (this.OrganisationDivision != null &&
                    this.OrganisationDivision.Equals(input.OrganisationDivision))
                ) && 
                (
                    this.ContactPhoneCode == input.ContactPhoneCode ||
                    (this.ContactPhoneCode != null &&
                    this.ContactPhoneCode.Equals(input.ContactPhoneCode))
                ) && 
                (
                    this.ContactPhoneNo == input.ContactPhoneNo ||
                    (this.ContactPhoneNo != null &&
                    this.ContactPhoneNo.Equals(input.ContactPhoneNo))
                ) && 
                (
                    this.ContactEmail == input.ContactEmail ||
                    (this.ContactEmail != null &&
                    this.ContactEmail.Equals(input.ContactEmail))
                ) && 
                (
                    this.NameDataOriginator == input.NameDataOriginator ||
                    (this.NameDataOriginator != null &&
                    this.NameDataOriginator.Equals(input.NameDataOriginator))
                ) && 
                (
                    this.FraudCategory == input.FraudCategory ||
                    (this.FraudCategory != null &&
                    this.FraudCategory.Equals(input.FraudCategory))
                ) && 
                (
                    this.FraudCaseDate == input.FraudCaseDate ||
                    (this.FraudCaseDate != null &&
                    this.FraudCaseDate.Equals(input.FraudCaseDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.FpsRefNo != null)
                    hashCode = hashCode * 59 + this.FpsRefNo.GetHashCode();
                if (this.OriginatorRefNo != null)
                    hashCode = hashCode * 59 + this.OriginatorRefNo.GetHashCode();
                if (this.MemberRegNo != null)
                    hashCode = hashCode * 59 + this.MemberRegNo.GetHashCode();
                if (this.OrganisationName != null)
                    hashCode = hashCode * 59 + this.OrganisationName.GetHashCode();
                if (this.OrganisationDivision != null)
                    hashCode = hashCode * 59 + this.OrganisationDivision.GetHashCode();
                if (this.ContactPhoneCode != null)
                    hashCode = hashCode * 59 + this.ContactPhoneCode.GetHashCode();
                if (this.ContactPhoneNo != null)
                    hashCode = hashCode * 59 + this.ContactPhoneNo.GetHashCode();
                if (this.ContactEmail != null)
                    hashCode = hashCode * 59 + this.ContactEmail.GetHashCode();
                if (this.NameDataOriginator != null)
                    hashCode = hashCode * 59 + this.NameDataOriginator.GetHashCode();
                if (this.FraudCategory != null)
                    hashCode = hashCode * 59 + this.FraudCategory.GetHashCode();
                if (this.FraudCaseDate != null)
                    hashCode = hashCode * 59 + this.FraudCaseDate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
