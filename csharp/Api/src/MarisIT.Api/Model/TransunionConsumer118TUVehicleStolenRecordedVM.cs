/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118TUVehicleStolenRecordedVM
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118TUVehicleStolenRecordedVM :  IEquatable<TransunionConsumer118TUVehicleStolenRecordedVM>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118TUVehicleStolenRecordedVM" /> class.
        /// </summary>
        /// <param name="recordDescription">recordDescription.</param>
        /// <param name="policeCaseNumber">policeCaseNumber.</param>
        /// <param name="policeStationName">policeStationName.</param>
        /// <param name="dateStolen">dateStolen.</param>
        /// <param name="timeStolen">timeStolen.</param>
        /// <param name="contactTelephoneNumber">contactTelephoneNumber.</param>
        /// <param name="alertReason">alertReason.</param>
        public TransunionConsumer118TUVehicleStolenRecordedVM(string recordDescription = default(string), string policeCaseNumber = default(string), string policeStationName = default(string), string dateStolen = default(string), string timeStolen = default(string), string contactTelephoneNumber = default(string), string alertReason = default(string))
        {
            this.RecordDescription = recordDescription;
            this.PoliceCaseNumber = policeCaseNumber;
            this.PoliceStationName = policeStationName;
            this.DateStolen = dateStolen;
            this.TimeStolen = timeStolen;
            this.ContactTelephoneNumber = contactTelephoneNumber;
            this.AlertReason = alertReason;
            this.RecordDescription = recordDescription;
            this.PoliceCaseNumber = policeCaseNumber;
            this.PoliceStationName = policeStationName;
            this.DateStolen = dateStolen;
            this.TimeStolen = timeStolen;
            this.ContactTelephoneNumber = contactTelephoneNumber;
            this.AlertReason = alertReason;
        }

        /// <summary>
        /// Gets or Sets RecordDescription
        /// </summary>
        [DataMember(Name="recordDescription", EmitDefaultValue=true)]
        public string RecordDescription { get; set; }

        /// <summary>
        /// Gets or Sets PoliceCaseNumber
        /// </summary>
        [DataMember(Name="policeCaseNumber", EmitDefaultValue=true)]
        public string PoliceCaseNumber { get; set; }

        /// <summary>
        /// Gets or Sets PoliceStationName
        /// </summary>
        [DataMember(Name="policeStationName", EmitDefaultValue=true)]
        public string PoliceStationName { get; set; }

        /// <summary>
        /// Gets or Sets DateStolen
        /// </summary>
        [DataMember(Name="dateStolen", EmitDefaultValue=true)]
        public string DateStolen { get; set; }

        /// <summary>
        /// Gets or Sets TimeStolen
        /// </summary>
        [DataMember(Name="timeStolen", EmitDefaultValue=true)]
        public string TimeStolen { get; set; }

        /// <summary>
        /// Gets or Sets ContactTelephoneNumber
        /// </summary>
        [DataMember(Name="contactTelephoneNumber", EmitDefaultValue=true)]
        public string ContactTelephoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets AlertReason
        /// </summary>
        [DataMember(Name="alertReason", EmitDefaultValue=true)]
        public string AlertReason { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118TUVehicleStolenRecordedVM {\n");
            sb.Append("  RecordDescription: ").Append(RecordDescription).Append("\n");
            sb.Append("  PoliceCaseNumber: ").Append(PoliceCaseNumber).Append("\n");
            sb.Append("  PoliceStationName: ").Append(PoliceStationName).Append("\n");
            sb.Append("  DateStolen: ").Append(DateStolen).Append("\n");
            sb.Append("  TimeStolen: ").Append(TimeStolen).Append("\n");
            sb.Append("  ContactTelephoneNumber: ").Append(ContactTelephoneNumber).Append("\n");
            sb.Append("  AlertReason: ").Append(AlertReason).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118TUVehicleStolenRecordedVM);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118TUVehicleStolenRecordedVM instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118TUVehicleStolenRecordedVM to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118TUVehicleStolenRecordedVM input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.RecordDescription == input.RecordDescription ||
                    (this.RecordDescription != null &&
                    this.RecordDescription.Equals(input.RecordDescription))
                ) && 
                (
                    this.PoliceCaseNumber == input.PoliceCaseNumber ||
                    (this.PoliceCaseNumber != null &&
                    this.PoliceCaseNumber.Equals(input.PoliceCaseNumber))
                ) && 
                (
                    this.PoliceStationName == input.PoliceStationName ||
                    (this.PoliceStationName != null &&
                    this.PoliceStationName.Equals(input.PoliceStationName))
                ) && 
                (
                    this.DateStolen == input.DateStolen ||
                    (this.DateStolen != null &&
                    this.DateStolen.Equals(input.DateStolen))
                ) && 
                (
                    this.TimeStolen == input.TimeStolen ||
                    (this.TimeStolen != null &&
                    this.TimeStolen.Equals(input.TimeStolen))
                ) && 
                (
                    this.ContactTelephoneNumber == input.ContactTelephoneNumber ||
                    (this.ContactTelephoneNumber != null &&
                    this.ContactTelephoneNumber.Equals(input.ContactTelephoneNumber))
                ) && 
                (
                    this.AlertReason == input.AlertReason ||
                    (this.AlertReason != null &&
                    this.AlertReason.Equals(input.AlertReason))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RecordDescription != null)
                    hashCode = hashCode * 59 + this.RecordDescription.GetHashCode();
                if (this.PoliceCaseNumber != null)
                    hashCode = hashCode * 59 + this.PoliceCaseNumber.GetHashCode();
                if (this.PoliceStationName != null)
                    hashCode = hashCode * 59 + this.PoliceStationName.GetHashCode();
                if (this.DateStolen != null)
                    hashCode = hashCode * 59 + this.DateStolen.GetHashCode();
                if (this.TimeStolen != null)
                    hashCode = hashCode * 59 + this.TimeStolen.GetHashCode();
                if (this.ContactTelephoneNumber != null)
                    hashCode = hashCode * 59 + this.ContactTelephoneNumber.GetHashCode();
                if (this.AlertReason != null)
                    hashCode = hashCode * 59 + this.AlertReason.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
