/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialConsumerHeaderC1
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialConsumerHeaderC1 :  IEquatable<TransunionCommercialConsumerHeaderC1>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialConsumerHeaderC1" /> class.
        /// </summary>
        /// <param name="segmentCode">segmentCode.</param>
        /// <param name="telWorkCode1">telWorkCode1.</param>
        /// <param name="telWorkNumber1">telWorkNumber1.</param>
        /// <param name="telHomeCode1">telHomeCode1.</param>
        /// <param name="telHomeNumber1">telHomeNumber1.</param>
        /// <param name="telWorkCode2">telWorkCode2.</param>
        /// <param name="telWorkNumber2">telWorkNumber2.</param>
        /// <param name="telHomeCode2">telHomeCode2.</param>
        /// <param name="telHomeNumber2">telHomeNumber2.</param>
        /// <param name="maritalStatus">maritalStatus.</param>
        /// <param name="deceasedDate">deceasedDate.</param>
        /// <param name="entryDate">entryDate.</param>
        public TransunionCommercialConsumerHeaderC1(string segmentCode = default(string), string telWorkCode1 = default(string), string telWorkNumber1 = default(string), string telHomeCode1 = default(string), string telHomeNumber1 = default(string), string telWorkCode2 = default(string), string telWorkNumber2 = default(string), string telHomeCode2 = default(string), string telHomeNumber2 = default(string), string maritalStatus = default(string), string deceasedDate = default(string), string entryDate = default(string))
        {
            this.SegmentCode = segmentCode;
            this.TelWorkCode1 = telWorkCode1;
            this.TelWorkNumber1 = telWorkNumber1;
            this.TelHomeCode1 = telHomeCode1;
            this.TelHomeNumber1 = telHomeNumber1;
            this.TelWorkCode2 = telWorkCode2;
            this.TelWorkNumber2 = telWorkNumber2;
            this.TelHomeCode2 = telHomeCode2;
            this.TelHomeNumber2 = telHomeNumber2;
            this.MaritalStatus = maritalStatus;
            this.DeceasedDate = deceasedDate;
            this.EntryDate = entryDate;
            this.SegmentCode = segmentCode;
            this.TelWorkCode1 = telWorkCode1;
            this.TelWorkNumber1 = telWorkNumber1;
            this.TelHomeCode1 = telHomeCode1;
            this.TelHomeNumber1 = telHomeNumber1;
            this.TelWorkCode2 = telWorkCode2;
            this.TelWorkNumber2 = telWorkNumber2;
            this.TelHomeCode2 = telHomeCode2;
            this.TelHomeNumber2 = telHomeNumber2;
            this.MaritalStatus = maritalStatus;
            this.DeceasedDate = deceasedDate;
            this.EntryDate = entryDate;
        }

        /// <summary>
        /// Gets or Sets SegmentCode
        /// </summary>
        [DataMember(Name="segmentCode", EmitDefaultValue=true)]
        public string SegmentCode { get; set; }

        /// <summary>
        /// Gets or Sets TelWorkCode1
        /// </summary>
        [DataMember(Name="telWorkCode1", EmitDefaultValue=true)]
        public string TelWorkCode1 { get; set; }

        /// <summary>
        /// Gets or Sets TelWorkNumber1
        /// </summary>
        [DataMember(Name="telWorkNumber1", EmitDefaultValue=true)]
        public string TelWorkNumber1 { get; set; }

        /// <summary>
        /// Gets or Sets TelHomeCode1
        /// </summary>
        [DataMember(Name="telHomeCode1", EmitDefaultValue=true)]
        public string TelHomeCode1 { get; set; }

        /// <summary>
        /// Gets or Sets TelHomeNumber1
        /// </summary>
        [DataMember(Name="telHomeNumber1", EmitDefaultValue=true)]
        public string TelHomeNumber1 { get; set; }

        /// <summary>
        /// Gets or Sets TelWorkCode2
        /// </summary>
        [DataMember(Name="telWorkCode2", EmitDefaultValue=true)]
        public string TelWorkCode2 { get; set; }

        /// <summary>
        /// Gets or Sets TelWorkNumber2
        /// </summary>
        [DataMember(Name="telWorkNumber2", EmitDefaultValue=true)]
        public string TelWorkNumber2 { get; set; }

        /// <summary>
        /// Gets or Sets TelHomeCode2
        /// </summary>
        [DataMember(Name="telHomeCode2", EmitDefaultValue=true)]
        public string TelHomeCode2 { get; set; }

        /// <summary>
        /// Gets or Sets TelHomeNumber2
        /// </summary>
        [DataMember(Name="telHomeNumber2", EmitDefaultValue=true)]
        public string TelHomeNumber2 { get; set; }

        /// <summary>
        /// Gets or Sets MaritalStatus
        /// </summary>
        [DataMember(Name="maritalStatus", EmitDefaultValue=true)]
        public string MaritalStatus { get; set; }

        /// <summary>
        /// Gets or Sets DeceasedDate
        /// </summary>
        [DataMember(Name="deceasedDate", EmitDefaultValue=true)]
        public string DeceasedDate { get; set; }

        /// <summary>
        /// Gets or Sets EntryDate
        /// </summary>
        [DataMember(Name="entryDate", EmitDefaultValue=true)]
        public string EntryDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialConsumerHeaderC1 {\n");
            sb.Append("  SegmentCode: ").Append(SegmentCode).Append("\n");
            sb.Append("  TelWorkCode1: ").Append(TelWorkCode1).Append("\n");
            sb.Append("  TelWorkNumber1: ").Append(TelWorkNumber1).Append("\n");
            sb.Append("  TelHomeCode1: ").Append(TelHomeCode1).Append("\n");
            sb.Append("  TelHomeNumber1: ").Append(TelHomeNumber1).Append("\n");
            sb.Append("  TelWorkCode2: ").Append(TelWorkCode2).Append("\n");
            sb.Append("  TelWorkNumber2: ").Append(TelWorkNumber2).Append("\n");
            sb.Append("  TelHomeCode2: ").Append(TelHomeCode2).Append("\n");
            sb.Append("  TelHomeNumber2: ").Append(TelHomeNumber2).Append("\n");
            sb.Append("  MaritalStatus: ").Append(MaritalStatus).Append("\n");
            sb.Append("  DeceasedDate: ").Append(DeceasedDate).Append("\n");
            sb.Append("  EntryDate: ").Append(EntryDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialConsumerHeaderC1);
        }

        /// <summary>
        /// Returns true if TransunionCommercialConsumerHeaderC1 instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialConsumerHeaderC1 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialConsumerHeaderC1 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SegmentCode == input.SegmentCode ||
                    (this.SegmentCode != null &&
                    this.SegmentCode.Equals(input.SegmentCode))
                ) && 
                (
                    this.TelWorkCode1 == input.TelWorkCode1 ||
                    (this.TelWorkCode1 != null &&
                    this.TelWorkCode1.Equals(input.TelWorkCode1))
                ) && 
                (
                    this.TelWorkNumber1 == input.TelWorkNumber1 ||
                    (this.TelWorkNumber1 != null &&
                    this.TelWorkNumber1.Equals(input.TelWorkNumber1))
                ) && 
                (
                    this.TelHomeCode1 == input.TelHomeCode1 ||
                    (this.TelHomeCode1 != null &&
                    this.TelHomeCode1.Equals(input.TelHomeCode1))
                ) && 
                (
                    this.TelHomeNumber1 == input.TelHomeNumber1 ||
                    (this.TelHomeNumber1 != null &&
                    this.TelHomeNumber1.Equals(input.TelHomeNumber1))
                ) && 
                (
                    this.TelWorkCode2 == input.TelWorkCode2 ||
                    (this.TelWorkCode2 != null &&
                    this.TelWorkCode2.Equals(input.TelWorkCode2))
                ) && 
                (
                    this.TelWorkNumber2 == input.TelWorkNumber2 ||
                    (this.TelWorkNumber2 != null &&
                    this.TelWorkNumber2.Equals(input.TelWorkNumber2))
                ) && 
                (
                    this.TelHomeCode2 == input.TelHomeCode2 ||
                    (this.TelHomeCode2 != null &&
                    this.TelHomeCode2.Equals(input.TelHomeCode2))
                ) && 
                (
                    this.TelHomeNumber2 == input.TelHomeNumber2 ||
                    (this.TelHomeNumber2 != null &&
                    this.TelHomeNumber2.Equals(input.TelHomeNumber2))
                ) && 
                (
                    this.MaritalStatus == input.MaritalStatus ||
                    (this.MaritalStatus != null &&
                    this.MaritalStatus.Equals(input.MaritalStatus))
                ) && 
                (
                    this.DeceasedDate == input.DeceasedDate ||
                    (this.DeceasedDate != null &&
                    this.DeceasedDate.Equals(input.DeceasedDate))
                ) && 
                (
                    this.EntryDate == input.EntryDate ||
                    (this.EntryDate != null &&
                    this.EntryDate.Equals(input.EntryDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SegmentCode != null)
                    hashCode = hashCode * 59 + this.SegmentCode.GetHashCode();
                if (this.TelWorkCode1 != null)
                    hashCode = hashCode * 59 + this.TelWorkCode1.GetHashCode();
                if (this.TelWorkNumber1 != null)
                    hashCode = hashCode * 59 + this.TelWorkNumber1.GetHashCode();
                if (this.TelHomeCode1 != null)
                    hashCode = hashCode * 59 + this.TelHomeCode1.GetHashCode();
                if (this.TelHomeNumber1 != null)
                    hashCode = hashCode * 59 + this.TelHomeNumber1.GetHashCode();
                if (this.TelWorkCode2 != null)
                    hashCode = hashCode * 59 + this.TelWorkCode2.GetHashCode();
                if (this.TelWorkNumber2 != null)
                    hashCode = hashCode * 59 + this.TelWorkNumber2.GetHashCode();
                if (this.TelHomeCode2 != null)
                    hashCode = hashCode * 59 + this.TelHomeCode2.GetHashCode();
                if (this.TelHomeNumber2 != null)
                    hashCode = hashCode * 59 + this.TelHomeNumber2.GetHashCode();
                if (this.MaritalStatus != null)
                    hashCode = hashCode * 59 + this.MaritalStatus.GetHashCode();
                if (this.DeceasedDate != null)
                    hashCode = hashCode * 59 + this.DeceasedDate.GetHashCode();
                if (this.EntryDate != null)
                    hashCode = hashCode * 59 + this.EntryDate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
