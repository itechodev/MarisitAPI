/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118ConsumerNumberFrequencyNY01
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118ConsumerNumberFrequencyNY01 :  IEquatable<TransunionConsumer118ConsumerNumberFrequencyNY01>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118ConsumerNumberFrequencyNY01" /> class.
        /// </summary>
        /// <param name="consumerNo">consumerNo.</param>
        /// <param name="telephoneCode">telephoneCode.</param>
        /// <param name="telephoneNo">telephoneNo.</param>
        /// <param name="telephoneTotal24Hrs">telephoneTotal24Hrs.</param>
        /// <param name="telephoneTotal48Hrs">telephoneTotal48Hrs.</param>
        /// <param name="telephoneTotal96Hrs">telephoneTotal96Hrs.</param>
        /// <param name="telephoneTotal30Days">telephoneTotal30Days.</param>
        /// <param name="cellNo">cellNo.</param>
        /// <param name="cellNoTotal24Hrs">cellNoTotal24Hrs.</param>
        /// <param name="cellNoTotal48Hrs">cellNoTotal48Hrs.</param>
        /// <param name="cellNoTotal96Hrs">cellNoTotal96Hrs.</param>
        /// <param name="cellNoTotal30Days">cellNoTotal30Days.</param>
        public TransunionConsumer118ConsumerNumberFrequencyNY01(string consumerNo = default(string), string telephoneCode = default(string), string telephoneNo = default(string), string telephoneTotal24Hrs = default(string), string telephoneTotal48Hrs = default(string), string telephoneTotal96Hrs = default(string), string telephoneTotal30Days = default(string), string cellNo = default(string), string cellNoTotal24Hrs = default(string), string cellNoTotal48Hrs = default(string), string cellNoTotal96Hrs = default(string), string cellNoTotal30Days = default(string))
        {
            this.ConsumerNo = consumerNo;
            this.TelephoneCode = telephoneCode;
            this.TelephoneNo = telephoneNo;
            this.TelephoneTotal24Hrs = telephoneTotal24Hrs;
            this.TelephoneTotal48Hrs = telephoneTotal48Hrs;
            this.TelephoneTotal96Hrs = telephoneTotal96Hrs;
            this.TelephoneTotal30Days = telephoneTotal30Days;
            this.CellNo = cellNo;
            this.CellNoTotal24Hrs = cellNoTotal24Hrs;
            this.CellNoTotal48Hrs = cellNoTotal48Hrs;
            this.CellNoTotal96Hrs = cellNoTotal96Hrs;
            this.CellNoTotal30Days = cellNoTotal30Days;
            this.ConsumerNo = consumerNo;
            this.TelephoneCode = telephoneCode;
            this.TelephoneNo = telephoneNo;
            this.TelephoneTotal24Hrs = telephoneTotal24Hrs;
            this.TelephoneTotal48Hrs = telephoneTotal48Hrs;
            this.TelephoneTotal96Hrs = telephoneTotal96Hrs;
            this.TelephoneTotal30Days = telephoneTotal30Days;
            this.CellNo = cellNo;
            this.CellNoTotal24Hrs = cellNoTotal24Hrs;
            this.CellNoTotal48Hrs = cellNoTotal48Hrs;
            this.CellNoTotal96Hrs = cellNoTotal96Hrs;
            this.CellNoTotal30Days = cellNoTotal30Days;
        }

        /// <summary>
        /// Gets or Sets ConsumerNo
        /// </summary>
        [DataMember(Name="consumerNo", EmitDefaultValue=true)]
        public string ConsumerNo { get; set; }

        /// <summary>
        /// Gets or Sets TelephoneCode
        /// </summary>
        [DataMember(Name="telephoneCode", EmitDefaultValue=true)]
        public string TelephoneCode { get; set; }

        /// <summary>
        /// Gets or Sets TelephoneNo
        /// </summary>
        [DataMember(Name="telephoneNo", EmitDefaultValue=true)]
        public string TelephoneNo { get; set; }

        /// <summary>
        /// Gets or Sets TelephoneTotal24Hrs
        /// </summary>
        [DataMember(Name="telephoneTotal24Hrs", EmitDefaultValue=true)]
        public string TelephoneTotal24Hrs { get; set; }

        /// <summary>
        /// Gets or Sets TelephoneTotal48Hrs
        /// </summary>
        [DataMember(Name="telephoneTotal48Hrs", EmitDefaultValue=true)]
        public string TelephoneTotal48Hrs { get; set; }

        /// <summary>
        /// Gets or Sets TelephoneTotal96Hrs
        /// </summary>
        [DataMember(Name="telephoneTotal96Hrs", EmitDefaultValue=true)]
        public string TelephoneTotal96Hrs { get; set; }

        /// <summary>
        /// Gets or Sets TelephoneTotal30Days
        /// </summary>
        [DataMember(Name="telephoneTotal30Days", EmitDefaultValue=true)]
        public string TelephoneTotal30Days { get; set; }

        /// <summary>
        /// Gets or Sets CellNo
        /// </summary>
        [DataMember(Name="cellNo", EmitDefaultValue=true)]
        public string CellNo { get; set; }

        /// <summary>
        /// Gets or Sets CellNoTotal24Hrs
        /// </summary>
        [DataMember(Name="cellNoTotal24Hrs", EmitDefaultValue=true)]
        public string CellNoTotal24Hrs { get; set; }

        /// <summary>
        /// Gets or Sets CellNoTotal48Hrs
        /// </summary>
        [DataMember(Name="cellNoTotal48Hrs", EmitDefaultValue=true)]
        public string CellNoTotal48Hrs { get; set; }

        /// <summary>
        /// Gets or Sets CellNoTotal96Hrs
        /// </summary>
        [DataMember(Name="cellNoTotal96Hrs", EmitDefaultValue=true)]
        public string CellNoTotal96Hrs { get; set; }

        /// <summary>
        /// Gets or Sets CellNoTotal30Days
        /// </summary>
        [DataMember(Name="cellNoTotal30Days", EmitDefaultValue=true)]
        public string CellNoTotal30Days { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118ConsumerNumberFrequencyNY01 {\n");
            sb.Append("  ConsumerNo: ").Append(ConsumerNo).Append("\n");
            sb.Append("  TelephoneCode: ").Append(TelephoneCode).Append("\n");
            sb.Append("  TelephoneNo: ").Append(TelephoneNo).Append("\n");
            sb.Append("  TelephoneTotal24Hrs: ").Append(TelephoneTotal24Hrs).Append("\n");
            sb.Append("  TelephoneTotal48Hrs: ").Append(TelephoneTotal48Hrs).Append("\n");
            sb.Append("  TelephoneTotal96Hrs: ").Append(TelephoneTotal96Hrs).Append("\n");
            sb.Append("  TelephoneTotal30Days: ").Append(TelephoneTotal30Days).Append("\n");
            sb.Append("  CellNo: ").Append(CellNo).Append("\n");
            sb.Append("  CellNoTotal24Hrs: ").Append(CellNoTotal24Hrs).Append("\n");
            sb.Append("  CellNoTotal48Hrs: ").Append(CellNoTotal48Hrs).Append("\n");
            sb.Append("  CellNoTotal96Hrs: ").Append(CellNoTotal96Hrs).Append("\n");
            sb.Append("  CellNoTotal30Days: ").Append(CellNoTotal30Days).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118ConsumerNumberFrequencyNY01);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118ConsumerNumberFrequencyNY01 instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118ConsumerNumberFrequencyNY01 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118ConsumerNumberFrequencyNY01 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConsumerNo == input.ConsumerNo ||
                    (this.ConsumerNo != null &&
                    this.ConsumerNo.Equals(input.ConsumerNo))
                ) && 
                (
                    this.TelephoneCode == input.TelephoneCode ||
                    (this.TelephoneCode != null &&
                    this.TelephoneCode.Equals(input.TelephoneCode))
                ) && 
                (
                    this.TelephoneNo == input.TelephoneNo ||
                    (this.TelephoneNo != null &&
                    this.TelephoneNo.Equals(input.TelephoneNo))
                ) && 
                (
                    this.TelephoneTotal24Hrs == input.TelephoneTotal24Hrs ||
                    (this.TelephoneTotal24Hrs != null &&
                    this.TelephoneTotal24Hrs.Equals(input.TelephoneTotal24Hrs))
                ) && 
                (
                    this.TelephoneTotal48Hrs == input.TelephoneTotal48Hrs ||
                    (this.TelephoneTotal48Hrs != null &&
                    this.TelephoneTotal48Hrs.Equals(input.TelephoneTotal48Hrs))
                ) && 
                (
                    this.TelephoneTotal96Hrs == input.TelephoneTotal96Hrs ||
                    (this.TelephoneTotal96Hrs != null &&
                    this.TelephoneTotal96Hrs.Equals(input.TelephoneTotal96Hrs))
                ) && 
                (
                    this.TelephoneTotal30Days == input.TelephoneTotal30Days ||
                    (this.TelephoneTotal30Days != null &&
                    this.TelephoneTotal30Days.Equals(input.TelephoneTotal30Days))
                ) && 
                (
                    this.CellNo == input.CellNo ||
                    (this.CellNo != null &&
                    this.CellNo.Equals(input.CellNo))
                ) && 
                (
                    this.CellNoTotal24Hrs == input.CellNoTotal24Hrs ||
                    (this.CellNoTotal24Hrs != null &&
                    this.CellNoTotal24Hrs.Equals(input.CellNoTotal24Hrs))
                ) && 
                (
                    this.CellNoTotal48Hrs == input.CellNoTotal48Hrs ||
                    (this.CellNoTotal48Hrs != null &&
                    this.CellNoTotal48Hrs.Equals(input.CellNoTotal48Hrs))
                ) && 
                (
                    this.CellNoTotal96Hrs == input.CellNoTotal96Hrs ||
                    (this.CellNoTotal96Hrs != null &&
                    this.CellNoTotal96Hrs.Equals(input.CellNoTotal96Hrs))
                ) && 
                (
                    this.CellNoTotal30Days == input.CellNoTotal30Days ||
                    (this.CellNoTotal30Days != null &&
                    this.CellNoTotal30Days.Equals(input.CellNoTotal30Days))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConsumerNo != null)
                    hashCode = hashCode * 59 + this.ConsumerNo.GetHashCode();
                if (this.TelephoneCode != null)
                    hashCode = hashCode * 59 + this.TelephoneCode.GetHashCode();
                if (this.TelephoneNo != null)
                    hashCode = hashCode * 59 + this.TelephoneNo.GetHashCode();
                if (this.TelephoneTotal24Hrs != null)
                    hashCode = hashCode * 59 + this.TelephoneTotal24Hrs.GetHashCode();
                if (this.TelephoneTotal48Hrs != null)
                    hashCode = hashCode * 59 + this.TelephoneTotal48Hrs.GetHashCode();
                if (this.TelephoneTotal96Hrs != null)
                    hashCode = hashCode * 59 + this.TelephoneTotal96Hrs.GetHashCode();
                if (this.TelephoneTotal30Days != null)
                    hashCode = hashCode * 59 + this.TelephoneTotal30Days.GetHashCode();
                if (this.CellNo != null)
                    hashCode = hashCode * 59 + this.CellNo.GetHashCode();
                if (this.CellNoTotal24Hrs != null)
                    hashCode = hashCode * 59 + this.CellNoTotal24Hrs.GetHashCode();
                if (this.CellNoTotal48Hrs != null)
                    hashCode = hashCode * 59 + this.CellNoTotal48Hrs.GetHashCode();
                if (this.CellNoTotal96Hrs != null)
                    hashCode = hashCode * 59 + this.CellNoTotal96Hrs.GetHashCode();
                if (this.CellNoTotal30Days != null)
                    hashCode = hashCode * 59 + this.CellNoTotal30Days.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
