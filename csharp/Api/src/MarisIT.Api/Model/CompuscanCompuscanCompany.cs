/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// CompuscanCompuscanCompany
    /// </summary>
    [DataContract]
    public partial class CompuscanCompuscanCompany :  IEquatable<CompuscanCompuscanCompany>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompuscanCompuscanCompany" /> class.
        /// </summary>
        /// <param name="compaudinfo">compaudinfo.</param>
        /// <param name="compbankers">compbankers.</param>
        /// <param name="compbonddetails">compbonddetails.</param>
        /// <param name="compcommaddresses">compcommaddresses.</param>
        /// <param name="compcommcontacts">compcommcontacts.</param>
        /// <param name="compcompuscore">compcompuscore.</param>
        /// <param name="compcontracts">compcontracts.</param>
        /// <param name="compdetails">compdetails.</param>
        /// <param name="compdirectors">compdirectors.</param>
        /// <param name="compdirccdata">compdirccdata.</param>
        /// <param name="compfinancials">compfinancials.</param>
        /// <param name="compinsurance">compinsurance.</param>
        /// <param name="compjudge">compjudge.</param>
        /// <param name="compnonactiveprincipals">compnonactiveprincipals.</param>
        /// <param name="compprevenq">compprevenq.</param>
        /// <param name="compprincipalanalytics">compprincipalanalytics.</param>
        /// <param name="compproperties">compproperties.</param>
        /// <param name="comppropdetails">comppropdetails.</param>
        /// <param name="comprescounts">comprescounts.</param>
        /// <param name="compsrchcrit">compsrchcrit.</param>
        /// <param name="compstaff">compstaff.</param>
        /// <param name="comptradehistory">comptradehistory.</param>
        /// <param name="comptraderef">comptraderef.</param>
        /// <param name="compvatnums">compvatnums.</param>
        /// <param name="compvehicles">compvehicles.</param>
        /// <param name="enquiryid">enquiryid.</param>
        /// <param name="linkadrsinfo">linkadrsinfo.</param>
        /// <param name="linkcompinfo">linkcompinfo.</param>
        /// <param name="pdf">pdf.</param>
        public CompuscanCompuscanCompany(List<CompuscanCOMPAUDINFO> compaudinfo = default(List<CompuscanCOMPAUDINFO>), List<CompuscanCOMPBANKERS> compbankers = default(List<CompuscanCOMPBANKERS>), List<CompuscanCOMPBONDDETAILS> compbonddetails = default(List<CompuscanCOMPBONDDETAILS>), List<CompuscanCOMPCOMMADDRESSES> compcommaddresses = default(List<CompuscanCOMPCOMMADDRESSES>), List<CompuscanCOMPCOMMCONTACTS> compcommcontacts = default(List<CompuscanCOMPCOMMCONTACTS>), List<CompuscanCOMPCOMPUSCORE> compcompuscore = default(List<CompuscanCOMPCOMPUSCORE>), List<CompuscanCOMPCONTRACTS> compcontracts = default(List<CompuscanCOMPCONTRACTS>), List<CompuscanCOMPDETAILS> compdetails = default(List<CompuscanCOMPDETAILS>), List<CompuscanCOMPDIRECTORS> compdirectors = default(List<CompuscanCOMPDIRECTORS>), List<CompuscanCOMPDIRCCDATA> compdirccdata = default(List<CompuscanCOMPDIRCCDATA>), List<CompuscanCOMPFINANCIALS> compfinancials = default(List<CompuscanCOMPFINANCIALS>), List<CompuscanCOMPINSURANCE> compinsurance = default(List<CompuscanCOMPINSURANCE>), List<CompuscanCOMPJUDGE> compjudge = default(List<CompuscanCOMPJUDGE>), List<CompuscanCOMPNONACTIVEPRINCIPALS> compnonactiveprincipals = default(List<CompuscanCOMPNONACTIVEPRINCIPALS>), List<CompuscanCOMPPREVENQ> compprevenq = default(List<CompuscanCOMPPREVENQ>), List<CompuscanCOMPPRINCIPALANALYTICS> compprincipalanalytics = default(List<CompuscanCOMPPRINCIPALANALYTICS>), List<CompuscanCOMPPROPERTIES> compproperties = default(List<CompuscanCOMPPROPERTIES>), List<CompuscanCOMPPROPDETAILS> comppropdetails = default(List<CompuscanCOMPPROPDETAILS>), List<CompuscanCOMPRESCOUNTS> comprescounts = default(List<CompuscanCOMPRESCOUNTS>), List<CompuscanCOMPSRCHCRIT> compsrchcrit = default(List<CompuscanCOMPSRCHCRIT>), List<CompuscanCOMPSTAFF> compstaff = default(List<CompuscanCOMPSTAFF>), List<CompuscanCOMPTRADEHISTORY> comptradehistory = default(List<CompuscanCOMPTRADEHISTORY>), List<CompuscanCOMPTRADEREF> comptraderef = default(List<CompuscanCOMPTRADEREF>), List<CompuscanCOMPVATNUMS> compvatnums = default(List<CompuscanCOMPVATNUMS>), List<CompuscanCOMPVEHICLES> compvehicles = default(List<CompuscanCOMPVEHICLES>), string enquiryid = default(string), List<CompuscanLINKADRSINFO> linkadrsinfo = default(List<CompuscanLINKADRSINFO>), List<CompuscanLINKCOMPINFO> linkcompinfo = default(List<CompuscanLINKCOMPINFO>), string pdf = default(string))
        {
            this.Compaudinfo = compaudinfo;
            this.Compbankers = compbankers;
            this.Compbonddetails = compbonddetails;
            this.Compcommaddresses = compcommaddresses;
            this.Compcommcontacts = compcommcontacts;
            this.Compcompuscore = compcompuscore;
            this.Compcontracts = compcontracts;
            this.Compdetails = compdetails;
            this.Compdirectors = compdirectors;
            this.Compdirccdata = compdirccdata;
            this.Compfinancials = compfinancials;
            this.Compinsurance = compinsurance;
            this.Compjudge = compjudge;
            this.Compnonactiveprincipals = compnonactiveprincipals;
            this.Compprevenq = compprevenq;
            this.Compprincipalanalytics = compprincipalanalytics;
            this.Compproperties = compproperties;
            this.Comppropdetails = comppropdetails;
            this.Comprescounts = comprescounts;
            this.Compsrchcrit = compsrchcrit;
            this.Compstaff = compstaff;
            this.Comptradehistory = comptradehistory;
            this.Comptraderef = comptraderef;
            this.Compvatnums = compvatnums;
            this.Compvehicles = compvehicles;
            this.Enquiryid = enquiryid;
            this.Linkadrsinfo = linkadrsinfo;
            this.Linkcompinfo = linkcompinfo;
            this.Pdf = pdf;
            this.Compaudinfo = compaudinfo;
            this.Compbankers = compbankers;
            this.Compbonddetails = compbonddetails;
            this.Compcommaddresses = compcommaddresses;
            this.Compcommcontacts = compcommcontacts;
            this.Compcompuscore = compcompuscore;
            this.Compcontracts = compcontracts;
            this.Compdetails = compdetails;
            this.Compdirectors = compdirectors;
            this.Compdirccdata = compdirccdata;
            this.Compfinancials = compfinancials;
            this.Compinsurance = compinsurance;
            this.Compjudge = compjudge;
            this.Compnonactiveprincipals = compnonactiveprincipals;
            this.Compprevenq = compprevenq;
            this.Compprincipalanalytics = compprincipalanalytics;
            this.Compproperties = compproperties;
            this.Comppropdetails = comppropdetails;
            this.Comprescounts = comprescounts;
            this.Compsrchcrit = compsrchcrit;
            this.Compstaff = compstaff;
            this.Comptradehistory = comptradehistory;
            this.Comptraderef = comptraderef;
            this.Compvatnums = compvatnums;
            this.Compvehicles = compvehicles;
            this.Enquiryid = enquiryid;
            this.Linkadrsinfo = linkadrsinfo;
            this.Linkcompinfo = linkcompinfo;
            this.Pdf = pdf;
        }

        /// <summary>
        /// Gets or Sets Compaudinfo
        /// </summary>
        [DataMember(Name="compaudinfo", EmitDefaultValue=true)]
        public List<CompuscanCOMPAUDINFO> Compaudinfo { get; set; }

        /// <summary>
        /// Gets or Sets Compbankers
        /// </summary>
        [DataMember(Name="compbankers", EmitDefaultValue=true)]
        public List<CompuscanCOMPBANKERS> Compbankers { get; set; }

        /// <summary>
        /// Gets or Sets Compbonddetails
        /// </summary>
        [DataMember(Name="compbonddetails", EmitDefaultValue=true)]
        public List<CompuscanCOMPBONDDETAILS> Compbonddetails { get; set; }

        /// <summary>
        /// Gets or Sets Compcommaddresses
        /// </summary>
        [DataMember(Name="compcommaddresses", EmitDefaultValue=true)]
        public List<CompuscanCOMPCOMMADDRESSES> Compcommaddresses { get; set; }

        /// <summary>
        /// Gets or Sets Compcommcontacts
        /// </summary>
        [DataMember(Name="compcommcontacts", EmitDefaultValue=true)]
        public List<CompuscanCOMPCOMMCONTACTS> Compcommcontacts { get; set; }

        /// <summary>
        /// Gets or Sets Compcompuscore
        /// </summary>
        [DataMember(Name="compcompuscore", EmitDefaultValue=true)]
        public List<CompuscanCOMPCOMPUSCORE> Compcompuscore { get; set; }

        /// <summary>
        /// Gets or Sets Compcontracts
        /// </summary>
        [DataMember(Name="compcontracts", EmitDefaultValue=true)]
        public List<CompuscanCOMPCONTRACTS> Compcontracts { get; set; }

        /// <summary>
        /// Gets or Sets Compdetails
        /// </summary>
        [DataMember(Name="compdetails", EmitDefaultValue=true)]
        public List<CompuscanCOMPDETAILS> Compdetails { get; set; }

        /// <summary>
        /// Gets or Sets Compdirectors
        /// </summary>
        [DataMember(Name="compdirectors", EmitDefaultValue=true)]
        public List<CompuscanCOMPDIRECTORS> Compdirectors { get; set; }

        /// <summary>
        /// Gets or Sets Compdirccdata
        /// </summary>
        [DataMember(Name="compdirccdata", EmitDefaultValue=true)]
        public List<CompuscanCOMPDIRCCDATA> Compdirccdata { get; set; }

        /// <summary>
        /// Gets or Sets Compfinancials
        /// </summary>
        [DataMember(Name="compfinancials", EmitDefaultValue=true)]
        public List<CompuscanCOMPFINANCIALS> Compfinancials { get; set; }

        /// <summary>
        /// Gets or Sets Compinsurance
        /// </summary>
        [DataMember(Name="compinsurance", EmitDefaultValue=true)]
        public List<CompuscanCOMPINSURANCE> Compinsurance { get; set; }

        /// <summary>
        /// Gets or Sets Compjudge
        /// </summary>
        [DataMember(Name="compjudge", EmitDefaultValue=true)]
        public List<CompuscanCOMPJUDGE> Compjudge { get; set; }

        /// <summary>
        /// Gets or Sets Compnonactiveprincipals
        /// </summary>
        [DataMember(Name="compnonactiveprincipals", EmitDefaultValue=true)]
        public List<CompuscanCOMPNONACTIVEPRINCIPALS> Compnonactiveprincipals { get; set; }

        /// <summary>
        /// Gets or Sets Compprevenq
        /// </summary>
        [DataMember(Name="compprevenq", EmitDefaultValue=true)]
        public List<CompuscanCOMPPREVENQ> Compprevenq { get; set; }

        /// <summary>
        /// Gets or Sets Compprincipalanalytics
        /// </summary>
        [DataMember(Name="compprincipalanalytics", EmitDefaultValue=true)]
        public List<CompuscanCOMPPRINCIPALANALYTICS> Compprincipalanalytics { get; set; }

        /// <summary>
        /// Gets or Sets Compproperties
        /// </summary>
        [DataMember(Name="compproperties", EmitDefaultValue=true)]
        public List<CompuscanCOMPPROPERTIES> Compproperties { get; set; }

        /// <summary>
        /// Gets or Sets Comppropdetails
        /// </summary>
        [DataMember(Name="comppropdetails", EmitDefaultValue=true)]
        public List<CompuscanCOMPPROPDETAILS> Comppropdetails { get; set; }

        /// <summary>
        /// Gets or Sets Comprescounts
        /// </summary>
        [DataMember(Name="comprescounts", EmitDefaultValue=true)]
        public List<CompuscanCOMPRESCOUNTS> Comprescounts { get; set; }

        /// <summary>
        /// Gets or Sets Compsrchcrit
        /// </summary>
        [DataMember(Name="compsrchcrit", EmitDefaultValue=true)]
        public List<CompuscanCOMPSRCHCRIT> Compsrchcrit { get; set; }

        /// <summary>
        /// Gets or Sets Compstaff
        /// </summary>
        [DataMember(Name="compstaff", EmitDefaultValue=true)]
        public List<CompuscanCOMPSTAFF> Compstaff { get; set; }

        /// <summary>
        /// Gets or Sets Comptradehistory
        /// </summary>
        [DataMember(Name="comptradehistory", EmitDefaultValue=true)]
        public List<CompuscanCOMPTRADEHISTORY> Comptradehistory { get; set; }

        /// <summary>
        /// Gets or Sets Comptraderef
        /// </summary>
        [DataMember(Name="comptraderef", EmitDefaultValue=true)]
        public List<CompuscanCOMPTRADEREF> Comptraderef { get; set; }

        /// <summary>
        /// Gets or Sets Compvatnums
        /// </summary>
        [DataMember(Name="compvatnums", EmitDefaultValue=true)]
        public List<CompuscanCOMPVATNUMS> Compvatnums { get; set; }

        /// <summary>
        /// Gets or Sets Compvehicles
        /// </summary>
        [DataMember(Name="compvehicles", EmitDefaultValue=true)]
        public List<CompuscanCOMPVEHICLES> Compvehicles { get; set; }

        /// <summary>
        /// Gets or Sets Enquiryid
        /// </summary>
        [DataMember(Name="enquiryid", EmitDefaultValue=true)]
        public string Enquiryid { get; set; }

        /// <summary>
        /// Gets or Sets Linkadrsinfo
        /// </summary>
        [DataMember(Name="linkadrsinfo", EmitDefaultValue=true)]
        public List<CompuscanLINKADRSINFO> Linkadrsinfo { get; set; }

        /// <summary>
        /// Gets or Sets Linkcompinfo
        /// </summary>
        [DataMember(Name="linkcompinfo", EmitDefaultValue=true)]
        public List<CompuscanLINKCOMPINFO> Linkcompinfo { get; set; }

        /// <summary>
        /// Gets or Sets Pdf
        /// </summary>
        [DataMember(Name="pdf", EmitDefaultValue=true)]
        public string Pdf { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompuscanCompuscanCompany {\n");
            sb.Append("  Compaudinfo: ").Append(Compaudinfo).Append("\n");
            sb.Append("  Compbankers: ").Append(Compbankers).Append("\n");
            sb.Append("  Compbonddetails: ").Append(Compbonddetails).Append("\n");
            sb.Append("  Compcommaddresses: ").Append(Compcommaddresses).Append("\n");
            sb.Append("  Compcommcontacts: ").Append(Compcommcontacts).Append("\n");
            sb.Append("  Compcompuscore: ").Append(Compcompuscore).Append("\n");
            sb.Append("  Compcontracts: ").Append(Compcontracts).Append("\n");
            sb.Append("  Compdetails: ").Append(Compdetails).Append("\n");
            sb.Append("  Compdirectors: ").Append(Compdirectors).Append("\n");
            sb.Append("  Compdirccdata: ").Append(Compdirccdata).Append("\n");
            sb.Append("  Compfinancials: ").Append(Compfinancials).Append("\n");
            sb.Append("  Compinsurance: ").Append(Compinsurance).Append("\n");
            sb.Append("  Compjudge: ").Append(Compjudge).Append("\n");
            sb.Append("  Compnonactiveprincipals: ").Append(Compnonactiveprincipals).Append("\n");
            sb.Append("  Compprevenq: ").Append(Compprevenq).Append("\n");
            sb.Append("  Compprincipalanalytics: ").Append(Compprincipalanalytics).Append("\n");
            sb.Append("  Compproperties: ").Append(Compproperties).Append("\n");
            sb.Append("  Comppropdetails: ").Append(Comppropdetails).Append("\n");
            sb.Append("  Comprescounts: ").Append(Comprescounts).Append("\n");
            sb.Append("  Compsrchcrit: ").Append(Compsrchcrit).Append("\n");
            sb.Append("  Compstaff: ").Append(Compstaff).Append("\n");
            sb.Append("  Comptradehistory: ").Append(Comptradehistory).Append("\n");
            sb.Append("  Comptraderef: ").Append(Comptraderef).Append("\n");
            sb.Append("  Compvatnums: ").Append(Compvatnums).Append("\n");
            sb.Append("  Compvehicles: ").Append(Compvehicles).Append("\n");
            sb.Append("  Enquiryid: ").Append(Enquiryid).Append("\n");
            sb.Append("  Linkadrsinfo: ").Append(Linkadrsinfo).Append("\n");
            sb.Append("  Linkcompinfo: ").Append(Linkcompinfo).Append("\n");
            sb.Append("  Pdf: ").Append(Pdf).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompuscanCompuscanCompany);
        }

        /// <summary>
        /// Returns true if CompuscanCompuscanCompany instances are equal
        /// </summary>
        /// <param name="input">Instance of CompuscanCompuscanCompany to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompuscanCompuscanCompany input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Compaudinfo == input.Compaudinfo ||
                    this.Compaudinfo != null &&
                    input.Compaudinfo != null &&
                    this.Compaudinfo.SequenceEqual(input.Compaudinfo)
                ) && 
                (
                    this.Compbankers == input.Compbankers ||
                    this.Compbankers != null &&
                    input.Compbankers != null &&
                    this.Compbankers.SequenceEqual(input.Compbankers)
                ) && 
                (
                    this.Compbonddetails == input.Compbonddetails ||
                    this.Compbonddetails != null &&
                    input.Compbonddetails != null &&
                    this.Compbonddetails.SequenceEqual(input.Compbonddetails)
                ) && 
                (
                    this.Compcommaddresses == input.Compcommaddresses ||
                    this.Compcommaddresses != null &&
                    input.Compcommaddresses != null &&
                    this.Compcommaddresses.SequenceEqual(input.Compcommaddresses)
                ) && 
                (
                    this.Compcommcontacts == input.Compcommcontacts ||
                    this.Compcommcontacts != null &&
                    input.Compcommcontacts != null &&
                    this.Compcommcontacts.SequenceEqual(input.Compcommcontacts)
                ) && 
                (
                    this.Compcompuscore == input.Compcompuscore ||
                    this.Compcompuscore != null &&
                    input.Compcompuscore != null &&
                    this.Compcompuscore.SequenceEqual(input.Compcompuscore)
                ) && 
                (
                    this.Compcontracts == input.Compcontracts ||
                    this.Compcontracts != null &&
                    input.Compcontracts != null &&
                    this.Compcontracts.SequenceEqual(input.Compcontracts)
                ) && 
                (
                    this.Compdetails == input.Compdetails ||
                    this.Compdetails != null &&
                    input.Compdetails != null &&
                    this.Compdetails.SequenceEqual(input.Compdetails)
                ) && 
                (
                    this.Compdirectors == input.Compdirectors ||
                    this.Compdirectors != null &&
                    input.Compdirectors != null &&
                    this.Compdirectors.SequenceEqual(input.Compdirectors)
                ) && 
                (
                    this.Compdirccdata == input.Compdirccdata ||
                    this.Compdirccdata != null &&
                    input.Compdirccdata != null &&
                    this.Compdirccdata.SequenceEqual(input.Compdirccdata)
                ) && 
                (
                    this.Compfinancials == input.Compfinancials ||
                    this.Compfinancials != null &&
                    input.Compfinancials != null &&
                    this.Compfinancials.SequenceEqual(input.Compfinancials)
                ) && 
                (
                    this.Compinsurance == input.Compinsurance ||
                    this.Compinsurance != null &&
                    input.Compinsurance != null &&
                    this.Compinsurance.SequenceEqual(input.Compinsurance)
                ) && 
                (
                    this.Compjudge == input.Compjudge ||
                    this.Compjudge != null &&
                    input.Compjudge != null &&
                    this.Compjudge.SequenceEqual(input.Compjudge)
                ) && 
                (
                    this.Compnonactiveprincipals == input.Compnonactiveprincipals ||
                    this.Compnonactiveprincipals != null &&
                    input.Compnonactiveprincipals != null &&
                    this.Compnonactiveprincipals.SequenceEqual(input.Compnonactiveprincipals)
                ) && 
                (
                    this.Compprevenq == input.Compprevenq ||
                    this.Compprevenq != null &&
                    input.Compprevenq != null &&
                    this.Compprevenq.SequenceEqual(input.Compprevenq)
                ) && 
                (
                    this.Compprincipalanalytics == input.Compprincipalanalytics ||
                    this.Compprincipalanalytics != null &&
                    input.Compprincipalanalytics != null &&
                    this.Compprincipalanalytics.SequenceEqual(input.Compprincipalanalytics)
                ) && 
                (
                    this.Compproperties == input.Compproperties ||
                    this.Compproperties != null &&
                    input.Compproperties != null &&
                    this.Compproperties.SequenceEqual(input.Compproperties)
                ) && 
                (
                    this.Comppropdetails == input.Comppropdetails ||
                    this.Comppropdetails != null &&
                    input.Comppropdetails != null &&
                    this.Comppropdetails.SequenceEqual(input.Comppropdetails)
                ) && 
                (
                    this.Comprescounts == input.Comprescounts ||
                    this.Comprescounts != null &&
                    input.Comprescounts != null &&
                    this.Comprescounts.SequenceEqual(input.Comprescounts)
                ) && 
                (
                    this.Compsrchcrit == input.Compsrchcrit ||
                    this.Compsrchcrit != null &&
                    input.Compsrchcrit != null &&
                    this.Compsrchcrit.SequenceEqual(input.Compsrchcrit)
                ) && 
                (
                    this.Compstaff == input.Compstaff ||
                    this.Compstaff != null &&
                    input.Compstaff != null &&
                    this.Compstaff.SequenceEqual(input.Compstaff)
                ) && 
                (
                    this.Comptradehistory == input.Comptradehistory ||
                    this.Comptradehistory != null &&
                    input.Comptradehistory != null &&
                    this.Comptradehistory.SequenceEqual(input.Comptradehistory)
                ) && 
                (
                    this.Comptraderef == input.Comptraderef ||
                    this.Comptraderef != null &&
                    input.Comptraderef != null &&
                    this.Comptraderef.SequenceEqual(input.Comptraderef)
                ) && 
                (
                    this.Compvatnums == input.Compvatnums ||
                    this.Compvatnums != null &&
                    input.Compvatnums != null &&
                    this.Compvatnums.SequenceEqual(input.Compvatnums)
                ) && 
                (
                    this.Compvehicles == input.Compvehicles ||
                    this.Compvehicles != null &&
                    input.Compvehicles != null &&
                    this.Compvehicles.SequenceEqual(input.Compvehicles)
                ) && 
                (
                    this.Enquiryid == input.Enquiryid ||
                    (this.Enquiryid != null &&
                    this.Enquiryid.Equals(input.Enquiryid))
                ) && 
                (
                    this.Linkadrsinfo == input.Linkadrsinfo ||
                    this.Linkadrsinfo != null &&
                    input.Linkadrsinfo != null &&
                    this.Linkadrsinfo.SequenceEqual(input.Linkadrsinfo)
                ) && 
                (
                    this.Linkcompinfo == input.Linkcompinfo ||
                    this.Linkcompinfo != null &&
                    input.Linkcompinfo != null &&
                    this.Linkcompinfo.SequenceEqual(input.Linkcompinfo)
                ) && 
                (
                    this.Pdf == input.Pdf ||
                    (this.Pdf != null &&
                    this.Pdf.Equals(input.Pdf))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Compaudinfo != null)
                    hashCode = hashCode * 59 + this.Compaudinfo.GetHashCode();
                if (this.Compbankers != null)
                    hashCode = hashCode * 59 + this.Compbankers.GetHashCode();
                if (this.Compbonddetails != null)
                    hashCode = hashCode * 59 + this.Compbonddetails.GetHashCode();
                if (this.Compcommaddresses != null)
                    hashCode = hashCode * 59 + this.Compcommaddresses.GetHashCode();
                if (this.Compcommcontacts != null)
                    hashCode = hashCode * 59 + this.Compcommcontacts.GetHashCode();
                if (this.Compcompuscore != null)
                    hashCode = hashCode * 59 + this.Compcompuscore.GetHashCode();
                if (this.Compcontracts != null)
                    hashCode = hashCode * 59 + this.Compcontracts.GetHashCode();
                if (this.Compdetails != null)
                    hashCode = hashCode * 59 + this.Compdetails.GetHashCode();
                if (this.Compdirectors != null)
                    hashCode = hashCode * 59 + this.Compdirectors.GetHashCode();
                if (this.Compdirccdata != null)
                    hashCode = hashCode * 59 + this.Compdirccdata.GetHashCode();
                if (this.Compfinancials != null)
                    hashCode = hashCode * 59 + this.Compfinancials.GetHashCode();
                if (this.Compinsurance != null)
                    hashCode = hashCode * 59 + this.Compinsurance.GetHashCode();
                if (this.Compjudge != null)
                    hashCode = hashCode * 59 + this.Compjudge.GetHashCode();
                if (this.Compnonactiveprincipals != null)
                    hashCode = hashCode * 59 + this.Compnonactiveprincipals.GetHashCode();
                if (this.Compprevenq != null)
                    hashCode = hashCode * 59 + this.Compprevenq.GetHashCode();
                if (this.Compprincipalanalytics != null)
                    hashCode = hashCode * 59 + this.Compprincipalanalytics.GetHashCode();
                if (this.Compproperties != null)
                    hashCode = hashCode * 59 + this.Compproperties.GetHashCode();
                if (this.Comppropdetails != null)
                    hashCode = hashCode * 59 + this.Comppropdetails.GetHashCode();
                if (this.Comprescounts != null)
                    hashCode = hashCode * 59 + this.Comprescounts.GetHashCode();
                if (this.Compsrchcrit != null)
                    hashCode = hashCode * 59 + this.Compsrchcrit.GetHashCode();
                if (this.Compstaff != null)
                    hashCode = hashCode * 59 + this.Compstaff.GetHashCode();
                if (this.Comptradehistory != null)
                    hashCode = hashCode * 59 + this.Comptradehistory.GetHashCode();
                if (this.Comptraderef != null)
                    hashCode = hashCode * 59 + this.Comptraderef.GetHashCode();
                if (this.Compvatnums != null)
                    hashCode = hashCode * 59 + this.Compvatnums.GetHashCode();
                if (this.Compvehicles != null)
                    hashCode = hashCode * 59 + this.Compvehicles.GetHashCode();
                if (this.Enquiryid != null)
                    hashCode = hashCode * 59 + this.Enquiryid.GetHashCode();
                if (this.Linkadrsinfo != null)
                    hashCode = hashCode * 59 + this.Linkadrsinfo.GetHashCode();
                if (this.Linkcompinfo != null)
                    hashCode = hashCode * 59 + this.Linkcompinfo.GetHashCode();
                if (this.Pdf != null)
                    hashCode = hashCode * 59 + this.Pdf.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
