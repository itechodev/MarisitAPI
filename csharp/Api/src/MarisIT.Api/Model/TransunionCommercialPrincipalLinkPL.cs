/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialPrincipalLinkPL
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialPrincipalLinkPL :  IEquatable<TransunionCommercialPrincipalLinkPL>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialPrincipalLinkPL" /> class.
        /// </summary>
        /// <param name="majorProduct">majorProduct.</param>
        /// <param name="itNumber">itNumber.</param>
        /// <param name="consumerNumber">consumerNumber.</param>
        /// <param name="surname">surname.</param>
        /// <param name="forename1">forename1.</param>
        /// <param name="forename2">forename2.</param>
        /// <param name="forename3">forename3.</param>
        /// <param name="idNumber">idNumber.</param>
        /// <param name="dateOfBirth">dateOfBirth.</param>
        /// <param name="startDate">startDate.</param>
        /// <param name="comment">comment.</param>
        /// <param name="consumerSurname1">consumerSurname1.</param>
        /// <param name="consumerSurname2">consumerSurname2.</param>
        /// <param name="consumerForename1">consumerForename1.</param>
        /// <param name="consumerForename2">consumerForename2.</param>
        /// <param name="consumerForename3">consumerForename3.</param>
        /// <param name="address">address.</param>
        /// <param name="homeTelephoneList">homeTelephoneList.</param>
        /// <param name="workTelephoneList">workTelephoneList.</param>
        public TransunionCommercialPrincipalLinkPL(string majorProduct = default(string), string itNumber = default(string), string consumerNumber = default(string), string surname = default(string), string forename1 = default(string), string forename2 = default(string), string forename3 = default(string), string idNumber = default(string), string dateOfBirth = default(string), string startDate = default(string), string comment = default(string), string consumerSurname1 = default(string), string consumerSurname2 = default(string), string consumerForename1 = default(string), string consumerForename2 = default(string), string consumerForename3 = default(string), List<string> address = default(List<string>), List<TransunionCommercialHomeTelephone> homeTelephoneList = default(List<TransunionCommercialHomeTelephone>), List<TransunionCommercialWorkTelephone> workTelephoneList = default(List<TransunionCommercialWorkTelephone>))
        {
            this.MajorProduct = majorProduct;
            this.ItNumber = itNumber;
            this.ConsumerNumber = consumerNumber;
            this.Surname = surname;
            this.Forename1 = forename1;
            this.Forename2 = forename2;
            this.Forename3 = forename3;
            this.IdNumber = idNumber;
            this.DateOfBirth = dateOfBirth;
            this.StartDate = startDate;
            this.Comment = comment;
            this.ConsumerSurname1 = consumerSurname1;
            this.ConsumerSurname2 = consumerSurname2;
            this.ConsumerForename1 = consumerForename1;
            this.ConsumerForename2 = consumerForename2;
            this.ConsumerForename3 = consumerForename3;
            this.Address = address;
            this.HomeTelephoneList = homeTelephoneList;
            this.WorkTelephoneList = workTelephoneList;
            this.MajorProduct = majorProduct;
            this.ItNumber = itNumber;
            this.ConsumerNumber = consumerNumber;
            this.Surname = surname;
            this.Forename1 = forename1;
            this.Forename2 = forename2;
            this.Forename3 = forename3;
            this.IdNumber = idNumber;
            this.DateOfBirth = dateOfBirth;
            this.StartDate = startDate;
            this.Comment = comment;
            this.ConsumerSurname1 = consumerSurname1;
            this.ConsumerSurname2 = consumerSurname2;
            this.ConsumerForename1 = consumerForename1;
            this.ConsumerForename2 = consumerForename2;
            this.ConsumerForename3 = consumerForename3;
            this.Address = address;
            this.HomeTelephoneList = homeTelephoneList;
            this.WorkTelephoneList = workTelephoneList;
        }

        /// <summary>
        /// Gets or Sets MajorProduct
        /// </summary>
        [DataMember(Name="majorProduct", EmitDefaultValue=true)]
        public string MajorProduct { get; set; }

        /// <summary>
        /// Gets or Sets ItNumber
        /// </summary>
        [DataMember(Name="itNumber", EmitDefaultValue=true)]
        public string ItNumber { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerNumber
        /// </summary>
        [DataMember(Name="consumerNumber", EmitDefaultValue=true)]
        public string ConsumerNumber { get; set; }

        /// <summary>
        /// Gets or Sets Surname
        /// </summary>
        [DataMember(Name="surname", EmitDefaultValue=true)]
        public string Surname { get; set; }

        /// <summary>
        /// Gets or Sets Forename1
        /// </summary>
        [DataMember(Name="forename1", EmitDefaultValue=true)]
        public string Forename1 { get; set; }

        /// <summary>
        /// Gets or Sets Forename2
        /// </summary>
        [DataMember(Name="forename2", EmitDefaultValue=true)]
        public string Forename2 { get; set; }

        /// <summary>
        /// Gets or Sets Forename3
        /// </summary>
        [DataMember(Name="forename3", EmitDefaultValue=true)]
        public string Forename3 { get; set; }

        /// <summary>
        /// Gets or Sets IdNumber
        /// </summary>
        [DataMember(Name="idNumber", EmitDefaultValue=true)]
        public string IdNumber { get; set; }

        /// <summary>
        /// Gets or Sets DateOfBirth
        /// </summary>
        [DataMember(Name="dateOfBirth", EmitDefaultValue=true)]
        public string DateOfBirth { get; set; }

        /// <summary>
        /// Gets or Sets StartDate
        /// </summary>
        [DataMember(Name="startDate", EmitDefaultValue=true)]
        public string StartDate { get; set; }

        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [DataMember(Name="comment", EmitDefaultValue=true)]
        public string Comment { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerSurname1
        /// </summary>
        [DataMember(Name="consumerSurname1", EmitDefaultValue=true)]
        public string ConsumerSurname1 { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerSurname2
        /// </summary>
        [DataMember(Name="consumerSurname2", EmitDefaultValue=true)]
        public string ConsumerSurname2 { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerForename1
        /// </summary>
        [DataMember(Name="consumerForename1", EmitDefaultValue=true)]
        public string ConsumerForename1 { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerForename2
        /// </summary>
        [DataMember(Name="consumerForename2", EmitDefaultValue=true)]
        public string ConsumerForename2 { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerForename3
        /// </summary>
        [DataMember(Name="consumerForename3", EmitDefaultValue=true)]
        public string ConsumerForename3 { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=true)]
        public List<string> Address { get; set; }

        /// <summary>
        /// Gets or Sets HomeTelephoneList
        /// </summary>
        [DataMember(Name="homeTelephoneList", EmitDefaultValue=true)]
        public List<TransunionCommercialHomeTelephone> HomeTelephoneList { get; set; }

        /// <summary>
        /// Gets or Sets WorkTelephoneList
        /// </summary>
        [DataMember(Name="workTelephoneList", EmitDefaultValue=true)]
        public List<TransunionCommercialWorkTelephone> WorkTelephoneList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialPrincipalLinkPL {\n");
            sb.Append("  MajorProduct: ").Append(MajorProduct).Append("\n");
            sb.Append("  ItNumber: ").Append(ItNumber).Append("\n");
            sb.Append("  ConsumerNumber: ").Append(ConsumerNumber).Append("\n");
            sb.Append("  Surname: ").Append(Surname).Append("\n");
            sb.Append("  Forename1: ").Append(Forename1).Append("\n");
            sb.Append("  Forename2: ").Append(Forename2).Append("\n");
            sb.Append("  Forename3: ").Append(Forename3).Append("\n");
            sb.Append("  IdNumber: ").Append(IdNumber).Append("\n");
            sb.Append("  DateOfBirth: ").Append(DateOfBirth).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  ConsumerSurname1: ").Append(ConsumerSurname1).Append("\n");
            sb.Append("  ConsumerSurname2: ").Append(ConsumerSurname2).Append("\n");
            sb.Append("  ConsumerForename1: ").Append(ConsumerForename1).Append("\n");
            sb.Append("  ConsumerForename2: ").Append(ConsumerForename2).Append("\n");
            sb.Append("  ConsumerForename3: ").Append(ConsumerForename3).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  HomeTelephoneList: ").Append(HomeTelephoneList).Append("\n");
            sb.Append("  WorkTelephoneList: ").Append(WorkTelephoneList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialPrincipalLinkPL);
        }

        /// <summary>
        /// Returns true if TransunionCommercialPrincipalLinkPL instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialPrincipalLinkPL to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialPrincipalLinkPL input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MajorProduct == input.MajorProduct ||
                    (this.MajorProduct != null &&
                    this.MajorProduct.Equals(input.MajorProduct))
                ) && 
                (
                    this.ItNumber == input.ItNumber ||
                    (this.ItNumber != null &&
                    this.ItNumber.Equals(input.ItNumber))
                ) && 
                (
                    this.ConsumerNumber == input.ConsumerNumber ||
                    (this.ConsumerNumber != null &&
                    this.ConsumerNumber.Equals(input.ConsumerNumber))
                ) && 
                (
                    this.Surname == input.Surname ||
                    (this.Surname != null &&
                    this.Surname.Equals(input.Surname))
                ) && 
                (
                    this.Forename1 == input.Forename1 ||
                    (this.Forename1 != null &&
                    this.Forename1.Equals(input.Forename1))
                ) && 
                (
                    this.Forename2 == input.Forename2 ||
                    (this.Forename2 != null &&
                    this.Forename2.Equals(input.Forename2))
                ) && 
                (
                    this.Forename3 == input.Forename3 ||
                    (this.Forename3 != null &&
                    this.Forename3.Equals(input.Forename3))
                ) && 
                (
                    this.IdNumber == input.IdNumber ||
                    (this.IdNumber != null &&
                    this.IdNumber.Equals(input.IdNumber))
                ) && 
                (
                    this.DateOfBirth == input.DateOfBirth ||
                    (this.DateOfBirth != null &&
                    this.DateOfBirth.Equals(input.DateOfBirth))
                ) && 
                (
                    this.StartDate == input.StartDate ||
                    (this.StartDate != null &&
                    this.StartDate.Equals(input.StartDate))
                ) && 
                (
                    this.Comment == input.Comment ||
                    (this.Comment != null &&
                    this.Comment.Equals(input.Comment))
                ) && 
                (
                    this.ConsumerSurname1 == input.ConsumerSurname1 ||
                    (this.ConsumerSurname1 != null &&
                    this.ConsumerSurname1.Equals(input.ConsumerSurname1))
                ) && 
                (
                    this.ConsumerSurname2 == input.ConsumerSurname2 ||
                    (this.ConsumerSurname2 != null &&
                    this.ConsumerSurname2.Equals(input.ConsumerSurname2))
                ) && 
                (
                    this.ConsumerForename1 == input.ConsumerForename1 ||
                    (this.ConsumerForename1 != null &&
                    this.ConsumerForename1.Equals(input.ConsumerForename1))
                ) && 
                (
                    this.ConsumerForename2 == input.ConsumerForename2 ||
                    (this.ConsumerForename2 != null &&
                    this.ConsumerForename2.Equals(input.ConsumerForename2))
                ) && 
                (
                    this.ConsumerForename3 == input.ConsumerForename3 ||
                    (this.ConsumerForename3 != null &&
                    this.ConsumerForename3.Equals(input.ConsumerForename3))
                ) && 
                (
                    this.Address == input.Address ||
                    this.Address != null &&
                    input.Address != null &&
                    this.Address.SequenceEqual(input.Address)
                ) && 
                (
                    this.HomeTelephoneList == input.HomeTelephoneList ||
                    this.HomeTelephoneList != null &&
                    input.HomeTelephoneList != null &&
                    this.HomeTelephoneList.SequenceEqual(input.HomeTelephoneList)
                ) && 
                (
                    this.WorkTelephoneList == input.WorkTelephoneList ||
                    this.WorkTelephoneList != null &&
                    input.WorkTelephoneList != null &&
                    this.WorkTelephoneList.SequenceEqual(input.WorkTelephoneList)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MajorProduct != null)
                    hashCode = hashCode * 59 + this.MajorProduct.GetHashCode();
                if (this.ItNumber != null)
                    hashCode = hashCode * 59 + this.ItNumber.GetHashCode();
                if (this.ConsumerNumber != null)
                    hashCode = hashCode * 59 + this.ConsumerNumber.GetHashCode();
                if (this.Surname != null)
                    hashCode = hashCode * 59 + this.Surname.GetHashCode();
                if (this.Forename1 != null)
                    hashCode = hashCode * 59 + this.Forename1.GetHashCode();
                if (this.Forename2 != null)
                    hashCode = hashCode * 59 + this.Forename2.GetHashCode();
                if (this.Forename3 != null)
                    hashCode = hashCode * 59 + this.Forename3.GetHashCode();
                if (this.IdNumber != null)
                    hashCode = hashCode * 59 + this.IdNumber.GetHashCode();
                if (this.DateOfBirth != null)
                    hashCode = hashCode * 59 + this.DateOfBirth.GetHashCode();
                if (this.StartDate != null)
                    hashCode = hashCode * 59 + this.StartDate.GetHashCode();
                if (this.Comment != null)
                    hashCode = hashCode * 59 + this.Comment.GetHashCode();
                if (this.ConsumerSurname1 != null)
                    hashCode = hashCode * 59 + this.ConsumerSurname1.GetHashCode();
                if (this.ConsumerSurname2 != null)
                    hashCode = hashCode * 59 + this.ConsumerSurname2.GetHashCode();
                if (this.ConsumerForename1 != null)
                    hashCode = hashCode * 59 + this.ConsumerForename1.GetHashCode();
                if (this.ConsumerForename2 != null)
                    hashCode = hashCode * 59 + this.ConsumerForename2.GetHashCode();
                if (this.ConsumerForename3 != null)
                    hashCode = hashCode * 59 + this.ConsumerForename3.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.HomeTelephoneList != null)
                    hashCode = hashCode * 59 + this.HomeTelephoneList.GetHashCode();
                if (this.WorkTelephoneList != null)
                    hashCode = hashCode * 59 + this.WorkTelephoneList.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
