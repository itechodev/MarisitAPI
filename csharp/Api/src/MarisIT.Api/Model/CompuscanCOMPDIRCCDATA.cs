/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// CompuscanCOMPDIRCCDATA
    /// </summary>
    [DataContract]
    public partial class CompuscanCOMPDIRCCDATA :  IEquatable<CompuscanCOMPDIRCCDATA>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompuscanCOMPDIRCCDATA" /> class.
        /// </summary>
        /// <param name="ac">ac.</param>
        /// <param name="activecompanies">activecompanies.</param>
        /// <param name="adverseacc">adverseacc.</param>
        /// <param name="creditscore">creditscore.</param>
        /// <param name="debtrestruct">debtrestruct.</param>
        /// <param name="dirnamesurname">dirnamesurname.</param>
        /// <param name="firstnames">firstnames.</param>
        /// <param name="fraudalerts">fraudalerts.</param>
        /// <param name="idnumber">idnumber.</param>
        /// <param name="judgements">judgements.</param>
        /// <param name="properties">properties.</param>
        /// <param name="surname">surname.</param>
        /// <param name="writtenoffacc">writtenoffacc.</param>
        public CompuscanCOMPDIRCCDATA(string ac = default(string), string activecompanies = default(string), string adverseacc = default(string), string creditscore = default(string), string debtrestruct = default(string), string dirnamesurname = default(string), string firstnames = default(string), string fraudalerts = default(string), string idnumber = default(string), string judgements = default(string), string properties = default(string), string surname = default(string), string writtenoffacc = default(string))
        {
            this.Ac = ac;
            this.Activecompanies = activecompanies;
            this.Adverseacc = adverseacc;
            this.Creditscore = creditscore;
            this.Debtrestruct = debtrestruct;
            this.Dirnamesurname = dirnamesurname;
            this.Firstnames = firstnames;
            this.Fraudalerts = fraudalerts;
            this.Idnumber = idnumber;
            this.Judgements = judgements;
            this.Properties = properties;
            this.Surname = surname;
            this.Writtenoffacc = writtenoffacc;
            this.Ac = ac;
            this.Activecompanies = activecompanies;
            this.Adverseacc = adverseacc;
            this.Creditscore = creditscore;
            this.Debtrestruct = debtrestruct;
            this.Dirnamesurname = dirnamesurname;
            this.Firstnames = firstnames;
            this.Fraudalerts = fraudalerts;
            this.Idnumber = idnumber;
            this.Judgements = judgements;
            this.Properties = properties;
            this.Surname = surname;
            this.Writtenoffacc = writtenoffacc;
        }

        /// <summary>
        /// Gets or Sets Ac
        /// </summary>
        [DataMember(Name="ac", EmitDefaultValue=true)]
        public string Ac { get; set; }

        /// <summary>
        /// Gets or Sets Activecompanies
        /// </summary>
        [DataMember(Name="activecompanies", EmitDefaultValue=true)]
        public string Activecompanies { get; set; }

        /// <summary>
        /// Gets or Sets Adverseacc
        /// </summary>
        [DataMember(Name="adverseacc", EmitDefaultValue=true)]
        public string Adverseacc { get; set; }

        /// <summary>
        /// Gets or Sets Creditscore
        /// </summary>
        [DataMember(Name="creditscore", EmitDefaultValue=true)]
        public string Creditscore { get; set; }

        /// <summary>
        /// Gets or Sets Debtrestruct
        /// </summary>
        [DataMember(Name="debtrestruct", EmitDefaultValue=true)]
        public string Debtrestruct { get; set; }

        /// <summary>
        /// Gets or Sets Dirnamesurname
        /// </summary>
        [DataMember(Name="dirnamesurname", EmitDefaultValue=true)]
        public string Dirnamesurname { get; set; }

        /// <summary>
        /// Gets or Sets Firstnames
        /// </summary>
        [DataMember(Name="firstnames", EmitDefaultValue=true)]
        public string Firstnames { get; set; }

        /// <summary>
        /// Gets or Sets Fraudalerts
        /// </summary>
        [DataMember(Name="fraudalerts", EmitDefaultValue=true)]
        public string Fraudalerts { get; set; }

        /// <summary>
        /// Gets or Sets Idnumber
        /// </summary>
        [DataMember(Name="idnumber", EmitDefaultValue=true)]
        public string Idnumber { get; set; }

        /// <summary>
        /// Gets or Sets Judgements
        /// </summary>
        [DataMember(Name="judgements", EmitDefaultValue=true)]
        public string Judgements { get; set; }

        /// <summary>
        /// Gets or Sets Properties
        /// </summary>
        [DataMember(Name="properties", EmitDefaultValue=true)]
        public string Properties { get; set; }

        /// <summary>
        /// Gets or Sets Surname
        /// </summary>
        [DataMember(Name="surname", EmitDefaultValue=true)]
        public string Surname { get; set; }

        /// <summary>
        /// Gets or Sets Writtenoffacc
        /// </summary>
        [DataMember(Name="writtenoffacc", EmitDefaultValue=true)]
        public string Writtenoffacc { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompuscanCOMPDIRCCDATA {\n");
            sb.Append("  Ac: ").Append(Ac).Append("\n");
            sb.Append("  Activecompanies: ").Append(Activecompanies).Append("\n");
            sb.Append("  Adverseacc: ").Append(Adverseacc).Append("\n");
            sb.Append("  Creditscore: ").Append(Creditscore).Append("\n");
            sb.Append("  Debtrestruct: ").Append(Debtrestruct).Append("\n");
            sb.Append("  Dirnamesurname: ").Append(Dirnamesurname).Append("\n");
            sb.Append("  Firstnames: ").Append(Firstnames).Append("\n");
            sb.Append("  Fraudalerts: ").Append(Fraudalerts).Append("\n");
            sb.Append("  Idnumber: ").Append(Idnumber).Append("\n");
            sb.Append("  Judgements: ").Append(Judgements).Append("\n");
            sb.Append("  Properties: ").Append(Properties).Append("\n");
            sb.Append("  Surname: ").Append(Surname).Append("\n");
            sb.Append("  Writtenoffacc: ").Append(Writtenoffacc).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompuscanCOMPDIRCCDATA);
        }

        /// <summary>
        /// Returns true if CompuscanCOMPDIRCCDATA instances are equal
        /// </summary>
        /// <param name="input">Instance of CompuscanCOMPDIRCCDATA to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompuscanCOMPDIRCCDATA input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Ac == input.Ac ||
                    (this.Ac != null &&
                    this.Ac.Equals(input.Ac))
                ) && 
                (
                    this.Activecompanies == input.Activecompanies ||
                    (this.Activecompanies != null &&
                    this.Activecompanies.Equals(input.Activecompanies))
                ) && 
                (
                    this.Adverseacc == input.Adverseacc ||
                    (this.Adverseacc != null &&
                    this.Adverseacc.Equals(input.Adverseacc))
                ) && 
                (
                    this.Creditscore == input.Creditscore ||
                    (this.Creditscore != null &&
                    this.Creditscore.Equals(input.Creditscore))
                ) && 
                (
                    this.Debtrestruct == input.Debtrestruct ||
                    (this.Debtrestruct != null &&
                    this.Debtrestruct.Equals(input.Debtrestruct))
                ) && 
                (
                    this.Dirnamesurname == input.Dirnamesurname ||
                    (this.Dirnamesurname != null &&
                    this.Dirnamesurname.Equals(input.Dirnamesurname))
                ) && 
                (
                    this.Firstnames == input.Firstnames ||
                    (this.Firstnames != null &&
                    this.Firstnames.Equals(input.Firstnames))
                ) && 
                (
                    this.Fraudalerts == input.Fraudalerts ||
                    (this.Fraudalerts != null &&
                    this.Fraudalerts.Equals(input.Fraudalerts))
                ) && 
                (
                    this.Idnumber == input.Idnumber ||
                    (this.Idnumber != null &&
                    this.Idnumber.Equals(input.Idnumber))
                ) && 
                (
                    this.Judgements == input.Judgements ||
                    (this.Judgements != null &&
                    this.Judgements.Equals(input.Judgements))
                ) && 
                (
                    this.Properties == input.Properties ||
                    (this.Properties != null &&
                    this.Properties.Equals(input.Properties))
                ) && 
                (
                    this.Surname == input.Surname ||
                    (this.Surname != null &&
                    this.Surname.Equals(input.Surname))
                ) && 
                (
                    this.Writtenoffacc == input.Writtenoffacc ||
                    (this.Writtenoffacc != null &&
                    this.Writtenoffacc.Equals(input.Writtenoffacc))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Ac != null)
                    hashCode = hashCode * 59 + this.Ac.GetHashCode();
                if (this.Activecompanies != null)
                    hashCode = hashCode * 59 + this.Activecompanies.GetHashCode();
                if (this.Adverseacc != null)
                    hashCode = hashCode * 59 + this.Adverseacc.GetHashCode();
                if (this.Creditscore != null)
                    hashCode = hashCode * 59 + this.Creditscore.GetHashCode();
                if (this.Debtrestruct != null)
                    hashCode = hashCode * 59 + this.Debtrestruct.GetHashCode();
                if (this.Dirnamesurname != null)
                    hashCode = hashCode * 59 + this.Dirnamesurname.GetHashCode();
                if (this.Firstnames != null)
                    hashCode = hashCode * 59 + this.Firstnames.GetHashCode();
                if (this.Fraudalerts != null)
                    hashCode = hashCode * 59 + this.Fraudalerts.GetHashCode();
                if (this.Idnumber != null)
                    hashCode = hashCode * 59 + this.Idnumber.GetHashCode();
                if (this.Judgements != null)
                    hashCode = hashCode * 59 + this.Judgements.GetHashCode();
                if (this.Properties != null)
                    hashCode = hashCode * 59 + this.Properties.GetHashCode();
                if (this.Surname != null)
                    hashCode = hashCode * 59 + this.Surname.GetHashCode();
                if (this.Writtenoffacc != null)
                    hashCode = hashCode * 59 + this.Writtenoffacc.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
