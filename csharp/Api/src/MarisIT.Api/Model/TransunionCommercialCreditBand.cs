/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialCreditBand
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialCreditBand :  IEquatable<TransunionCommercialCreditBand>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialCreditBand" /> class.
        /// </summary>
        /// <param name="invoiceAmount">invoiceAmount.</param>
        /// <param name="noOfInvoices">noOfInvoices.</param>
        /// <param name="withinTerms">withinTerms.</param>
        /// <param name="days1to10">days1to10.</param>
        /// <param name="days11to30">days11to30.</param>
        /// <param name="days31to60">days31to60.</param>
        /// <param name="days61to90">days61to90.</param>
        /// <param name="days91to120">days91to120.</param>
        /// <param name="days120toPlus">days120toPlus.</param>
        public TransunionCommercialCreditBand(string invoiceAmount = default(string), string noOfInvoices = default(string), string withinTerms = default(string), string days1to10 = default(string), string days11to30 = default(string), string days31to60 = default(string), string days61to90 = default(string), string days91to120 = default(string), string days120toPlus = default(string))
        {
            this.InvoiceAmount = invoiceAmount;
            this.NoOfInvoices = noOfInvoices;
            this.WithinTerms = withinTerms;
            this.Days1to10 = days1to10;
            this.Days11to30 = days11to30;
            this.Days31to60 = days31to60;
            this.Days61to90 = days61to90;
            this.Days91to120 = days91to120;
            this.Days120toPlus = days120toPlus;
            this.InvoiceAmount = invoiceAmount;
            this.NoOfInvoices = noOfInvoices;
            this.WithinTerms = withinTerms;
            this.Days1to10 = days1to10;
            this.Days11to30 = days11to30;
            this.Days31to60 = days31to60;
            this.Days61to90 = days61to90;
            this.Days91to120 = days91to120;
            this.Days120toPlus = days120toPlus;
        }

        /// <summary>
        /// Gets or Sets InvoiceAmount
        /// </summary>
        [DataMember(Name="invoiceAmount", EmitDefaultValue=true)]
        public string InvoiceAmount { get; set; }

        /// <summary>
        /// Gets or Sets NoOfInvoices
        /// </summary>
        [DataMember(Name="noOfInvoices", EmitDefaultValue=true)]
        public string NoOfInvoices { get; set; }

        /// <summary>
        /// Gets or Sets WithinTerms
        /// </summary>
        [DataMember(Name="withinTerms", EmitDefaultValue=true)]
        public string WithinTerms { get; set; }

        /// <summary>
        /// Gets or Sets Days1to10
        /// </summary>
        [DataMember(Name="days1to10", EmitDefaultValue=true)]
        public string Days1to10 { get; set; }

        /// <summary>
        /// Gets or Sets Days11to30
        /// </summary>
        [DataMember(Name="days11to30", EmitDefaultValue=true)]
        public string Days11to30 { get; set; }

        /// <summary>
        /// Gets or Sets Days31to60
        /// </summary>
        [DataMember(Name="days31to60", EmitDefaultValue=true)]
        public string Days31to60 { get; set; }

        /// <summary>
        /// Gets or Sets Days61to90
        /// </summary>
        [DataMember(Name="days61to90", EmitDefaultValue=true)]
        public string Days61to90 { get; set; }

        /// <summary>
        /// Gets or Sets Days91to120
        /// </summary>
        [DataMember(Name="days91to120", EmitDefaultValue=true)]
        public string Days91to120 { get; set; }

        /// <summary>
        /// Gets or Sets Days120toPlus
        /// </summary>
        [DataMember(Name="days120toPlus", EmitDefaultValue=true)]
        public string Days120toPlus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialCreditBand {\n");
            sb.Append("  InvoiceAmount: ").Append(InvoiceAmount).Append("\n");
            sb.Append("  NoOfInvoices: ").Append(NoOfInvoices).Append("\n");
            sb.Append("  WithinTerms: ").Append(WithinTerms).Append("\n");
            sb.Append("  Days1to10: ").Append(Days1to10).Append("\n");
            sb.Append("  Days11to30: ").Append(Days11to30).Append("\n");
            sb.Append("  Days31to60: ").Append(Days31to60).Append("\n");
            sb.Append("  Days61to90: ").Append(Days61to90).Append("\n");
            sb.Append("  Days91to120: ").Append(Days91to120).Append("\n");
            sb.Append("  Days120toPlus: ").Append(Days120toPlus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialCreditBand);
        }

        /// <summary>
        /// Returns true if TransunionCommercialCreditBand instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialCreditBand to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialCreditBand input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.InvoiceAmount == input.InvoiceAmount ||
                    (this.InvoiceAmount != null &&
                    this.InvoiceAmount.Equals(input.InvoiceAmount))
                ) && 
                (
                    this.NoOfInvoices == input.NoOfInvoices ||
                    (this.NoOfInvoices != null &&
                    this.NoOfInvoices.Equals(input.NoOfInvoices))
                ) && 
                (
                    this.WithinTerms == input.WithinTerms ||
                    (this.WithinTerms != null &&
                    this.WithinTerms.Equals(input.WithinTerms))
                ) && 
                (
                    this.Days1to10 == input.Days1to10 ||
                    (this.Days1to10 != null &&
                    this.Days1to10.Equals(input.Days1to10))
                ) && 
                (
                    this.Days11to30 == input.Days11to30 ||
                    (this.Days11to30 != null &&
                    this.Days11to30.Equals(input.Days11to30))
                ) && 
                (
                    this.Days31to60 == input.Days31to60 ||
                    (this.Days31to60 != null &&
                    this.Days31to60.Equals(input.Days31to60))
                ) && 
                (
                    this.Days61to90 == input.Days61to90 ||
                    (this.Days61to90 != null &&
                    this.Days61to90.Equals(input.Days61to90))
                ) && 
                (
                    this.Days91to120 == input.Days91to120 ||
                    (this.Days91to120 != null &&
                    this.Days91to120.Equals(input.Days91to120))
                ) && 
                (
                    this.Days120toPlus == input.Days120toPlus ||
                    (this.Days120toPlus != null &&
                    this.Days120toPlus.Equals(input.Days120toPlus))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.InvoiceAmount != null)
                    hashCode = hashCode * 59 + this.InvoiceAmount.GetHashCode();
                if (this.NoOfInvoices != null)
                    hashCode = hashCode * 59 + this.NoOfInvoices.GetHashCode();
                if (this.WithinTerms != null)
                    hashCode = hashCode * 59 + this.WithinTerms.GetHashCode();
                if (this.Days1to10 != null)
                    hashCode = hashCode * 59 + this.Days1to10.GetHashCode();
                if (this.Days11to30 != null)
                    hashCode = hashCode * 59 + this.Days11to30.GetHashCode();
                if (this.Days31to60 != null)
                    hashCode = hashCode * 59 + this.Days31to60.GetHashCode();
                if (this.Days61to90 != null)
                    hashCode = hashCode * 59 + this.Days61to90.GetHashCode();
                if (this.Days91to120 != null)
                    hashCode = hashCode * 59 + this.Days91to120.GetHashCode();
                if (this.Days120toPlus != null)
                    hashCode = hashCode * 59 + this.Days120toPlus.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
