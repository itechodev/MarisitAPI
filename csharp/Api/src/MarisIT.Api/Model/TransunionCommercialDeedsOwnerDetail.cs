/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialDeedsOwnerDetail
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialDeedsOwnerDetail :  IEquatable<TransunionCommercialDeedsOwnerDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialDeedsOwnerDetail" /> class.
        /// </summary>
        /// <param name="multiBuyer">multiBuyer.</param>
        /// <param name="multiBuyerID">multiBuyerID.</param>
        /// <param name="multiITNumber">multiITNumber.</param>
        /// <param name="multiConsumerNumber">multiConsumerNumber.</param>
        /// <param name="multiStatDescription">multiStatDescription.</param>
        public TransunionCommercialDeedsOwnerDetail(string multiBuyer = default(string), string multiBuyerID = default(string), string multiITNumber = default(string), string multiConsumerNumber = default(string), string multiStatDescription = default(string))
        {
            this.MultiBuyer = multiBuyer;
            this.MultiBuyerID = multiBuyerID;
            this.MultiITNumber = multiITNumber;
            this.MultiConsumerNumber = multiConsumerNumber;
            this.MultiStatDescription = multiStatDescription;
            this.MultiBuyer = multiBuyer;
            this.MultiBuyerID = multiBuyerID;
            this.MultiITNumber = multiITNumber;
            this.MultiConsumerNumber = multiConsumerNumber;
            this.MultiStatDescription = multiStatDescription;
        }

        /// <summary>
        /// Gets or Sets MultiBuyer
        /// </summary>
        [DataMember(Name="multiBuyer", EmitDefaultValue=true)]
        public string MultiBuyer { get; set; }

        /// <summary>
        /// Gets or Sets MultiBuyerID
        /// </summary>
        [DataMember(Name="multiBuyerID", EmitDefaultValue=true)]
        public string MultiBuyerID { get; set; }

        /// <summary>
        /// Gets or Sets MultiITNumber
        /// </summary>
        [DataMember(Name="multiITNumber", EmitDefaultValue=true)]
        public string MultiITNumber { get; set; }

        /// <summary>
        /// Gets or Sets MultiConsumerNumber
        /// </summary>
        [DataMember(Name="multiConsumerNumber", EmitDefaultValue=true)]
        public string MultiConsumerNumber { get; set; }

        /// <summary>
        /// Gets or Sets MultiStatDescription
        /// </summary>
        [DataMember(Name="multiStatDescription", EmitDefaultValue=true)]
        public string MultiStatDescription { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialDeedsOwnerDetail {\n");
            sb.Append("  MultiBuyer: ").Append(MultiBuyer).Append("\n");
            sb.Append("  MultiBuyerID: ").Append(MultiBuyerID).Append("\n");
            sb.Append("  MultiITNumber: ").Append(MultiITNumber).Append("\n");
            sb.Append("  MultiConsumerNumber: ").Append(MultiConsumerNumber).Append("\n");
            sb.Append("  MultiStatDescription: ").Append(MultiStatDescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialDeedsOwnerDetail);
        }

        /// <summary>
        /// Returns true if TransunionCommercialDeedsOwnerDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialDeedsOwnerDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialDeedsOwnerDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MultiBuyer == input.MultiBuyer ||
                    (this.MultiBuyer != null &&
                    this.MultiBuyer.Equals(input.MultiBuyer))
                ) && 
                (
                    this.MultiBuyerID == input.MultiBuyerID ||
                    (this.MultiBuyerID != null &&
                    this.MultiBuyerID.Equals(input.MultiBuyerID))
                ) && 
                (
                    this.MultiITNumber == input.MultiITNumber ||
                    (this.MultiITNumber != null &&
                    this.MultiITNumber.Equals(input.MultiITNumber))
                ) && 
                (
                    this.MultiConsumerNumber == input.MultiConsumerNumber ||
                    (this.MultiConsumerNumber != null &&
                    this.MultiConsumerNumber.Equals(input.MultiConsumerNumber))
                ) && 
                (
                    this.MultiStatDescription == input.MultiStatDescription ||
                    (this.MultiStatDescription != null &&
                    this.MultiStatDescription.Equals(input.MultiStatDescription))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MultiBuyer != null)
                    hashCode = hashCode * 59 + this.MultiBuyer.GetHashCode();
                if (this.MultiBuyerID != null)
                    hashCode = hashCode * 59 + this.MultiBuyerID.GetHashCode();
                if (this.MultiITNumber != null)
                    hashCode = hashCode * 59 + this.MultiITNumber.GetHashCode();
                if (this.MultiConsumerNumber != null)
                    hashCode = hashCode * 59 + this.MultiConsumerNumber.GetHashCode();
                if (this.MultiStatDescription != null)
                    hashCode = hashCode * 59 + this.MultiStatDescription.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
