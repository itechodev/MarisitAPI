/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118NLRAccountInformationMP03
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118NLRAccountInformationMP03 :  IEquatable<TransunionConsumer118NLRAccountInformationMP03>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118NLRAccountInformationMP03" /> class.
        /// </summary>
        /// <param name="consumerNo">consumerNo.</param>
        /// <param name="nlrAccountType">nlrAccountType.</param>
        /// <param name="enquiryReferenceNumber">enquiryReferenceNumber.</param>
        /// <param name="subscriberCode">subscriberCode.</param>
        /// <param name="subscriberName">subscriberName.</param>
        /// <param name="branchCode">branchCode.</param>
        /// <param name="accountNumber">accountNumber.</param>
        /// <param name="subAccountNumber">subAccountNumber.</param>
        /// <param name="loanType">loanType.</param>
        /// <param name="accountOpenDate">accountOpenDate.</param>
        /// <param name="lastUpdateDate">lastUpdateDate.</param>
        /// <param name="dateOfWriteOffClosure">dateOfWriteOffClosure.</param>
        /// <param name="loanAmount">loanAmount.</param>
        /// <param name="totalAmountRepayable">totalAmountRepayable.</param>
        /// <param name="randValueInterestCharges">randValueInterestCharges.</param>
        /// <param name="randValueTotalChargeCredit">randValueTotalChargeCredit.</param>
        /// <param name="installmentAmount">installmentAmount.</param>
        /// <param name="currentBalance">currentBalance.</param>
        /// <param name="balanceOverdue">balanceOverdue.</param>
        /// <param name="settlementAmount">settlementAmount.</param>
        /// <param name="termsPaymentType">termsPaymentType.</param>
        /// <param name="paymentTerms">paymentTerms.</param>
        /// <param name="paymentProfileHistory">paymentProfileHistory.</param>
        /// <param name="worstPaymentHistory">worstPaymentHistory.</param>
        /// <param name="statusCode">statusCode.</param>
        /// <param name="endUseCode">endUseCode.</param>
        /// <param name="interestRateType">interestRateType.</param>
        /// <param name="annualRateTotalChargeOfCredit">annualRateTotalChargeOfCredit.</param>
        /// <param name="dataSubmissionCategory">dataSubmissionCategory.</param>
        /// <param name="loanRegistrationNumber">loanRegistrationNumber.</param>
        public TransunionConsumer118NLRAccountInformationMP03(string consumerNo = default(string), string nlrAccountType = default(string), string enquiryReferenceNumber = default(string), string subscriberCode = default(string), string subscriberName = default(string), string branchCode = default(string), string accountNumber = default(string), string subAccountNumber = default(string), string loanType = default(string), string accountOpenDate = default(string), string lastUpdateDate = default(string), string dateOfWriteOffClosure = default(string), string loanAmount = default(string), string totalAmountRepayable = default(string), string randValueInterestCharges = default(string), string randValueTotalChargeCredit = default(string), string installmentAmount = default(string), string currentBalance = default(string), string balanceOverdue = default(string), string settlementAmount = default(string), string termsPaymentType = default(string), string paymentTerms = default(string), string paymentProfileHistory = default(string), string worstPaymentHistory = default(string), string statusCode = default(string), string endUseCode = default(string), string interestRateType = default(string), string annualRateTotalChargeOfCredit = default(string), string dataSubmissionCategory = default(string), string loanRegistrationNumber = default(string))
        {
            this.ConsumerNo = consumerNo;
            this.NlrAccountType = nlrAccountType;
            this.EnquiryReferenceNumber = enquiryReferenceNumber;
            this.SubscriberCode = subscriberCode;
            this.SubscriberName = subscriberName;
            this.BranchCode = branchCode;
            this.AccountNumber = accountNumber;
            this.SubAccountNumber = subAccountNumber;
            this.LoanType = loanType;
            this.AccountOpenDate = accountOpenDate;
            this.LastUpdateDate = lastUpdateDate;
            this.DateOfWriteOffClosure = dateOfWriteOffClosure;
            this.LoanAmount = loanAmount;
            this.TotalAmountRepayable = totalAmountRepayable;
            this.RandValueInterestCharges = randValueInterestCharges;
            this.RandValueTotalChargeCredit = randValueTotalChargeCredit;
            this.InstallmentAmount = installmentAmount;
            this.CurrentBalance = currentBalance;
            this.BalanceOverdue = balanceOverdue;
            this.SettlementAmount = settlementAmount;
            this.TermsPaymentType = termsPaymentType;
            this.PaymentTerms = paymentTerms;
            this.PaymentProfileHistory = paymentProfileHistory;
            this.WorstPaymentHistory = worstPaymentHistory;
            this.StatusCode = statusCode;
            this.EndUseCode = endUseCode;
            this.InterestRateType = interestRateType;
            this.AnnualRateTotalChargeOfCredit = annualRateTotalChargeOfCredit;
            this.DataSubmissionCategory = dataSubmissionCategory;
            this.LoanRegistrationNumber = loanRegistrationNumber;
            this.ConsumerNo = consumerNo;
            this.NlrAccountType = nlrAccountType;
            this.EnquiryReferenceNumber = enquiryReferenceNumber;
            this.SubscriberCode = subscriberCode;
            this.SubscriberName = subscriberName;
            this.BranchCode = branchCode;
            this.AccountNumber = accountNumber;
            this.SubAccountNumber = subAccountNumber;
            this.LoanType = loanType;
            this.AccountOpenDate = accountOpenDate;
            this.LastUpdateDate = lastUpdateDate;
            this.DateOfWriteOffClosure = dateOfWriteOffClosure;
            this.LoanAmount = loanAmount;
            this.TotalAmountRepayable = totalAmountRepayable;
            this.RandValueInterestCharges = randValueInterestCharges;
            this.RandValueTotalChargeCredit = randValueTotalChargeCredit;
            this.InstallmentAmount = installmentAmount;
            this.CurrentBalance = currentBalance;
            this.BalanceOverdue = balanceOverdue;
            this.SettlementAmount = settlementAmount;
            this.TermsPaymentType = termsPaymentType;
            this.PaymentTerms = paymentTerms;
            this.PaymentProfileHistory = paymentProfileHistory;
            this.WorstPaymentHistory = worstPaymentHistory;
            this.StatusCode = statusCode;
            this.EndUseCode = endUseCode;
            this.InterestRateType = interestRateType;
            this.AnnualRateTotalChargeOfCredit = annualRateTotalChargeOfCredit;
            this.DataSubmissionCategory = dataSubmissionCategory;
            this.LoanRegistrationNumber = loanRegistrationNumber;
        }

        /// <summary>
        /// Gets or Sets ConsumerNo
        /// </summary>
        [DataMember(Name="consumerNo", EmitDefaultValue=true)]
        public string ConsumerNo { get; set; }

        /// <summary>
        /// Gets or Sets NlrAccountType
        /// </summary>
        [DataMember(Name="nlrAccountType", EmitDefaultValue=true)]
        public string NlrAccountType { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryReferenceNumber
        /// </summary>
        [DataMember(Name="enquiryReferenceNumber", EmitDefaultValue=true)]
        public string EnquiryReferenceNumber { get; set; }

        /// <summary>
        /// Gets or Sets SubscriberCode
        /// </summary>
        [DataMember(Name="subscriberCode", EmitDefaultValue=true)]
        public string SubscriberCode { get; set; }

        /// <summary>
        /// Gets or Sets SubscriberName
        /// </summary>
        [DataMember(Name="subscriberName", EmitDefaultValue=true)]
        public string SubscriberName { get; set; }

        /// <summary>
        /// Gets or Sets BranchCode
        /// </summary>
        [DataMember(Name="branchCode", EmitDefaultValue=true)]
        public string BranchCode { get; set; }

        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name="accountNumber", EmitDefaultValue=true)]
        public string AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets SubAccountNumber
        /// </summary>
        [DataMember(Name="subAccountNumber", EmitDefaultValue=true)]
        public string SubAccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets LoanType
        /// </summary>
        [DataMember(Name="loanType", EmitDefaultValue=true)]
        public string LoanType { get; set; }

        /// <summary>
        /// Gets or Sets AccountOpenDate
        /// </summary>
        [DataMember(Name="accountOpenDate", EmitDefaultValue=true)]
        public string AccountOpenDate { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdateDate
        /// </summary>
        [DataMember(Name="lastUpdateDate", EmitDefaultValue=true)]
        public string LastUpdateDate { get; set; }

        /// <summary>
        /// Gets or Sets DateOfWriteOffClosure
        /// </summary>
        [DataMember(Name="dateOfWriteOffClosure", EmitDefaultValue=true)]
        public string DateOfWriteOffClosure { get; set; }

        /// <summary>
        /// Gets or Sets LoanAmount
        /// </summary>
        [DataMember(Name="loanAmount", EmitDefaultValue=true)]
        public string LoanAmount { get; set; }

        /// <summary>
        /// Gets or Sets TotalAmountRepayable
        /// </summary>
        [DataMember(Name="totalAmountRepayable", EmitDefaultValue=true)]
        public string TotalAmountRepayable { get; set; }

        /// <summary>
        /// Gets or Sets RandValueInterestCharges
        /// </summary>
        [DataMember(Name="randValueInterestCharges", EmitDefaultValue=true)]
        public string RandValueInterestCharges { get; set; }

        /// <summary>
        /// Gets or Sets RandValueTotalChargeCredit
        /// </summary>
        [DataMember(Name="randValueTotalChargeCredit", EmitDefaultValue=true)]
        public string RandValueTotalChargeCredit { get; set; }

        /// <summary>
        /// Gets or Sets InstallmentAmount
        /// </summary>
        [DataMember(Name="installmentAmount", EmitDefaultValue=true)]
        public string InstallmentAmount { get; set; }

        /// <summary>
        /// Gets or Sets CurrentBalance
        /// </summary>
        [DataMember(Name="currentBalance", EmitDefaultValue=true)]
        public string CurrentBalance { get; set; }

        /// <summary>
        /// Gets or Sets BalanceOverdue
        /// </summary>
        [DataMember(Name="balanceOverdue", EmitDefaultValue=true)]
        public string BalanceOverdue { get; set; }

        /// <summary>
        /// Gets or Sets SettlementAmount
        /// </summary>
        [DataMember(Name="settlementAmount", EmitDefaultValue=true)]
        public string SettlementAmount { get; set; }

        /// <summary>
        /// Gets or Sets TermsPaymentType
        /// </summary>
        [DataMember(Name="termsPaymentType", EmitDefaultValue=true)]
        public string TermsPaymentType { get; set; }

        /// <summary>
        /// Gets or Sets PaymentTerms
        /// </summary>
        [DataMember(Name="paymentTerms", EmitDefaultValue=true)]
        public string PaymentTerms { get; set; }

        /// <summary>
        /// Gets or Sets PaymentProfileHistory
        /// </summary>
        [DataMember(Name="paymentProfileHistory", EmitDefaultValue=true)]
        public string PaymentProfileHistory { get; set; }

        /// <summary>
        /// Gets or Sets WorstPaymentHistory
        /// </summary>
        [DataMember(Name="worstPaymentHistory", EmitDefaultValue=true)]
        public string WorstPaymentHistory { get; set; }

        /// <summary>
        /// Gets or Sets StatusCode
        /// </summary>
        [DataMember(Name="statusCode", EmitDefaultValue=true)]
        public string StatusCode { get; set; }

        /// <summary>
        /// Gets or Sets EndUseCode
        /// </summary>
        [DataMember(Name="endUseCode", EmitDefaultValue=true)]
        public string EndUseCode { get; set; }

        /// <summary>
        /// Gets or Sets InterestRateType
        /// </summary>
        [DataMember(Name="interestRateType", EmitDefaultValue=true)]
        public string InterestRateType { get; set; }

        /// <summary>
        /// Gets or Sets AnnualRateTotalChargeOfCredit
        /// </summary>
        [DataMember(Name="annualRateTotalChargeOfCredit", EmitDefaultValue=true)]
        public string AnnualRateTotalChargeOfCredit { get; set; }

        /// <summary>
        /// Gets or Sets DataSubmissionCategory
        /// </summary>
        [DataMember(Name="dataSubmissionCategory", EmitDefaultValue=true)]
        public string DataSubmissionCategory { get; set; }

        /// <summary>
        /// Gets or Sets LoanRegistrationNumber
        /// </summary>
        [DataMember(Name="loanRegistrationNumber", EmitDefaultValue=true)]
        public string LoanRegistrationNumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118NLRAccountInformationMP03 {\n");
            sb.Append("  ConsumerNo: ").Append(ConsumerNo).Append("\n");
            sb.Append("  NlrAccountType: ").Append(NlrAccountType).Append("\n");
            sb.Append("  EnquiryReferenceNumber: ").Append(EnquiryReferenceNumber).Append("\n");
            sb.Append("  SubscriberCode: ").Append(SubscriberCode).Append("\n");
            sb.Append("  SubscriberName: ").Append(SubscriberName).Append("\n");
            sb.Append("  BranchCode: ").Append(BranchCode).Append("\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  SubAccountNumber: ").Append(SubAccountNumber).Append("\n");
            sb.Append("  LoanType: ").Append(LoanType).Append("\n");
            sb.Append("  AccountOpenDate: ").Append(AccountOpenDate).Append("\n");
            sb.Append("  LastUpdateDate: ").Append(LastUpdateDate).Append("\n");
            sb.Append("  DateOfWriteOffClosure: ").Append(DateOfWriteOffClosure).Append("\n");
            sb.Append("  LoanAmount: ").Append(LoanAmount).Append("\n");
            sb.Append("  TotalAmountRepayable: ").Append(TotalAmountRepayable).Append("\n");
            sb.Append("  RandValueInterestCharges: ").Append(RandValueInterestCharges).Append("\n");
            sb.Append("  RandValueTotalChargeCredit: ").Append(RandValueTotalChargeCredit).Append("\n");
            sb.Append("  InstallmentAmount: ").Append(InstallmentAmount).Append("\n");
            sb.Append("  CurrentBalance: ").Append(CurrentBalance).Append("\n");
            sb.Append("  BalanceOverdue: ").Append(BalanceOverdue).Append("\n");
            sb.Append("  SettlementAmount: ").Append(SettlementAmount).Append("\n");
            sb.Append("  TermsPaymentType: ").Append(TermsPaymentType).Append("\n");
            sb.Append("  PaymentTerms: ").Append(PaymentTerms).Append("\n");
            sb.Append("  PaymentProfileHistory: ").Append(PaymentProfileHistory).Append("\n");
            sb.Append("  WorstPaymentHistory: ").Append(WorstPaymentHistory).Append("\n");
            sb.Append("  StatusCode: ").Append(StatusCode).Append("\n");
            sb.Append("  EndUseCode: ").Append(EndUseCode).Append("\n");
            sb.Append("  InterestRateType: ").Append(InterestRateType).Append("\n");
            sb.Append("  AnnualRateTotalChargeOfCredit: ").Append(AnnualRateTotalChargeOfCredit).Append("\n");
            sb.Append("  DataSubmissionCategory: ").Append(DataSubmissionCategory).Append("\n");
            sb.Append("  LoanRegistrationNumber: ").Append(LoanRegistrationNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118NLRAccountInformationMP03);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118NLRAccountInformationMP03 instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118NLRAccountInformationMP03 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118NLRAccountInformationMP03 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConsumerNo == input.ConsumerNo ||
                    (this.ConsumerNo != null &&
                    this.ConsumerNo.Equals(input.ConsumerNo))
                ) && 
                (
                    this.NlrAccountType == input.NlrAccountType ||
                    (this.NlrAccountType != null &&
                    this.NlrAccountType.Equals(input.NlrAccountType))
                ) && 
                (
                    this.EnquiryReferenceNumber == input.EnquiryReferenceNumber ||
                    (this.EnquiryReferenceNumber != null &&
                    this.EnquiryReferenceNumber.Equals(input.EnquiryReferenceNumber))
                ) && 
                (
                    this.SubscriberCode == input.SubscriberCode ||
                    (this.SubscriberCode != null &&
                    this.SubscriberCode.Equals(input.SubscriberCode))
                ) && 
                (
                    this.SubscriberName == input.SubscriberName ||
                    (this.SubscriberName != null &&
                    this.SubscriberName.Equals(input.SubscriberName))
                ) && 
                (
                    this.BranchCode == input.BranchCode ||
                    (this.BranchCode != null &&
                    this.BranchCode.Equals(input.BranchCode))
                ) && 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.SubAccountNumber == input.SubAccountNumber ||
                    (this.SubAccountNumber != null &&
                    this.SubAccountNumber.Equals(input.SubAccountNumber))
                ) && 
                (
                    this.LoanType == input.LoanType ||
                    (this.LoanType != null &&
                    this.LoanType.Equals(input.LoanType))
                ) && 
                (
                    this.AccountOpenDate == input.AccountOpenDate ||
                    (this.AccountOpenDate != null &&
                    this.AccountOpenDate.Equals(input.AccountOpenDate))
                ) && 
                (
                    this.LastUpdateDate == input.LastUpdateDate ||
                    (this.LastUpdateDate != null &&
                    this.LastUpdateDate.Equals(input.LastUpdateDate))
                ) && 
                (
                    this.DateOfWriteOffClosure == input.DateOfWriteOffClosure ||
                    (this.DateOfWriteOffClosure != null &&
                    this.DateOfWriteOffClosure.Equals(input.DateOfWriteOffClosure))
                ) && 
                (
                    this.LoanAmount == input.LoanAmount ||
                    (this.LoanAmount != null &&
                    this.LoanAmount.Equals(input.LoanAmount))
                ) && 
                (
                    this.TotalAmountRepayable == input.TotalAmountRepayable ||
                    (this.TotalAmountRepayable != null &&
                    this.TotalAmountRepayable.Equals(input.TotalAmountRepayable))
                ) && 
                (
                    this.RandValueInterestCharges == input.RandValueInterestCharges ||
                    (this.RandValueInterestCharges != null &&
                    this.RandValueInterestCharges.Equals(input.RandValueInterestCharges))
                ) && 
                (
                    this.RandValueTotalChargeCredit == input.RandValueTotalChargeCredit ||
                    (this.RandValueTotalChargeCredit != null &&
                    this.RandValueTotalChargeCredit.Equals(input.RandValueTotalChargeCredit))
                ) && 
                (
                    this.InstallmentAmount == input.InstallmentAmount ||
                    (this.InstallmentAmount != null &&
                    this.InstallmentAmount.Equals(input.InstallmentAmount))
                ) && 
                (
                    this.CurrentBalance == input.CurrentBalance ||
                    (this.CurrentBalance != null &&
                    this.CurrentBalance.Equals(input.CurrentBalance))
                ) && 
                (
                    this.BalanceOverdue == input.BalanceOverdue ||
                    (this.BalanceOverdue != null &&
                    this.BalanceOverdue.Equals(input.BalanceOverdue))
                ) && 
                (
                    this.SettlementAmount == input.SettlementAmount ||
                    (this.SettlementAmount != null &&
                    this.SettlementAmount.Equals(input.SettlementAmount))
                ) && 
                (
                    this.TermsPaymentType == input.TermsPaymentType ||
                    (this.TermsPaymentType != null &&
                    this.TermsPaymentType.Equals(input.TermsPaymentType))
                ) && 
                (
                    this.PaymentTerms == input.PaymentTerms ||
                    (this.PaymentTerms != null &&
                    this.PaymentTerms.Equals(input.PaymentTerms))
                ) && 
                (
                    this.PaymentProfileHistory == input.PaymentProfileHistory ||
                    (this.PaymentProfileHistory != null &&
                    this.PaymentProfileHistory.Equals(input.PaymentProfileHistory))
                ) && 
                (
                    this.WorstPaymentHistory == input.WorstPaymentHistory ||
                    (this.WorstPaymentHistory != null &&
                    this.WorstPaymentHistory.Equals(input.WorstPaymentHistory))
                ) && 
                (
                    this.StatusCode == input.StatusCode ||
                    (this.StatusCode != null &&
                    this.StatusCode.Equals(input.StatusCode))
                ) && 
                (
                    this.EndUseCode == input.EndUseCode ||
                    (this.EndUseCode != null &&
                    this.EndUseCode.Equals(input.EndUseCode))
                ) && 
                (
                    this.InterestRateType == input.InterestRateType ||
                    (this.InterestRateType != null &&
                    this.InterestRateType.Equals(input.InterestRateType))
                ) && 
                (
                    this.AnnualRateTotalChargeOfCredit == input.AnnualRateTotalChargeOfCredit ||
                    (this.AnnualRateTotalChargeOfCredit != null &&
                    this.AnnualRateTotalChargeOfCredit.Equals(input.AnnualRateTotalChargeOfCredit))
                ) && 
                (
                    this.DataSubmissionCategory == input.DataSubmissionCategory ||
                    (this.DataSubmissionCategory != null &&
                    this.DataSubmissionCategory.Equals(input.DataSubmissionCategory))
                ) && 
                (
                    this.LoanRegistrationNumber == input.LoanRegistrationNumber ||
                    (this.LoanRegistrationNumber != null &&
                    this.LoanRegistrationNumber.Equals(input.LoanRegistrationNumber))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConsumerNo != null)
                    hashCode = hashCode * 59 + this.ConsumerNo.GetHashCode();
                if (this.NlrAccountType != null)
                    hashCode = hashCode * 59 + this.NlrAccountType.GetHashCode();
                if (this.EnquiryReferenceNumber != null)
                    hashCode = hashCode * 59 + this.EnquiryReferenceNumber.GetHashCode();
                if (this.SubscriberCode != null)
                    hashCode = hashCode * 59 + this.SubscriberCode.GetHashCode();
                if (this.SubscriberName != null)
                    hashCode = hashCode * 59 + this.SubscriberName.GetHashCode();
                if (this.BranchCode != null)
                    hashCode = hashCode * 59 + this.BranchCode.GetHashCode();
                if (this.AccountNumber != null)
                    hashCode = hashCode * 59 + this.AccountNumber.GetHashCode();
                if (this.SubAccountNumber != null)
                    hashCode = hashCode * 59 + this.SubAccountNumber.GetHashCode();
                if (this.LoanType != null)
                    hashCode = hashCode * 59 + this.LoanType.GetHashCode();
                if (this.AccountOpenDate != null)
                    hashCode = hashCode * 59 + this.AccountOpenDate.GetHashCode();
                if (this.LastUpdateDate != null)
                    hashCode = hashCode * 59 + this.LastUpdateDate.GetHashCode();
                if (this.DateOfWriteOffClosure != null)
                    hashCode = hashCode * 59 + this.DateOfWriteOffClosure.GetHashCode();
                if (this.LoanAmount != null)
                    hashCode = hashCode * 59 + this.LoanAmount.GetHashCode();
                if (this.TotalAmountRepayable != null)
                    hashCode = hashCode * 59 + this.TotalAmountRepayable.GetHashCode();
                if (this.RandValueInterestCharges != null)
                    hashCode = hashCode * 59 + this.RandValueInterestCharges.GetHashCode();
                if (this.RandValueTotalChargeCredit != null)
                    hashCode = hashCode * 59 + this.RandValueTotalChargeCredit.GetHashCode();
                if (this.InstallmentAmount != null)
                    hashCode = hashCode * 59 + this.InstallmentAmount.GetHashCode();
                if (this.CurrentBalance != null)
                    hashCode = hashCode * 59 + this.CurrentBalance.GetHashCode();
                if (this.BalanceOverdue != null)
                    hashCode = hashCode * 59 + this.BalanceOverdue.GetHashCode();
                if (this.SettlementAmount != null)
                    hashCode = hashCode * 59 + this.SettlementAmount.GetHashCode();
                if (this.TermsPaymentType != null)
                    hashCode = hashCode * 59 + this.TermsPaymentType.GetHashCode();
                if (this.PaymentTerms != null)
                    hashCode = hashCode * 59 + this.PaymentTerms.GetHashCode();
                if (this.PaymentProfileHistory != null)
                    hashCode = hashCode * 59 + this.PaymentProfileHistory.GetHashCode();
                if (this.WorstPaymentHistory != null)
                    hashCode = hashCode * 59 + this.WorstPaymentHistory.GetHashCode();
                if (this.StatusCode != null)
                    hashCode = hashCode * 59 + this.StatusCode.GetHashCode();
                if (this.EndUseCode != null)
                    hashCode = hashCode * 59 + this.EndUseCode.GetHashCode();
                if (this.InterestRateType != null)
                    hashCode = hashCode * 59 + this.InterestRateType.GetHashCode();
                if (this.AnnualRateTotalChargeOfCredit != null)
                    hashCode = hashCode * 59 + this.AnnualRateTotalChargeOfCredit.GetHashCode();
                if (this.DataSubmissionCategory != null)
                    hashCode = hashCode * 59 + this.DataSubmissionCategory.GetHashCode();
                if (this.LoanRegistrationNumber != null)
                    hashCode = hashCode * 59 + this.LoanRegistrationNumber.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
