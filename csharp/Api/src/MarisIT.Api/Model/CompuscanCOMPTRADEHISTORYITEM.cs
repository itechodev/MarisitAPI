/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// CompuscanCOMPTRADEHISTORYITEM
    /// </summary>
    [DataContract]
    public partial class CompuscanCOMPTRADEHISTORYITEM :  IEquatable<CompuscanCOMPTRADEHISTORYITEM>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompuscanCOMPTRADEHISTORYITEM" /> class.
        /// </summary>
        /// <param name="createDDTTM">createDDTTM.</param>
        /// <param name="createDBY">createDBY.</param>
        /// <param name="companYNAME">companYNAME.</param>
        /// <param name="companYREG">companYREG.</param>
        /// <param name="tradESTARTDATE">tradESTARTDATE.</param>
        /// <param name="modifieDDTTM">modifieDDTTM.</param>
        /// <param name="modifieDBY">modifieDBY.</param>
        public CompuscanCOMPTRADEHISTORYITEM(string createDDTTM = default(string), string createDBY = default(string), string companYNAME = default(string), string companYREG = default(string), string tradESTARTDATE = default(string), string modifieDDTTM = default(string), string modifieDBY = default(string))
        {
            this.CreateDDTTM = createDDTTM;
            this.CreateDBY = createDBY;
            this.CompanYNAME = companYNAME;
            this.CompanYREG = companYREG;
            this.TradESTARTDATE = tradESTARTDATE;
            this.ModifieDDTTM = modifieDDTTM;
            this.ModifieDBY = modifieDBY;
            this.CreateDDTTM = createDDTTM;
            this.CreateDBY = createDBY;
            this.CompanYNAME = companYNAME;
            this.CompanYREG = companYREG;
            this.TradESTARTDATE = tradESTARTDATE;
            this.ModifieDDTTM = modifieDDTTM;
            this.ModifieDBY = modifieDBY;
        }

        /// <summary>
        /// Gets or Sets CreateDDTTM
        /// </summary>
        [DataMember(Name="createD_DTTM", EmitDefaultValue=true)]
        public string CreateDDTTM { get; set; }

        /// <summary>
        /// Gets or Sets CreateDBY
        /// </summary>
        [DataMember(Name="createD_BY", EmitDefaultValue=true)]
        public string CreateDBY { get; set; }

        /// <summary>
        /// Gets or Sets CompanYNAME
        /// </summary>
        [DataMember(Name="companY_NAME", EmitDefaultValue=true)]
        public string CompanYNAME { get; set; }

        /// <summary>
        /// Gets or Sets CompanYREG
        /// </summary>
        [DataMember(Name="companY_REG", EmitDefaultValue=true)]
        public string CompanYREG { get; set; }

        /// <summary>
        /// Gets or Sets TradESTARTDATE
        /// </summary>
        [DataMember(Name="tradE_START_DATE", EmitDefaultValue=true)]
        public string TradESTARTDATE { get; set; }

        /// <summary>
        /// Gets or Sets ModifieDDTTM
        /// </summary>
        [DataMember(Name="modifieD_DTTM", EmitDefaultValue=true)]
        public string ModifieDDTTM { get; set; }

        /// <summary>
        /// Gets or Sets ModifieDBY
        /// </summary>
        [DataMember(Name="modifieD_BY", EmitDefaultValue=true)]
        public string ModifieDBY { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompuscanCOMPTRADEHISTORYITEM {\n");
            sb.Append("  CreateDDTTM: ").Append(CreateDDTTM).Append("\n");
            sb.Append("  CreateDBY: ").Append(CreateDBY).Append("\n");
            sb.Append("  CompanYNAME: ").Append(CompanYNAME).Append("\n");
            sb.Append("  CompanYREG: ").Append(CompanYREG).Append("\n");
            sb.Append("  TradESTARTDATE: ").Append(TradESTARTDATE).Append("\n");
            sb.Append("  ModifieDDTTM: ").Append(ModifieDDTTM).Append("\n");
            sb.Append("  ModifieDBY: ").Append(ModifieDBY).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompuscanCOMPTRADEHISTORYITEM);
        }

        /// <summary>
        /// Returns true if CompuscanCOMPTRADEHISTORYITEM instances are equal
        /// </summary>
        /// <param name="input">Instance of CompuscanCOMPTRADEHISTORYITEM to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompuscanCOMPTRADEHISTORYITEM input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CreateDDTTM == input.CreateDDTTM ||
                    (this.CreateDDTTM != null &&
                    this.CreateDDTTM.Equals(input.CreateDDTTM))
                ) && 
                (
                    this.CreateDBY == input.CreateDBY ||
                    (this.CreateDBY != null &&
                    this.CreateDBY.Equals(input.CreateDBY))
                ) && 
                (
                    this.CompanYNAME == input.CompanYNAME ||
                    (this.CompanYNAME != null &&
                    this.CompanYNAME.Equals(input.CompanYNAME))
                ) && 
                (
                    this.CompanYREG == input.CompanYREG ||
                    (this.CompanYREG != null &&
                    this.CompanYREG.Equals(input.CompanYREG))
                ) && 
                (
                    this.TradESTARTDATE == input.TradESTARTDATE ||
                    (this.TradESTARTDATE != null &&
                    this.TradESTARTDATE.Equals(input.TradESTARTDATE))
                ) && 
                (
                    this.ModifieDDTTM == input.ModifieDDTTM ||
                    (this.ModifieDDTTM != null &&
                    this.ModifieDDTTM.Equals(input.ModifieDDTTM))
                ) && 
                (
                    this.ModifieDBY == input.ModifieDBY ||
                    (this.ModifieDBY != null &&
                    this.ModifieDBY.Equals(input.ModifieDBY))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CreateDDTTM != null)
                    hashCode = hashCode * 59 + this.CreateDDTTM.GetHashCode();
                if (this.CreateDBY != null)
                    hashCode = hashCode * 59 + this.CreateDBY.GetHashCode();
                if (this.CompanYNAME != null)
                    hashCode = hashCode * 59 + this.CompanYNAME.GetHashCode();
                if (this.CompanYREG != null)
                    hashCode = hashCode * 59 + this.CompanYREG.GetHashCode();
                if (this.TradESTARTDATE != null)
                    hashCode = hashCode * 59 + this.TradESTARTDATE.GetHashCode();
                if (this.ModifieDDTTM != null)
                    hashCode = hashCode * 59 + this.ModifieDDTTM.GetHashCode();
                if (this.ModifieDBY != null)
                    hashCode = hashCode * 59 + this.ModifieDBY.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
