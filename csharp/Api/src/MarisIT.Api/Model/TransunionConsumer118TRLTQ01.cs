/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118TRLTQ01
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118TRLTQ01 :  IEquatable<TransunionConsumer118TRLTQ01>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118TRLTQ01" /> class.
        /// </summary>
        /// <param name="consumerNo">consumerNo.</param>
        /// <param name="applicationDate">applicationDate.</param>
        /// <param name="trlCreditScore">trlCreditScore.</param>
        /// <param name="credMaxAac1">credMaxAac1.</param>
        /// <param name="credMaxAac2">credMaxAac2.</param>
        /// <param name="credMaxAac3">credMaxAac3.</param>
        /// <param name="credMaxAac4">credMaxAac4.</param>
        /// <param name="credMaxAacVerb1">credMaxAacVerb1.</param>
        /// <param name="credMaxAacVerb2">credMaxAacVerb2.</param>
        /// <param name="credMaxAacVerb3">credMaxAacVerb3.</param>
        /// <param name="credMaxAacVerb4">credMaxAacVerb4.</param>
        public TransunionConsumer118TRLTQ01(string consumerNo = default(string), string applicationDate = default(string), string trlCreditScore = default(string), string credMaxAac1 = default(string), string credMaxAac2 = default(string), string credMaxAac3 = default(string), string credMaxAac4 = default(string), string credMaxAacVerb1 = default(string), string credMaxAacVerb2 = default(string), string credMaxAacVerb3 = default(string), string credMaxAacVerb4 = default(string))
        {
            this.ConsumerNo = consumerNo;
            this.ApplicationDate = applicationDate;
            this.TrlCreditScore = trlCreditScore;
            this.CredMaxAac1 = credMaxAac1;
            this.CredMaxAac2 = credMaxAac2;
            this.CredMaxAac3 = credMaxAac3;
            this.CredMaxAac4 = credMaxAac4;
            this.CredMaxAacVerb1 = credMaxAacVerb1;
            this.CredMaxAacVerb2 = credMaxAacVerb2;
            this.CredMaxAacVerb3 = credMaxAacVerb3;
            this.CredMaxAacVerb4 = credMaxAacVerb4;
            this.ConsumerNo = consumerNo;
            this.ApplicationDate = applicationDate;
            this.TrlCreditScore = trlCreditScore;
            this.CredMaxAac1 = credMaxAac1;
            this.CredMaxAac2 = credMaxAac2;
            this.CredMaxAac3 = credMaxAac3;
            this.CredMaxAac4 = credMaxAac4;
            this.CredMaxAacVerb1 = credMaxAacVerb1;
            this.CredMaxAacVerb2 = credMaxAacVerb2;
            this.CredMaxAacVerb3 = credMaxAacVerb3;
            this.CredMaxAacVerb4 = credMaxAacVerb4;
        }

        /// <summary>
        /// Gets or Sets ConsumerNo
        /// </summary>
        [DataMember(Name="consumer_no", EmitDefaultValue=true)]
        public string ConsumerNo { get; set; }

        /// <summary>
        /// Gets or Sets ApplicationDate
        /// </summary>
        [DataMember(Name="application_date", EmitDefaultValue=true)]
        public string ApplicationDate { get; set; }

        /// <summary>
        /// Gets or Sets TrlCreditScore
        /// </summary>
        [DataMember(Name="trl_credit_score", EmitDefaultValue=true)]
        public string TrlCreditScore { get; set; }

        /// <summary>
        /// Gets or Sets CredMaxAac1
        /// </summary>
        [DataMember(Name="cred_max_aac_1", EmitDefaultValue=true)]
        public string CredMaxAac1 { get; set; }

        /// <summary>
        /// Gets or Sets CredMaxAac2
        /// </summary>
        [DataMember(Name="cred_max_aac_2", EmitDefaultValue=true)]
        public string CredMaxAac2 { get; set; }

        /// <summary>
        /// Gets or Sets CredMaxAac3
        /// </summary>
        [DataMember(Name="cred_max_aac_3", EmitDefaultValue=true)]
        public string CredMaxAac3 { get; set; }

        /// <summary>
        /// Gets or Sets CredMaxAac4
        /// </summary>
        [DataMember(Name="cred_max_aac_4", EmitDefaultValue=true)]
        public string CredMaxAac4 { get; set; }

        /// <summary>
        /// Gets or Sets CredMaxAacVerb1
        /// </summary>
        [DataMember(Name="cred_max_aac_verb_1", EmitDefaultValue=true)]
        public string CredMaxAacVerb1 { get; set; }

        /// <summary>
        /// Gets or Sets CredMaxAacVerb2
        /// </summary>
        [DataMember(Name="cred_max_aac_verb_2", EmitDefaultValue=true)]
        public string CredMaxAacVerb2 { get; set; }

        /// <summary>
        /// Gets or Sets CredMaxAacVerb3
        /// </summary>
        [DataMember(Name="cred_max_aac_verb_3", EmitDefaultValue=true)]
        public string CredMaxAacVerb3 { get; set; }

        /// <summary>
        /// Gets or Sets CredMaxAacVerb4
        /// </summary>
        [DataMember(Name="cred_max_aac_verb_4", EmitDefaultValue=true)]
        public string CredMaxAacVerb4 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118TRLTQ01 {\n");
            sb.Append("  ConsumerNo: ").Append(ConsumerNo).Append("\n");
            sb.Append("  ApplicationDate: ").Append(ApplicationDate).Append("\n");
            sb.Append("  TrlCreditScore: ").Append(TrlCreditScore).Append("\n");
            sb.Append("  CredMaxAac1: ").Append(CredMaxAac1).Append("\n");
            sb.Append("  CredMaxAac2: ").Append(CredMaxAac2).Append("\n");
            sb.Append("  CredMaxAac3: ").Append(CredMaxAac3).Append("\n");
            sb.Append("  CredMaxAac4: ").Append(CredMaxAac4).Append("\n");
            sb.Append("  CredMaxAacVerb1: ").Append(CredMaxAacVerb1).Append("\n");
            sb.Append("  CredMaxAacVerb2: ").Append(CredMaxAacVerb2).Append("\n");
            sb.Append("  CredMaxAacVerb3: ").Append(CredMaxAacVerb3).Append("\n");
            sb.Append("  CredMaxAacVerb4: ").Append(CredMaxAacVerb4).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118TRLTQ01);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118TRLTQ01 instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118TRLTQ01 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118TRLTQ01 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConsumerNo == input.ConsumerNo ||
                    (this.ConsumerNo != null &&
                    this.ConsumerNo.Equals(input.ConsumerNo))
                ) && 
                (
                    this.ApplicationDate == input.ApplicationDate ||
                    (this.ApplicationDate != null &&
                    this.ApplicationDate.Equals(input.ApplicationDate))
                ) && 
                (
                    this.TrlCreditScore == input.TrlCreditScore ||
                    (this.TrlCreditScore != null &&
                    this.TrlCreditScore.Equals(input.TrlCreditScore))
                ) && 
                (
                    this.CredMaxAac1 == input.CredMaxAac1 ||
                    (this.CredMaxAac1 != null &&
                    this.CredMaxAac1.Equals(input.CredMaxAac1))
                ) && 
                (
                    this.CredMaxAac2 == input.CredMaxAac2 ||
                    (this.CredMaxAac2 != null &&
                    this.CredMaxAac2.Equals(input.CredMaxAac2))
                ) && 
                (
                    this.CredMaxAac3 == input.CredMaxAac3 ||
                    (this.CredMaxAac3 != null &&
                    this.CredMaxAac3.Equals(input.CredMaxAac3))
                ) && 
                (
                    this.CredMaxAac4 == input.CredMaxAac4 ||
                    (this.CredMaxAac4 != null &&
                    this.CredMaxAac4.Equals(input.CredMaxAac4))
                ) && 
                (
                    this.CredMaxAacVerb1 == input.CredMaxAacVerb1 ||
                    (this.CredMaxAacVerb1 != null &&
                    this.CredMaxAacVerb1.Equals(input.CredMaxAacVerb1))
                ) && 
                (
                    this.CredMaxAacVerb2 == input.CredMaxAacVerb2 ||
                    (this.CredMaxAacVerb2 != null &&
                    this.CredMaxAacVerb2.Equals(input.CredMaxAacVerb2))
                ) && 
                (
                    this.CredMaxAacVerb3 == input.CredMaxAacVerb3 ||
                    (this.CredMaxAacVerb3 != null &&
                    this.CredMaxAacVerb3.Equals(input.CredMaxAacVerb3))
                ) && 
                (
                    this.CredMaxAacVerb4 == input.CredMaxAacVerb4 ||
                    (this.CredMaxAacVerb4 != null &&
                    this.CredMaxAacVerb4.Equals(input.CredMaxAacVerb4))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConsumerNo != null)
                    hashCode = hashCode * 59 + this.ConsumerNo.GetHashCode();
                if (this.ApplicationDate != null)
                    hashCode = hashCode * 59 + this.ApplicationDate.GetHashCode();
                if (this.TrlCreditScore != null)
                    hashCode = hashCode * 59 + this.TrlCreditScore.GetHashCode();
                if (this.CredMaxAac1 != null)
                    hashCode = hashCode * 59 + this.CredMaxAac1.GetHashCode();
                if (this.CredMaxAac2 != null)
                    hashCode = hashCode * 59 + this.CredMaxAac2.GetHashCode();
                if (this.CredMaxAac3 != null)
                    hashCode = hashCode * 59 + this.CredMaxAac3.GetHashCode();
                if (this.CredMaxAac4 != null)
                    hashCode = hashCode * 59 + this.CredMaxAac4.GetHashCode();
                if (this.CredMaxAacVerb1 != null)
                    hashCode = hashCode * 59 + this.CredMaxAacVerb1.GetHashCode();
                if (this.CredMaxAacVerb2 != null)
                    hashCode = hashCode * 59 + this.CredMaxAacVerb2.GetHashCode();
                if (this.CredMaxAacVerb3 != null)
                    hashCode = hashCode * 59 + this.CredMaxAacVerb3.GetHashCode();
                if (this.CredMaxAacVerb4 != null)
                    hashCode = hashCode * 59 + this.CredMaxAacVerb4.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
