/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118FSMS201
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118FSMS201 :  IEquatable<TransunionConsumer118FSMS201>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118FSMS201" /> class.
        /// </summary>
        /// <param name="consumerNumber">consumerNumber.</param>
        /// <param name="fsmScoreBand">fsmScoreBand.</param>
        /// <param name="verifyReason1">verifyReason1.</param>
        /// <param name="verifyReason2">verifyReason2.</param>
        /// <param name="verifyReason3">verifyReason3.</param>
        /// <param name="verifyReason4">verifyReason4.</param>
        /// <param name="verifyReason5">verifyReason5.</param>
        public TransunionConsumer118FSMS201(string consumerNumber = default(string), string fsmScoreBand = default(string), string verifyReason1 = default(string), string verifyReason2 = default(string), string verifyReason3 = default(string), string verifyReason4 = default(string), string verifyReason5 = default(string))
        {
            this.ConsumerNumber = consumerNumber;
            this.FsmScoreBand = fsmScoreBand;
            this.VerifyReason1 = verifyReason1;
            this.VerifyReason2 = verifyReason2;
            this.VerifyReason3 = verifyReason3;
            this.VerifyReason4 = verifyReason4;
            this.VerifyReason5 = verifyReason5;
            this.ConsumerNumber = consumerNumber;
            this.FsmScoreBand = fsmScoreBand;
            this.VerifyReason1 = verifyReason1;
            this.VerifyReason2 = verifyReason2;
            this.VerifyReason3 = verifyReason3;
            this.VerifyReason4 = verifyReason4;
            this.VerifyReason5 = verifyReason5;
        }

        /// <summary>
        /// Gets or Sets ConsumerNumber
        /// </summary>
        [DataMember(Name="consumerNumber", EmitDefaultValue=true)]
        public string ConsumerNumber { get; set; }

        /// <summary>
        /// Gets or Sets FsmScoreBand
        /// </summary>
        [DataMember(Name="fsmScoreBand", EmitDefaultValue=true)]
        public string FsmScoreBand { get; set; }

        /// <summary>
        /// Gets or Sets VerifyReason1
        /// </summary>
        [DataMember(Name="verifyReason1", EmitDefaultValue=true)]
        public string VerifyReason1 { get; set; }

        /// <summary>
        /// Gets or Sets VerifyReason2
        /// </summary>
        [DataMember(Name="verifyReason2", EmitDefaultValue=true)]
        public string VerifyReason2 { get; set; }

        /// <summary>
        /// Gets or Sets VerifyReason3
        /// </summary>
        [DataMember(Name="verifyReason3", EmitDefaultValue=true)]
        public string VerifyReason3 { get; set; }

        /// <summary>
        /// Gets or Sets VerifyReason4
        /// </summary>
        [DataMember(Name="verifyReason4", EmitDefaultValue=true)]
        public string VerifyReason4 { get; set; }

        /// <summary>
        /// Gets or Sets VerifyReason5
        /// </summary>
        [DataMember(Name="verifyReason5", EmitDefaultValue=true)]
        public string VerifyReason5 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118FSMS201 {\n");
            sb.Append("  ConsumerNumber: ").Append(ConsumerNumber).Append("\n");
            sb.Append("  FsmScoreBand: ").Append(FsmScoreBand).Append("\n");
            sb.Append("  VerifyReason1: ").Append(VerifyReason1).Append("\n");
            sb.Append("  VerifyReason2: ").Append(VerifyReason2).Append("\n");
            sb.Append("  VerifyReason3: ").Append(VerifyReason3).Append("\n");
            sb.Append("  VerifyReason4: ").Append(VerifyReason4).Append("\n");
            sb.Append("  VerifyReason5: ").Append(VerifyReason5).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118FSMS201);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118FSMS201 instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118FSMS201 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118FSMS201 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConsumerNumber == input.ConsumerNumber ||
                    (this.ConsumerNumber != null &&
                    this.ConsumerNumber.Equals(input.ConsumerNumber))
                ) && 
                (
                    this.FsmScoreBand == input.FsmScoreBand ||
                    (this.FsmScoreBand != null &&
                    this.FsmScoreBand.Equals(input.FsmScoreBand))
                ) && 
                (
                    this.VerifyReason1 == input.VerifyReason1 ||
                    (this.VerifyReason1 != null &&
                    this.VerifyReason1.Equals(input.VerifyReason1))
                ) && 
                (
                    this.VerifyReason2 == input.VerifyReason2 ||
                    (this.VerifyReason2 != null &&
                    this.VerifyReason2.Equals(input.VerifyReason2))
                ) && 
                (
                    this.VerifyReason3 == input.VerifyReason3 ||
                    (this.VerifyReason3 != null &&
                    this.VerifyReason3.Equals(input.VerifyReason3))
                ) && 
                (
                    this.VerifyReason4 == input.VerifyReason4 ||
                    (this.VerifyReason4 != null &&
                    this.VerifyReason4.Equals(input.VerifyReason4))
                ) && 
                (
                    this.VerifyReason5 == input.VerifyReason5 ||
                    (this.VerifyReason5 != null &&
                    this.VerifyReason5.Equals(input.VerifyReason5))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConsumerNumber != null)
                    hashCode = hashCode * 59 + this.ConsumerNumber.GetHashCode();
                if (this.FsmScoreBand != null)
                    hashCode = hashCode * 59 + this.FsmScoreBand.GetHashCode();
                if (this.VerifyReason1 != null)
                    hashCode = hashCode * 59 + this.VerifyReason1.GetHashCode();
                if (this.VerifyReason2 != null)
                    hashCode = hashCode * 59 + this.VerifyReason2.GetHashCode();
                if (this.VerifyReason3 != null)
                    hashCode = hashCode * 59 + this.VerifyReason3.GetHashCode();
                if (this.VerifyReason4 != null)
                    hashCode = hashCode * 59 + this.VerifyReason4.GetHashCode();
                if (this.VerifyReason5 != null)
                    hashCode = hashCode * 59 + this.VerifyReason5.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
