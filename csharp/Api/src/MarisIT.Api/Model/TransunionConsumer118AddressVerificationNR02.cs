/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118AddressVerificationNR02
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118AddressVerificationNR02 :  IEquatable<TransunionConsumer118AddressVerificationNR02>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118AddressVerificationNR02" /> class.
        /// </summary>
        /// <param name="transactionNumber">transactionNumber.</param>
        /// <param name="recordId">recordId.</param>
        /// <param name="recordSequence">recordSequence.</param>
        /// <param name="part">part.</param>
        /// <param name="partSequence">partSequence.</param>
        /// <param name="last24Hours">last24Hours.</param>
        /// <param name="last48Hours">last48Hours.</param>
        /// <param name="last96Hours">last96Hours.</param>
        /// <param name="last30Days">last30Days.</param>
        /// <param name="addressMessage">addressMessage.</param>
        /// <param name="addressLine1">addressLine1.</param>
        public TransunionConsumer118AddressVerificationNR02(string transactionNumber = default(string), string recordId = default(string), string recordSequence = default(string), string part = default(string), string partSequence = default(string), string last24Hours = default(string), string last48Hours = default(string), string last96Hours = default(string), string last30Days = default(string), string addressMessage = default(string), string addressLine1 = default(string))
        {
            this.TransactionNumber = transactionNumber;
            this.RecordId = recordId;
            this.RecordSequence = recordSequence;
            this.Part = part;
            this.PartSequence = partSequence;
            this.Last24Hours = last24Hours;
            this.Last48Hours = last48Hours;
            this.Last96Hours = last96Hours;
            this.Last30Days = last30Days;
            this.AddressMessage = addressMessage;
            this.AddressLine1 = addressLine1;
            this.TransactionNumber = transactionNumber;
            this.RecordId = recordId;
            this.RecordSequence = recordSequence;
            this.Part = part;
            this.PartSequence = partSequence;
            this.Last24Hours = last24Hours;
            this.Last48Hours = last48Hours;
            this.Last96Hours = last96Hours;
            this.Last30Days = last30Days;
            this.AddressMessage = addressMessage;
            this.AddressLine1 = addressLine1;
        }

        /// <summary>
        /// Gets or Sets TransactionNumber
        /// </summary>
        [DataMember(Name="transactionNumber", EmitDefaultValue=true)]
        public string TransactionNumber { get; set; }

        /// <summary>
        /// Gets or Sets RecordId
        /// </summary>
        [DataMember(Name="recordId", EmitDefaultValue=true)]
        public string RecordId { get; set; }

        /// <summary>
        /// Gets or Sets RecordSequence
        /// </summary>
        [DataMember(Name="recordSequence", EmitDefaultValue=true)]
        public string RecordSequence { get; set; }

        /// <summary>
        /// Gets or Sets Part
        /// </summary>
        [DataMember(Name="part", EmitDefaultValue=true)]
        public string Part { get; set; }

        /// <summary>
        /// Gets or Sets PartSequence
        /// </summary>
        [DataMember(Name="partSequence", EmitDefaultValue=true)]
        public string PartSequence { get; set; }

        /// <summary>
        /// Gets or Sets Last24Hours
        /// </summary>
        [DataMember(Name="last24Hours", EmitDefaultValue=true)]
        public string Last24Hours { get; set; }

        /// <summary>
        /// Gets or Sets Last48Hours
        /// </summary>
        [DataMember(Name="last48Hours", EmitDefaultValue=true)]
        public string Last48Hours { get; set; }

        /// <summary>
        /// Gets or Sets Last96Hours
        /// </summary>
        [DataMember(Name="last96Hours", EmitDefaultValue=true)]
        public string Last96Hours { get; set; }

        /// <summary>
        /// Gets or Sets Last30Days
        /// </summary>
        [DataMember(Name="last30Days", EmitDefaultValue=true)]
        public string Last30Days { get; set; }

        /// <summary>
        /// Gets or Sets AddressMessage
        /// </summary>
        [DataMember(Name="addressMessage", EmitDefaultValue=true)]
        public string AddressMessage { get; set; }

        /// <summary>
        /// Gets or Sets AddressLine1
        /// </summary>
        [DataMember(Name="addressLine1", EmitDefaultValue=true)]
        public string AddressLine1 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118AddressVerificationNR02 {\n");
            sb.Append("  TransactionNumber: ").Append(TransactionNumber).Append("\n");
            sb.Append("  RecordId: ").Append(RecordId).Append("\n");
            sb.Append("  RecordSequence: ").Append(RecordSequence).Append("\n");
            sb.Append("  Part: ").Append(Part).Append("\n");
            sb.Append("  PartSequence: ").Append(PartSequence).Append("\n");
            sb.Append("  Last24Hours: ").Append(Last24Hours).Append("\n");
            sb.Append("  Last48Hours: ").Append(Last48Hours).Append("\n");
            sb.Append("  Last96Hours: ").Append(Last96Hours).Append("\n");
            sb.Append("  Last30Days: ").Append(Last30Days).Append("\n");
            sb.Append("  AddressMessage: ").Append(AddressMessage).Append("\n");
            sb.Append("  AddressLine1: ").Append(AddressLine1).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118AddressVerificationNR02);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118AddressVerificationNR02 instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118AddressVerificationNR02 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118AddressVerificationNR02 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TransactionNumber == input.TransactionNumber ||
                    (this.TransactionNumber != null &&
                    this.TransactionNumber.Equals(input.TransactionNumber))
                ) && 
                (
                    this.RecordId == input.RecordId ||
                    (this.RecordId != null &&
                    this.RecordId.Equals(input.RecordId))
                ) && 
                (
                    this.RecordSequence == input.RecordSequence ||
                    (this.RecordSequence != null &&
                    this.RecordSequence.Equals(input.RecordSequence))
                ) && 
                (
                    this.Part == input.Part ||
                    (this.Part != null &&
                    this.Part.Equals(input.Part))
                ) && 
                (
                    this.PartSequence == input.PartSequence ||
                    (this.PartSequence != null &&
                    this.PartSequence.Equals(input.PartSequence))
                ) && 
                (
                    this.Last24Hours == input.Last24Hours ||
                    (this.Last24Hours != null &&
                    this.Last24Hours.Equals(input.Last24Hours))
                ) && 
                (
                    this.Last48Hours == input.Last48Hours ||
                    (this.Last48Hours != null &&
                    this.Last48Hours.Equals(input.Last48Hours))
                ) && 
                (
                    this.Last96Hours == input.Last96Hours ||
                    (this.Last96Hours != null &&
                    this.Last96Hours.Equals(input.Last96Hours))
                ) && 
                (
                    this.Last30Days == input.Last30Days ||
                    (this.Last30Days != null &&
                    this.Last30Days.Equals(input.Last30Days))
                ) && 
                (
                    this.AddressMessage == input.AddressMessage ||
                    (this.AddressMessage != null &&
                    this.AddressMessage.Equals(input.AddressMessage))
                ) && 
                (
                    this.AddressLine1 == input.AddressLine1 ||
                    (this.AddressLine1 != null &&
                    this.AddressLine1.Equals(input.AddressLine1))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TransactionNumber != null)
                    hashCode = hashCode * 59 + this.TransactionNumber.GetHashCode();
                if (this.RecordId != null)
                    hashCode = hashCode * 59 + this.RecordId.GetHashCode();
                if (this.RecordSequence != null)
                    hashCode = hashCode * 59 + this.RecordSequence.GetHashCode();
                if (this.Part != null)
                    hashCode = hashCode * 59 + this.Part.GetHashCode();
                if (this.PartSequence != null)
                    hashCode = hashCode * 59 + this.PartSequence.GetHashCode();
                if (this.Last24Hours != null)
                    hashCode = hashCode * 59 + this.Last24Hours.GetHashCode();
                if (this.Last48Hours != null)
                    hashCode = hashCode * 59 + this.Last48Hours.GetHashCode();
                if (this.Last96Hours != null)
                    hashCode = hashCode * 59 + this.Last96Hours.GetHashCode();
                if (this.Last30Days != null)
                    hashCode = hashCode * 59 + this.Last30Days.GetHashCode();
                if (this.AddressMessage != null)
                    hashCode = hashCode * 59 + this.AddressMessage.GetHashCode();
                if (this.AddressLine1 != null)
                    hashCode = hashCode * 59 + this.AddressLine1.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
