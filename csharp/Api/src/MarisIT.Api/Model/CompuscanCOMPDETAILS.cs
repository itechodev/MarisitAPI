/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// CompuscanCOMPDETAILS
    /// </summary>
    [DataContract]
    public partial class CompuscanCOMPDETAILS :  IEquatable<CompuscanCOMPDETAILS>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompuscanCOMPDETAILS" /> class.
        /// </summary>
        /// <param name="authorisedcapital">authorisedcapital.</param>
        /// <param name="authorisedshares">authorisedshares.</param>
        /// <param name="businessstartdate">businessstartdate.</param>
        /// <param name="companyname">companyname.</param>
        /// <param name="companyregnumber">companyregnumber.</param>
        /// <param name="enttype">enttype.</param>
        /// <param name="financialyearend">financialyearend.</param>
        /// <param name="indusclass">indusclass.</param>
        /// <param name="oldregistrationnumber">oldregistrationnumber.</param>
        /// <param name="physicalpostcode">physicalpostcode.</param>
        /// <param name="physadrs">physadrs.</param>
        /// <param name="postalpostcode">postalpostcode.</param>
        /// <param name="posadrs">posadrs.</param>
        /// <param name="registrationdate">registrationdate.</param>
        /// <param name="status">status.</param>
        /// <param name="statusdate">statusdate.</param>
        /// <param name="taxnumber">taxnumber.</param>
        public CompuscanCOMPDETAILS(string authorisedcapital = default(string), string authorisedshares = default(string), string businessstartdate = default(string), string companyname = default(string), string companyregnumber = default(string), string enttype = default(string), string financialyearend = default(string), string indusclass = default(string), string oldregistrationnumber = default(string), string physicalpostcode = default(string), string physadrs = default(string), string postalpostcode = default(string), string posadrs = default(string), string registrationdate = default(string), string status = default(string), string statusdate = default(string), string taxnumber = default(string))
        {
            this.Authorisedcapital = authorisedcapital;
            this.Authorisedshares = authorisedshares;
            this.Businessstartdate = businessstartdate;
            this.Companyname = companyname;
            this.Companyregnumber = companyregnumber;
            this.Enttype = enttype;
            this.Financialyearend = financialyearend;
            this.Indusclass = indusclass;
            this.Oldregistrationnumber = oldregistrationnumber;
            this.Physicalpostcode = physicalpostcode;
            this.Physadrs = physadrs;
            this.Postalpostcode = postalpostcode;
            this.Posadrs = posadrs;
            this.Registrationdate = registrationdate;
            this.Status = status;
            this.Statusdate = statusdate;
            this.Taxnumber = taxnumber;
            this.Authorisedcapital = authorisedcapital;
            this.Authorisedshares = authorisedshares;
            this.Businessstartdate = businessstartdate;
            this.Companyname = companyname;
            this.Companyregnumber = companyregnumber;
            this.Enttype = enttype;
            this.Financialyearend = financialyearend;
            this.Indusclass = indusclass;
            this.Oldregistrationnumber = oldregistrationnumber;
            this.Physicalpostcode = physicalpostcode;
            this.Physadrs = physadrs;
            this.Postalpostcode = postalpostcode;
            this.Posadrs = posadrs;
            this.Registrationdate = registrationdate;
            this.Status = status;
            this.Statusdate = statusdate;
            this.Taxnumber = taxnumber;
        }

        /// <summary>
        /// Gets or Sets Authorisedcapital
        /// </summary>
        [DataMember(Name="authorisedcapital", EmitDefaultValue=true)]
        public string Authorisedcapital { get; set; }

        /// <summary>
        /// Gets or Sets Authorisedshares
        /// </summary>
        [DataMember(Name="authorisedshares", EmitDefaultValue=true)]
        public string Authorisedshares { get; set; }

        /// <summary>
        /// Gets or Sets Businessstartdate
        /// </summary>
        [DataMember(Name="businessstartdate", EmitDefaultValue=true)]
        public string Businessstartdate { get; set; }

        /// <summary>
        /// Gets or Sets Companyname
        /// </summary>
        [DataMember(Name="companyname", EmitDefaultValue=true)]
        public string Companyname { get; set; }

        /// <summary>
        /// Gets or Sets Companyregnumber
        /// </summary>
        [DataMember(Name="companyregnumber", EmitDefaultValue=true)]
        public string Companyregnumber { get; set; }

        /// <summary>
        /// Gets or Sets Enttype
        /// </summary>
        [DataMember(Name="enttype", EmitDefaultValue=true)]
        public string Enttype { get; set; }

        /// <summary>
        /// Gets or Sets Financialyearend
        /// </summary>
        [DataMember(Name="financialyearend", EmitDefaultValue=true)]
        public string Financialyearend { get; set; }

        /// <summary>
        /// Gets or Sets Indusclass
        /// </summary>
        [DataMember(Name="indusclass", EmitDefaultValue=true)]
        public string Indusclass { get; set; }

        /// <summary>
        /// Gets or Sets Oldregistrationnumber
        /// </summary>
        [DataMember(Name="oldregistrationnumber", EmitDefaultValue=true)]
        public string Oldregistrationnumber { get; set; }

        /// <summary>
        /// Gets or Sets Physicalpostcode
        /// </summary>
        [DataMember(Name="physicalpostcode", EmitDefaultValue=true)]
        public string Physicalpostcode { get; set; }

        /// <summary>
        /// Gets or Sets Physadrs
        /// </summary>
        [DataMember(Name="physadrs", EmitDefaultValue=true)]
        public string Physadrs { get; set; }

        /// <summary>
        /// Gets or Sets Postalpostcode
        /// </summary>
        [DataMember(Name="postalpostcode", EmitDefaultValue=true)]
        public string Postalpostcode { get; set; }

        /// <summary>
        /// Gets or Sets Posadrs
        /// </summary>
        [DataMember(Name="posadrs", EmitDefaultValue=true)]
        public string Posadrs { get; set; }

        /// <summary>
        /// Gets or Sets Registrationdate
        /// </summary>
        [DataMember(Name="registrationdate", EmitDefaultValue=true)]
        public string Registrationdate { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=true)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets Statusdate
        /// </summary>
        [DataMember(Name="statusdate", EmitDefaultValue=true)]
        public string Statusdate { get; set; }

        /// <summary>
        /// Gets or Sets Taxnumber
        /// </summary>
        [DataMember(Name="taxnumber", EmitDefaultValue=true)]
        public string Taxnumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompuscanCOMPDETAILS {\n");
            sb.Append("  Authorisedcapital: ").Append(Authorisedcapital).Append("\n");
            sb.Append("  Authorisedshares: ").Append(Authorisedshares).Append("\n");
            sb.Append("  Businessstartdate: ").Append(Businessstartdate).Append("\n");
            sb.Append("  Companyname: ").Append(Companyname).Append("\n");
            sb.Append("  Companyregnumber: ").Append(Companyregnumber).Append("\n");
            sb.Append("  Enttype: ").Append(Enttype).Append("\n");
            sb.Append("  Financialyearend: ").Append(Financialyearend).Append("\n");
            sb.Append("  Indusclass: ").Append(Indusclass).Append("\n");
            sb.Append("  Oldregistrationnumber: ").Append(Oldregistrationnumber).Append("\n");
            sb.Append("  Physicalpostcode: ").Append(Physicalpostcode).Append("\n");
            sb.Append("  Physadrs: ").Append(Physadrs).Append("\n");
            sb.Append("  Postalpostcode: ").Append(Postalpostcode).Append("\n");
            sb.Append("  Posadrs: ").Append(Posadrs).Append("\n");
            sb.Append("  Registrationdate: ").Append(Registrationdate).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Statusdate: ").Append(Statusdate).Append("\n");
            sb.Append("  Taxnumber: ").Append(Taxnumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompuscanCOMPDETAILS);
        }

        /// <summary>
        /// Returns true if CompuscanCOMPDETAILS instances are equal
        /// </summary>
        /// <param name="input">Instance of CompuscanCOMPDETAILS to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompuscanCOMPDETAILS input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Authorisedcapital == input.Authorisedcapital ||
                    (this.Authorisedcapital != null &&
                    this.Authorisedcapital.Equals(input.Authorisedcapital))
                ) && 
                (
                    this.Authorisedshares == input.Authorisedshares ||
                    (this.Authorisedshares != null &&
                    this.Authorisedshares.Equals(input.Authorisedshares))
                ) && 
                (
                    this.Businessstartdate == input.Businessstartdate ||
                    (this.Businessstartdate != null &&
                    this.Businessstartdate.Equals(input.Businessstartdate))
                ) && 
                (
                    this.Companyname == input.Companyname ||
                    (this.Companyname != null &&
                    this.Companyname.Equals(input.Companyname))
                ) && 
                (
                    this.Companyregnumber == input.Companyregnumber ||
                    (this.Companyregnumber != null &&
                    this.Companyregnumber.Equals(input.Companyregnumber))
                ) && 
                (
                    this.Enttype == input.Enttype ||
                    (this.Enttype != null &&
                    this.Enttype.Equals(input.Enttype))
                ) && 
                (
                    this.Financialyearend == input.Financialyearend ||
                    (this.Financialyearend != null &&
                    this.Financialyearend.Equals(input.Financialyearend))
                ) && 
                (
                    this.Indusclass == input.Indusclass ||
                    (this.Indusclass != null &&
                    this.Indusclass.Equals(input.Indusclass))
                ) && 
                (
                    this.Oldregistrationnumber == input.Oldregistrationnumber ||
                    (this.Oldregistrationnumber != null &&
                    this.Oldregistrationnumber.Equals(input.Oldregistrationnumber))
                ) && 
                (
                    this.Physicalpostcode == input.Physicalpostcode ||
                    (this.Physicalpostcode != null &&
                    this.Physicalpostcode.Equals(input.Physicalpostcode))
                ) && 
                (
                    this.Physadrs == input.Physadrs ||
                    (this.Physadrs != null &&
                    this.Physadrs.Equals(input.Physadrs))
                ) && 
                (
                    this.Postalpostcode == input.Postalpostcode ||
                    (this.Postalpostcode != null &&
                    this.Postalpostcode.Equals(input.Postalpostcode))
                ) && 
                (
                    this.Posadrs == input.Posadrs ||
                    (this.Posadrs != null &&
                    this.Posadrs.Equals(input.Posadrs))
                ) && 
                (
                    this.Registrationdate == input.Registrationdate ||
                    (this.Registrationdate != null &&
                    this.Registrationdate.Equals(input.Registrationdate))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.Statusdate == input.Statusdate ||
                    (this.Statusdate != null &&
                    this.Statusdate.Equals(input.Statusdate))
                ) && 
                (
                    this.Taxnumber == input.Taxnumber ||
                    (this.Taxnumber != null &&
                    this.Taxnumber.Equals(input.Taxnumber))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Authorisedcapital != null)
                    hashCode = hashCode * 59 + this.Authorisedcapital.GetHashCode();
                if (this.Authorisedshares != null)
                    hashCode = hashCode * 59 + this.Authorisedshares.GetHashCode();
                if (this.Businessstartdate != null)
                    hashCode = hashCode * 59 + this.Businessstartdate.GetHashCode();
                if (this.Companyname != null)
                    hashCode = hashCode * 59 + this.Companyname.GetHashCode();
                if (this.Companyregnumber != null)
                    hashCode = hashCode * 59 + this.Companyregnumber.GetHashCode();
                if (this.Enttype != null)
                    hashCode = hashCode * 59 + this.Enttype.GetHashCode();
                if (this.Financialyearend != null)
                    hashCode = hashCode * 59 + this.Financialyearend.GetHashCode();
                if (this.Indusclass != null)
                    hashCode = hashCode * 59 + this.Indusclass.GetHashCode();
                if (this.Oldregistrationnumber != null)
                    hashCode = hashCode * 59 + this.Oldregistrationnumber.GetHashCode();
                if (this.Physicalpostcode != null)
                    hashCode = hashCode * 59 + this.Physicalpostcode.GetHashCode();
                if (this.Physadrs != null)
                    hashCode = hashCode * 59 + this.Physadrs.GetHashCode();
                if (this.Postalpostcode != null)
                    hashCode = hashCode * 59 + this.Postalpostcode.GetHashCode();
                if (this.Posadrs != null)
                    hashCode = hashCode * 59 + this.Posadrs.GetHashCode();
                if (this.Registrationdate != null)
                    hashCode = hashCode * 59 + this.Registrationdate.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.Statusdate != null)
                    hashCode = hashCode * 59 + this.Statusdate.GetHashCode();
                if (this.Taxnumber != null)
                    hashCode = hashCode * 59 + this.Taxnumber.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
