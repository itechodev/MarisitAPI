/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionConsumer118TUVehicleInsurancePoliciesRecordedVK
    /// </summary>
    [DataContract]
    public partial class TransunionConsumer118TUVehicleInsurancePoliciesRecordedVK :  IEquatable<TransunionConsumer118TUVehicleInsurancePoliciesRecordedVK>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionConsumer118TUVehicleInsurancePoliciesRecordedVK" /> class.
        /// </summary>
        /// <param name="recordDescription">recordDescription.</param>
        /// <param name="insuranceCompanyName">insuranceCompanyName.</param>
        /// <param name="policyNumber">policyNumber.</param>
        /// <param name="insuranceStartDate">insuranceStartDate.</param>
        public TransunionConsumer118TUVehicleInsurancePoliciesRecordedVK(string recordDescription = default(string), string insuranceCompanyName = default(string), string policyNumber = default(string), string insuranceStartDate = default(string))
        {
            this.RecordDescription = recordDescription;
            this.InsuranceCompanyName = insuranceCompanyName;
            this.PolicyNumber = policyNumber;
            this.InsuranceStartDate = insuranceStartDate;
            this.RecordDescription = recordDescription;
            this.InsuranceCompanyName = insuranceCompanyName;
            this.PolicyNumber = policyNumber;
            this.InsuranceStartDate = insuranceStartDate;
        }

        /// <summary>
        /// Gets or Sets RecordDescription
        /// </summary>
        [DataMember(Name="recordDescription", EmitDefaultValue=true)]
        public string RecordDescription { get; set; }

        /// <summary>
        /// Gets or Sets InsuranceCompanyName
        /// </summary>
        [DataMember(Name="insuranceCompanyName", EmitDefaultValue=true)]
        public string InsuranceCompanyName { get; set; }

        /// <summary>
        /// Gets or Sets PolicyNumber
        /// </summary>
        [DataMember(Name="policyNumber", EmitDefaultValue=true)]
        public string PolicyNumber { get; set; }

        /// <summary>
        /// Gets or Sets InsuranceStartDate
        /// </summary>
        [DataMember(Name="insuranceStartDate", EmitDefaultValue=true)]
        public string InsuranceStartDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionConsumer118TUVehicleInsurancePoliciesRecordedVK {\n");
            sb.Append("  RecordDescription: ").Append(RecordDescription).Append("\n");
            sb.Append("  InsuranceCompanyName: ").Append(InsuranceCompanyName).Append("\n");
            sb.Append("  PolicyNumber: ").Append(PolicyNumber).Append("\n");
            sb.Append("  InsuranceStartDate: ").Append(InsuranceStartDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionConsumer118TUVehicleInsurancePoliciesRecordedVK);
        }

        /// <summary>
        /// Returns true if TransunionConsumer118TUVehicleInsurancePoliciesRecordedVK instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionConsumer118TUVehicleInsurancePoliciesRecordedVK to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionConsumer118TUVehicleInsurancePoliciesRecordedVK input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.RecordDescription == input.RecordDescription ||
                    (this.RecordDescription != null &&
                    this.RecordDescription.Equals(input.RecordDescription))
                ) && 
                (
                    this.InsuranceCompanyName == input.InsuranceCompanyName ||
                    (this.InsuranceCompanyName != null &&
                    this.InsuranceCompanyName.Equals(input.InsuranceCompanyName))
                ) && 
                (
                    this.PolicyNumber == input.PolicyNumber ||
                    (this.PolicyNumber != null &&
                    this.PolicyNumber.Equals(input.PolicyNumber))
                ) && 
                (
                    this.InsuranceStartDate == input.InsuranceStartDate ||
                    (this.InsuranceStartDate != null &&
                    this.InsuranceStartDate.Equals(input.InsuranceStartDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RecordDescription != null)
                    hashCode = hashCode * 59 + this.RecordDescription.GetHashCode();
                if (this.InsuranceCompanyName != null)
                    hashCode = hashCode * 59 + this.InsuranceCompanyName.GetHashCode();
                if (this.PolicyNumber != null)
                    hashCode = hashCode * 59 + this.PolicyNumber.GetHashCode();
                if (this.InsuranceStartDate != null)
                    hashCode = hashCode * 59 + this.InsuranceStartDate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
