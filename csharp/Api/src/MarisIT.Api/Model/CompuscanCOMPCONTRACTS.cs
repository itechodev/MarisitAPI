/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// CompuscanCOMPCONTRACTS
    /// </summary>
    [DataContract]
    public partial class CompuscanCOMPCONTRACTS :  IEquatable<CompuscanCOMPCONTRACTS>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompuscanCOMPCONTRACTS" /> class.
        /// </summary>
        /// <param name="cmpnynm">cmpnynm.</param>
        /// <param name="cmpnyrgstrtn">cmpnyrgstrtn.</param>
        /// <param name="cntrctamount">cntrctamount.</param>
        /// <param name="cntrctenddt">cntrctenddt.</param>
        /// <param name="cntrctrfrnc">cntrctrfrnc.</param>
        /// <param name="cntrctstrtdt">cntrctstrtdt.</param>
        /// <param name="comments">comments.</param>
        /// <param name="createdby">createdby.</param>
        /// <param name="createddttm">createddttm.</param>
        /// <param name="modifiedby">modifiedby.</param>
        /// <param name="modifieddttm">modifieddttm.</param>
        /// <param name="retentionperiod">retentionperiod.</param>
        public CompuscanCOMPCONTRACTS(string cmpnynm = default(string), string cmpnyrgstrtn = default(string), string cntrctamount = default(string), string cntrctenddt = default(string), string cntrctrfrnc = default(string), string cntrctstrtdt = default(string), string comments = default(string), string createdby = default(string), string createddttm = default(string), string modifiedby = default(string), string modifieddttm = default(string), string retentionperiod = default(string))
        {
            this.Cmpnynm = cmpnynm;
            this.Cmpnyrgstrtn = cmpnyrgstrtn;
            this.Cntrctamount = cntrctamount;
            this.Cntrctenddt = cntrctenddt;
            this.Cntrctrfrnc = cntrctrfrnc;
            this.Cntrctstrtdt = cntrctstrtdt;
            this.Comments = comments;
            this.Createdby = createdby;
            this.Createddttm = createddttm;
            this.Modifiedby = modifiedby;
            this.Modifieddttm = modifieddttm;
            this.Retentionperiod = retentionperiod;
            this.Cmpnynm = cmpnynm;
            this.Cmpnyrgstrtn = cmpnyrgstrtn;
            this.Cntrctamount = cntrctamount;
            this.Cntrctenddt = cntrctenddt;
            this.Cntrctrfrnc = cntrctrfrnc;
            this.Cntrctstrtdt = cntrctstrtdt;
            this.Comments = comments;
            this.Createdby = createdby;
            this.Createddttm = createddttm;
            this.Modifiedby = modifiedby;
            this.Modifieddttm = modifieddttm;
            this.Retentionperiod = retentionperiod;
        }

        /// <summary>
        /// Gets or Sets Cmpnynm
        /// </summary>
        [DataMember(Name="cmpnynm", EmitDefaultValue=true)]
        public string Cmpnynm { get; set; }

        /// <summary>
        /// Gets or Sets Cmpnyrgstrtn
        /// </summary>
        [DataMember(Name="cmpnyrgstrtn", EmitDefaultValue=true)]
        public string Cmpnyrgstrtn { get; set; }

        /// <summary>
        /// Gets or Sets Cntrctamount
        /// </summary>
        [DataMember(Name="cntrctamount", EmitDefaultValue=true)]
        public string Cntrctamount { get; set; }

        /// <summary>
        /// Gets or Sets Cntrctenddt
        /// </summary>
        [DataMember(Name="cntrctenddt", EmitDefaultValue=true)]
        public string Cntrctenddt { get; set; }

        /// <summary>
        /// Gets or Sets Cntrctrfrnc
        /// </summary>
        [DataMember(Name="cntrctrfrnc", EmitDefaultValue=true)]
        public string Cntrctrfrnc { get; set; }

        /// <summary>
        /// Gets or Sets Cntrctstrtdt
        /// </summary>
        [DataMember(Name="cntrctstrtdt", EmitDefaultValue=true)]
        public string Cntrctstrtdt { get; set; }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name="comments", EmitDefaultValue=true)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets Createdby
        /// </summary>
        [DataMember(Name="createdby", EmitDefaultValue=true)]
        public string Createdby { get; set; }

        /// <summary>
        /// Gets or Sets Createddttm
        /// </summary>
        [DataMember(Name="createddttm", EmitDefaultValue=true)]
        public string Createddttm { get; set; }

        /// <summary>
        /// Gets or Sets Modifiedby
        /// </summary>
        [DataMember(Name="modifiedby", EmitDefaultValue=true)]
        public string Modifiedby { get; set; }

        /// <summary>
        /// Gets or Sets Modifieddttm
        /// </summary>
        [DataMember(Name="modifieddttm", EmitDefaultValue=true)]
        public string Modifieddttm { get; set; }

        /// <summary>
        /// Gets or Sets Retentionperiod
        /// </summary>
        [DataMember(Name="retentionperiod", EmitDefaultValue=true)]
        public string Retentionperiod { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompuscanCOMPCONTRACTS {\n");
            sb.Append("  Cmpnynm: ").Append(Cmpnynm).Append("\n");
            sb.Append("  Cmpnyrgstrtn: ").Append(Cmpnyrgstrtn).Append("\n");
            sb.Append("  Cntrctamount: ").Append(Cntrctamount).Append("\n");
            sb.Append("  Cntrctenddt: ").Append(Cntrctenddt).Append("\n");
            sb.Append("  Cntrctrfrnc: ").Append(Cntrctrfrnc).Append("\n");
            sb.Append("  Cntrctstrtdt: ").Append(Cntrctstrtdt).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  Createdby: ").Append(Createdby).Append("\n");
            sb.Append("  Createddttm: ").Append(Createddttm).Append("\n");
            sb.Append("  Modifiedby: ").Append(Modifiedby).Append("\n");
            sb.Append("  Modifieddttm: ").Append(Modifieddttm).Append("\n");
            sb.Append("  Retentionperiod: ").Append(Retentionperiod).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompuscanCOMPCONTRACTS);
        }

        /// <summary>
        /// Returns true if CompuscanCOMPCONTRACTS instances are equal
        /// </summary>
        /// <param name="input">Instance of CompuscanCOMPCONTRACTS to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompuscanCOMPCONTRACTS input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Cmpnynm == input.Cmpnynm ||
                    (this.Cmpnynm != null &&
                    this.Cmpnynm.Equals(input.Cmpnynm))
                ) && 
                (
                    this.Cmpnyrgstrtn == input.Cmpnyrgstrtn ||
                    (this.Cmpnyrgstrtn != null &&
                    this.Cmpnyrgstrtn.Equals(input.Cmpnyrgstrtn))
                ) && 
                (
                    this.Cntrctamount == input.Cntrctamount ||
                    (this.Cntrctamount != null &&
                    this.Cntrctamount.Equals(input.Cntrctamount))
                ) && 
                (
                    this.Cntrctenddt == input.Cntrctenddt ||
                    (this.Cntrctenddt != null &&
                    this.Cntrctenddt.Equals(input.Cntrctenddt))
                ) && 
                (
                    this.Cntrctrfrnc == input.Cntrctrfrnc ||
                    (this.Cntrctrfrnc != null &&
                    this.Cntrctrfrnc.Equals(input.Cntrctrfrnc))
                ) && 
                (
                    this.Cntrctstrtdt == input.Cntrctstrtdt ||
                    (this.Cntrctstrtdt != null &&
                    this.Cntrctstrtdt.Equals(input.Cntrctstrtdt))
                ) && 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.Createdby == input.Createdby ||
                    (this.Createdby != null &&
                    this.Createdby.Equals(input.Createdby))
                ) && 
                (
                    this.Createddttm == input.Createddttm ||
                    (this.Createddttm != null &&
                    this.Createddttm.Equals(input.Createddttm))
                ) && 
                (
                    this.Modifiedby == input.Modifiedby ||
                    (this.Modifiedby != null &&
                    this.Modifiedby.Equals(input.Modifiedby))
                ) && 
                (
                    this.Modifieddttm == input.Modifieddttm ||
                    (this.Modifieddttm != null &&
                    this.Modifieddttm.Equals(input.Modifieddttm))
                ) && 
                (
                    this.Retentionperiod == input.Retentionperiod ||
                    (this.Retentionperiod != null &&
                    this.Retentionperiod.Equals(input.Retentionperiod))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Cmpnynm != null)
                    hashCode = hashCode * 59 + this.Cmpnynm.GetHashCode();
                if (this.Cmpnyrgstrtn != null)
                    hashCode = hashCode * 59 + this.Cmpnyrgstrtn.GetHashCode();
                if (this.Cntrctamount != null)
                    hashCode = hashCode * 59 + this.Cntrctamount.GetHashCode();
                if (this.Cntrctenddt != null)
                    hashCode = hashCode * 59 + this.Cntrctenddt.GetHashCode();
                if (this.Cntrctrfrnc != null)
                    hashCode = hashCode * 59 + this.Cntrctrfrnc.GetHashCode();
                if (this.Cntrctstrtdt != null)
                    hashCode = hashCode * 59 + this.Cntrctstrtdt.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.Createdby != null)
                    hashCode = hashCode * 59 + this.Createdby.GetHashCode();
                if (this.Createddttm != null)
                    hashCode = hashCode * 59 + this.Createddttm.GetHashCode();
                if (this.Modifiedby != null)
                    hashCode = hashCode * 59 + this.Modifiedby.GetHashCode();
                if (this.Modifieddttm != null)
                    hashCode = hashCode * 59 + this.Modifieddttm.GetHashCode();
                if (this.Retentionperiod != null)
                    hashCode = hashCode * 59 + this.Retentionperiod.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
