/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// XdsConsumerFraudIndicatorsSummary
    /// </summary>
    [DataContract]
    public partial class XdsConsumerFraudIndicatorsSummary :  IEquatable<XdsConsumerFraudIndicatorsSummary>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XdsConsumerFraudIndicatorsSummary" /> class.
        /// </summary>
        /// <param name="displayText">displayText.</param>
        /// <param name="employerFraudVerificationYN">employerFraudVerificationYN.</param>
        /// <param name="homeAffairsDeceasedDate">homeAffairsDeceasedDate.</param>
        /// <param name="homeAffairsDeceasedStatus">homeAffairsDeceasedStatus.</param>
        /// <param name="homeAffairsVerificationYN">homeAffairsVerificationYN.</param>
        /// <param name="protectiveVerificationYN">protectiveVerificationYN.</param>
        /// <param name="safpsListingYN">safpsListingYN.</param>
        public XdsConsumerFraudIndicatorsSummary(string displayText = default(string), string employerFraudVerificationYN = default(string), string homeAffairsDeceasedDate = default(string), string homeAffairsDeceasedStatus = default(string), string homeAffairsVerificationYN = default(string), string protectiveVerificationYN = default(string), string safpsListingYN = default(string))
        {
            this.DisplayText = displayText;
            this.EmployerFraudVerificationYN = employerFraudVerificationYN;
            this.HomeAffairsDeceasedDate = homeAffairsDeceasedDate;
            this.HomeAffairsDeceasedStatus = homeAffairsDeceasedStatus;
            this.HomeAffairsVerificationYN = homeAffairsVerificationYN;
            this.ProtectiveVerificationYN = protectiveVerificationYN;
            this.SafpsListingYN = safpsListingYN;
            this.DisplayText = displayText;
            this.EmployerFraudVerificationYN = employerFraudVerificationYN;
            this.HomeAffairsDeceasedDate = homeAffairsDeceasedDate;
            this.HomeAffairsDeceasedStatus = homeAffairsDeceasedStatus;
            this.HomeAffairsVerificationYN = homeAffairsVerificationYN;
            this.ProtectiveVerificationYN = protectiveVerificationYN;
            this.SafpsListingYN = safpsListingYN;
        }

        /// <summary>
        /// Gets or Sets DisplayText
        /// </summary>
        [DataMember(Name="displayText", EmitDefaultValue=true)]
        public string DisplayText { get; set; }

        /// <summary>
        /// Gets or Sets EmployerFraudVerificationYN
        /// </summary>
        [DataMember(Name="employerFraudVerificationYN", EmitDefaultValue=true)]
        public string EmployerFraudVerificationYN { get; set; }

        /// <summary>
        /// Gets or Sets HomeAffairsDeceasedDate
        /// </summary>
        [DataMember(Name="homeAffairsDeceasedDate", EmitDefaultValue=true)]
        public string HomeAffairsDeceasedDate { get; set; }

        /// <summary>
        /// Gets or Sets HomeAffairsDeceasedStatus
        /// </summary>
        [DataMember(Name="homeAffairsDeceasedStatus", EmitDefaultValue=true)]
        public string HomeAffairsDeceasedStatus { get; set; }

        /// <summary>
        /// Gets or Sets HomeAffairsVerificationYN
        /// </summary>
        [DataMember(Name="homeAffairsVerificationYN", EmitDefaultValue=true)]
        public string HomeAffairsVerificationYN { get; set; }

        /// <summary>
        /// Gets or Sets ProtectiveVerificationYN
        /// </summary>
        [DataMember(Name="protectiveVerificationYN", EmitDefaultValue=true)]
        public string ProtectiveVerificationYN { get; set; }

        /// <summary>
        /// Gets or Sets SafpsListingYN
        /// </summary>
        [DataMember(Name="safpsListingYN", EmitDefaultValue=true)]
        public string SafpsListingYN { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class XdsConsumerFraudIndicatorsSummary {\n");
            sb.Append("  DisplayText: ").Append(DisplayText).Append("\n");
            sb.Append("  EmployerFraudVerificationYN: ").Append(EmployerFraudVerificationYN).Append("\n");
            sb.Append("  HomeAffairsDeceasedDate: ").Append(HomeAffairsDeceasedDate).Append("\n");
            sb.Append("  HomeAffairsDeceasedStatus: ").Append(HomeAffairsDeceasedStatus).Append("\n");
            sb.Append("  HomeAffairsVerificationYN: ").Append(HomeAffairsVerificationYN).Append("\n");
            sb.Append("  ProtectiveVerificationYN: ").Append(ProtectiveVerificationYN).Append("\n");
            sb.Append("  SafpsListingYN: ").Append(SafpsListingYN).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as XdsConsumerFraudIndicatorsSummary);
        }

        /// <summary>
        /// Returns true if XdsConsumerFraudIndicatorsSummary instances are equal
        /// </summary>
        /// <param name="input">Instance of XdsConsumerFraudIndicatorsSummary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(XdsConsumerFraudIndicatorsSummary input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DisplayText == input.DisplayText ||
                    (this.DisplayText != null &&
                    this.DisplayText.Equals(input.DisplayText))
                ) && 
                (
                    this.EmployerFraudVerificationYN == input.EmployerFraudVerificationYN ||
                    (this.EmployerFraudVerificationYN != null &&
                    this.EmployerFraudVerificationYN.Equals(input.EmployerFraudVerificationYN))
                ) && 
                (
                    this.HomeAffairsDeceasedDate == input.HomeAffairsDeceasedDate ||
                    (this.HomeAffairsDeceasedDate != null &&
                    this.HomeAffairsDeceasedDate.Equals(input.HomeAffairsDeceasedDate))
                ) && 
                (
                    this.HomeAffairsDeceasedStatus == input.HomeAffairsDeceasedStatus ||
                    (this.HomeAffairsDeceasedStatus != null &&
                    this.HomeAffairsDeceasedStatus.Equals(input.HomeAffairsDeceasedStatus))
                ) && 
                (
                    this.HomeAffairsVerificationYN == input.HomeAffairsVerificationYN ||
                    (this.HomeAffairsVerificationYN != null &&
                    this.HomeAffairsVerificationYN.Equals(input.HomeAffairsVerificationYN))
                ) && 
                (
                    this.ProtectiveVerificationYN == input.ProtectiveVerificationYN ||
                    (this.ProtectiveVerificationYN != null &&
                    this.ProtectiveVerificationYN.Equals(input.ProtectiveVerificationYN))
                ) && 
                (
                    this.SafpsListingYN == input.SafpsListingYN ||
                    (this.SafpsListingYN != null &&
                    this.SafpsListingYN.Equals(input.SafpsListingYN))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DisplayText != null)
                    hashCode = hashCode * 59 + this.DisplayText.GetHashCode();
                if (this.EmployerFraudVerificationYN != null)
                    hashCode = hashCode * 59 + this.EmployerFraudVerificationYN.GetHashCode();
                if (this.HomeAffairsDeceasedDate != null)
                    hashCode = hashCode * 59 + this.HomeAffairsDeceasedDate.GetHashCode();
                if (this.HomeAffairsDeceasedStatus != null)
                    hashCode = hashCode * 59 + this.HomeAffairsDeceasedStatus.GetHashCode();
                if (this.HomeAffairsVerificationYN != null)
                    hashCode = hashCode * 59 + this.HomeAffairsVerificationYN.GetHashCode();
                if (this.ProtectiveVerificationYN != null)
                    hashCode = hashCode * 59 + this.ProtectiveVerificationYN.GetHashCode();
                if (this.SafpsListingYN != null)
                    hashCode = hashCode * 59 + this.SafpsListingYN.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
