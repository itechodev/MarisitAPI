/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// XdsCommercialAccountVerification
    /// </summary>
    [DataContract]
    public partial class XdsCommercialAccountVerification :  IEquatable<XdsCommercialAccountVerification>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XdsCommercialAccountVerification" /> class.
        /// </summary>
        /// <param name="accountDormant">accountDormant.</param>
        /// <param name="accountFound">accountFound.</param>
        /// <param name="accountHolderName">accountHolderName.</param>
        /// <param name="accountNumber">accountNumber.</param>
        /// <param name="accountOpen">accountOpen.</param>
        /// <param name="accountType">accountType.</param>
        /// <param name="bank">bank.</param>
        /// <param name="company">company.</param>
        /// <param name="completedDate">completedDate.</param>
        /// <param name="displayText">displayText.</param>
        /// <param name="idMatch">idMatch.</param>
        /// <param name="initialsMatch">initialsMatch.</param>
        /// <param name="openMoreThan3Months">openMoreThan3Months.</param>
        /// <param name="surnameMatch">surnameMatch.</param>
        public XdsCommercialAccountVerification(string accountDormant = default(string), string accountFound = default(string), string accountHolderName = default(string), string accountNumber = default(string), string accountOpen = default(string), string accountType = default(string), string bank = default(string), string company = default(string), string completedDate = default(string), string displayText = default(string), string idMatch = default(string), string initialsMatch = default(string), string openMoreThan3Months = default(string), string surnameMatch = default(string))
        {
            this.AccountDormant = accountDormant;
            this.AccountFound = accountFound;
            this.AccountHolderName = accountHolderName;
            this.AccountNumber = accountNumber;
            this.AccountOpen = accountOpen;
            this.AccountType = accountType;
            this.Bank = bank;
            this.Company = company;
            this.CompletedDate = completedDate;
            this.DisplayText = displayText;
            this.IdMatch = idMatch;
            this.InitialsMatch = initialsMatch;
            this.OpenMoreThan3Months = openMoreThan3Months;
            this.SurnameMatch = surnameMatch;
            this.AccountDormant = accountDormant;
            this.AccountFound = accountFound;
            this.AccountHolderName = accountHolderName;
            this.AccountNumber = accountNumber;
            this.AccountOpen = accountOpen;
            this.AccountType = accountType;
            this.Bank = bank;
            this.Company = company;
            this.CompletedDate = completedDate;
            this.DisplayText = displayText;
            this.IdMatch = idMatch;
            this.InitialsMatch = initialsMatch;
            this.OpenMoreThan3Months = openMoreThan3Months;
            this.SurnameMatch = surnameMatch;
        }

        /// <summary>
        /// Gets or Sets AccountDormant
        /// </summary>
        [DataMember(Name="accountDormant", EmitDefaultValue=true)]
        public string AccountDormant { get; set; }

        /// <summary>
        /// Gets or Sets AccountFound
        /// </summary>
        [DataMember(Name="accountFound", EmitDefaultValue=true)]
        public string AccountFound { get; set; }

        /// <summary>
        /// Gets or Sets AccountHolderName
        /// </summary>
        [DataMember(Name="accountHolderName", EmitDefaultValue=true)]
        public string AccountHolderName { get; set; }

        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name="accountNumber", EmitDefaultValue=true)]
        public string AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets AccountOpen
        /// </summary>
        [DataMember(Name="accountOpen", EmitDefaultValue=true)]
        public string AccountOpen { get; set; }

        /// <summary>
        /// Gets or Sets AccountType
        /// </summary>
        [DataMember(Name="accountType", EmitDefaultValue=true)]
        public string AccountType { get; set; }

        /// <summary>
        /// Gets or Sets Bank
        /// </summary>
        [DataMember(Name="bank", EmitDefaultValue=true)]
        public string Bank { get; set; }

        /// <summary>
        /// Gets or Sets Company
        /// </summary>
        [DataMember(Name="company", EmitDefaultValue=true)]
        public string Company { get; set; }

        /// <summary>
        /// Gets or Sets CompletedDate
        /// </summary>
        [DataMember(Name="completedDate", EmitDefaultValue=true)]
        public string CompletedDate { get; set; }

        /// <summary>
        /// Gets or Sets DisplayText
        /// </summary>
        [DataMember(Name="displayText", EmitDefaultValue=true)]
        public string DisplayText { get; set; }

        /// <summary>
        /// Gets or Sets IdMatch
        /// </summary>
        [DataMember(Name="idMatch", EmitDefaultValue=true)]
        public string IdMatch { get; set; }

        /// <summary>
        /// Gets or Sets InitialsMatch
        /// </summary>
        [DataMember(Name="initialsMatch", EmitDefaultValue=true)]
        public string InitialsMatch { get; set; }

        /// <summary>
        /// Gets or Sets OpenMoreThan3Months
        /// </summary>
        [DataMember(Name="openMoreThan3Months", EmitDefaultValue=true)]
        public string OpenMoreThan3Months { get; set; }

        /// <summary>
        /// Gets or Sets SurnameMatch
        /// </summary>
        [DataMember(Name="surnameMatch", EmitDefaultValue=true)]
        public string SurnameMatch { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class XdsCommercialAccountVerification {\n");
            sb.Append("  AccountDormant: ").Append(AccountDormant).Append("\n");
            sb.Append("  AccountFound: ").Append(AccountFound).Append("\n");
            sb.Append("  AccountHolderName: ").Append(AccountHolderName).Append("\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  AccountOpen: ").Append(AccountOpen).Append("\n");
            sb.Append("  AccountType: ").Append(AccountType).Append("\n");
            sb.Append("  Bank: ").Append(Bank).Append("\n");
            sb.Append("  Company: ").Append(Company).Append("\n");
            sb.Append("  CompletedDate: ").Append(CompletedDate).Append("\n");
            sb.Append("  DisplayText: ").Append(DisplayText).Append("\n");
            sb.Append("  IdMatch: ").Append(IdMatch).Append("\n");
            sb.Append("  InitialsMatch: ").Append(InitialsMatch).Append("\n");
            sb.Append("  OpenMoreThan3Months: ").Append(OpenMoreThan3Months).Append("\n");
            sb.Append("  SurnameMatch: ").Append(SurnameMatch).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as XdsCommercialAccountVerification);
        }

        /// <summary>
        /// Returns true if XdsCommercialAccountVerification instances are equal
        /// </summary>
        /// <param name="input">Instance of XdsCommercialAccountVerification to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(XdsCommercialAccountVerification input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AccountDormant == input.AccountDormant ||
                    (this.AccountDormant != null &&
                    this.AccountDormant.Equals(input.AccountDormant))
                ) && 
                (
                    this.AccountFound == input.AccountFound ||
                    (this.AccountFound != null &&
                    this.AccountFound.Equals(input.AccountFound))
                ) && 
                (
                    this.AccountHolderName == input.AccountHolderName ||
                    (this.AccountHolderName != null &&
                    this.AccountHolderName.Equals(input.AccountHolderName))
                ) && 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.AccountOpen == input.AccountOpen ||
                    (this.AccountOpen != null &&
                    this.AccountOpen.Equals(input.AccountOpen))
                ) && 
                (
                    this.AccountType == input.AccountType ||
                    (this.AccountType != null &&
                    this.AccountType.Equals(input.AccountType))
                ) && 
                (
                    this.Bank == input.Bank ||
                    (this.Bank != null &&
                    this.Bank.Equals(input.Bank))
                ) && 
                (
                    this.Company == input.Company ||
                    (this.Company != null &&
                    this.Company.Equals(input.Company))
                ) && 
                (
                    this.CompletedDate == input.CompletedDate ||
                    (this.CompletedDate != null &&
                    this.CompletedDate.Equals(input.CompletedDate))
                ) && 
                (
                    this.DisplayText == input.DisplayText ||
                    (this.DisplayText != null &&
                    this.DisplayText.Equals(input.DisplayText))
                ) && 
                (
                    this.IdMatch == input.IdMatch ||
                    (this.IdMatch != null &&
                    this.IdMatch.Equals(input.IdMatch))
                ) && 
                (
                    this.InitialsMatch == input.InitialsMatch ||
                    (this.InitialsMatch != null &&
                    this.InitialsMatch.Equals(input.InitialsMatch))
                ) && 
                (
                    this.OpenMoreThan3Months == input.OpenMoreThan3Months ||
                    (this.OpenMoreThan3Months != null &&
                    this.OpenMoreThan3Months.Equals(input.OpenMoreThan3Months))
                ) && 
                (
                    this.SurnameMatch == input.SurnameMatch ||
                    (this.SurnameMatch != null &&
                    this.SurnameMatch.Equals(input.SurnameMatch))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountDormant != null)
                    hashCode = hashCode * 59 + this.AccountDormant.GetHashCode();
                if (this.AccountFound != null)
                    hashCode = hashCode * 59 + this.AccountFound.GetHashCode();
                if (this.AccountHolderName != null)
                    hashCode = hashCode * 59 + this.AccountHolderName.GetHashCode();
                if (this.AccountNumber != null)
                    hashCode = hashCode * 59 + this.AccountNumber.GetHashCode();
                if (this.AccountOpen != null)
                    hashCode = hashCode * 59 + this.AccountOpen.GetHashCode();
                if (this.AccountType != null)
                    hashCode = hashCode * 59 + this.AccountType.GetHashCode();
                if (this.Bank != null)
                    hashCode = hashCode * 59 + this.Bank.GetHashCode();
                if (this.Company != null)
                    hashCode = hashCode * 59 + this.Company.GetHashCode();
                if (this.CompletedDate != null)
                    hashCode = hashCode * 59 + this.CompletedDate.GetHashCode();
                if (this.DisplayText != null)
                    hashCode = hashCode * 59 + this.DisplayText.GetHashCode();
                if (this.IdMatch != null)
                    hashCode = hashCode * 59 + this.IdMatch.GetHashCode();
                if (this.InitialsMatch != null)
                    hashCode = hashCode * 59 + this.InitialsMatch.GetHashCode();
                if (this.OpenMoreThan3Months != null)
                    hashCode = hashCode * 59 + this.OpenMoreThan3Months.GetHashCode();
                if (this.SurnameMatch != null)
                    hashCode = hashCode * 59 + this.SurnameMatch.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
