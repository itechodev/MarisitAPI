/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// TransunionCommercialBusinessDeedsComprehensivePW
    /// </summary>
    [DataContract]
    public partial class TransunionCommercialBusinessDeedsComprehensivePW :  IEquatable<TransunionCommercialBusinessDeedsComprehensivePW>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransunionCommercialBusinessDeedsComprehensivePW" /> class.
        /// </summary>
        /// <param name="majorProduct">majorProduct.</param>
        /// <param name="date">date.</param>
        /// <param name="comment">comment.</param>
        /// <param name="purchasePrice">purchasePrice.</param>
        /// <param name="purchaseDate">purchaseDate.</param>
        /// <param name="propertySize">propertySize.</param>
        /// <param name="bondNumber">bondNumber.</param>
        /// <param name="mortgagee">mortgagee.</param>
        /// <param name="bondAmount">bondAmount.</param>
        /// <param name="bondDate">bondDate.</param>
        /// <param name="multiple">multiple.</param>
        /// <param name="share">share.</param>
        /// <param name="dateOfBirthID">dateOfBirthID.</param>
        /// <param name="erf">erf.</param>
        /// <param name="propertyType">propertyType.</param>
        /// <param name="farm">farm.</param>
        /// <param name="buyerName">buyerName.</param>
        /// <param name="schemeName">schemeName.</param>
        /// <param name="schemeNumber">schemeNumber.</param>
        /// <param name="portion">portion.</param>
        /// <param name="title">title.</param>
        /// <param name="street">street.</param>
        /// <param name="township">township.</param>
        /// <param name="province">province.</param>
        /// <param name="deedsOffice">deedsOffice.</param>
        /// <param name="rowID">rowID.</param>
        /// <param name="streetNumber">streetNumber.</param>
        public TransunionCommercialBusinessDeedsComprehensivePW(string majorProduct = default(string), string date = default(string), string comment = default(string), string purchasePrice = default(string), string purchaseDate = default(string), string propertySize = default(string), string bondNumber = default(string), string mortgagee = default(string), string bondAmount = default(string), string bondDate = default(string), string multiple = default(string), string share = default(string), string dateOfBirthID = default(string), string erf = default(string), string propertyType = default(string), string farm = default(string), string buyerName = default(string), string schemeName = default(string), string schemeNumber = default(string), string portion = default(string), string title = default(string), string street = default(string), string township = default(string), string province = default(string), string deedsOffice = default(string), string rowID = default(string), string streetNumber = default(string))
        {
            this.MajorProduct = majorProduct;
            this.Date = date;
            this.Comment = comment;
            this.PurchasePrice = purchasePrice;
            this.PurchaseDate = purchaseDate;
            this.PropertySize = propertySize;
            this.BondNumber = bondNumber;
            this.Mortgagee = mortgagee;
            this.BondAmount = bondAmount;
            this.BondDate = bondDate;
            this.Multiple = multiple;
            this.Share = share;
            this.DateOfBirthID = dateOfBirthID;
            this.Erf = erf;
            this.PropertyType = propertyType;
            this.Farm = farm;
            this.BuyerName = buyerName;
            this.SchemeName = schemeName;
            this.SchemeNumber = schemeNumber;
            this.Portion = portion;
            this.Title = title;
            this.Street = street;
            this.Township = township;
            this.Province = province;
            this.DeedsOffice = deedsOffice;
            this.RowID = rowID;
            this.StreetNumber = streetNumber;
            this.MajorProduct = majorProduct;
            this.Date = date;
            this.Comment = comment;
            this.PurchasePrice = purchasePrice;
            this.PurchaseDate = purchaseDate;
            this.PropertySize = propertySize;
            this.BondNumber = bondNumber;
            this.Mortgagee = mortgagee;
            this.BondAmount = bondAmount;
            this.BondDate = bondDate;
            this.Multiple = multiple;
            this.Share = share;
            this.DateOfBirthID = dateOfBirthID;
            this.Erf = erf;
            this.PropertyType = propertyType;
            this.Farm = farm;
            this.BuyerName = buyerName;
            this.SchemeName = schemeName;
            this.SchemeNumber = schemeNumber;
            this.Portion = portion;
            this.Title = title;
            this.Street = street;
            this.Township = township;
            this.Province = province;
            this.DeedsOffice = deedsOffice;
            this.RowID = rowID;
            this.StreetNumber = streetNumber;
        }

        /// <summary>
        /// Gets or Sets MajorProduct
        /// </summary>
        [DataMember(Name="majorProduct", EmitDefaultValue=true)]
        public string MajorProduct { get; set; }

        /// <summary>
        /// Gets or Sets Date
        /// </summary>
        [DataMember(Name="date", EmitDefaultValue=true)]
        public string Date { get; set; }

        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [DataMember(Name="comment", EmitDefaultValue=true)]
        public string Comment { get; set; }

        /// <summary>
        /// Gets or Sets PurchasePrice
        /// </summary>
        [DataMember(Name="purchasePrice", EmitDefaultValue=true)]
        public string PurchasePrice { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseDate
        /// </summary>
        [DataMember(Name="purchaseDate", EmitDefaultValue=true)]
        public string PurchaseDate { get; set; }

        /// <summary>
        /// Gets or Sets PropertySize
        /// </summary>
        [DataMember(Name="propertySize", EmitDefaultValue=true)]
        public string PropertySize { get; set; }

        /// <summary>
        /// Gets or Sets BondNumber
        /// </summary>
        [DataMember(Name="bondNumber", EmitDefaultValue=true)]
        public string BondNumber { get; set; }

        /// <summary>
        /// Gets or Sets Mortgagee
        /// </summary>
        [DataMember(Name="mortgagee", EmitDefaultValue=true)]
        public string Mortgagee { get; set; }

        /// <summary>
        /// Gets or Sets BondAmount
        /// </summary>
        [DataMember(Name="bondAmount", EmitDefaultValue=true)]
        public string BondAmount { get; set; }

        /// <summary>
        /// Gets or Sets BondDate
        /// </summary>
        [DataMember(Name="bondDate", EmitDefaultValue=true)]
        public string BondDate { get; set; }

        /// <summary>
        /// Gets or Sets Multiple
        /// </summary>
        [DataMember(Name="multiple", EmitDefaultValue=true)]
        public string Multiple { get; set; }

        /// <summary>
        /// Gets or Sets Share
        /// </summary>
        [DataMember(Name="share", EmitDefaultValue=true)]
        public string Share { get; set; }

        /// <summary>
        /// Gets or Sets DateOfBirthID
        /// </summary>
        [DataMember(Name="dateOfBirthID", EmitDefaultValue=true)]
        public string DateOfBirthID { get; set; }

        /// <summary>
        /// Gets or Sets Erf
        /// </summary>
        [DataMember(Name="erf", EmitDefaultValue=true)]
        public string Erf { get; set; }

        /// <summary>
        /// Gets or Sets PropertyType
        /// </summary>
        [DataMember(Name="propertyType", EmitDefaultValue=true)]
        public string PropertyType { get; set; }

        /// <summary>
        /// Gets or Sets Farm
        /// </summary>
        [DataMember(Name="farm", EmitDefaultValue=true)]
        public string Farm { get; set; }

        /// <summary>
        /// Gets or Sets BuyerName
        /// </summary>
        [DataMember(Name="buyerName", EmitDefaultValue=true)]
        public string BuyerName { get; set; }

        /// <summary>
        /// Gets or Sets SchemeName
        /// </summary>
        [DataMember(Name="schemeName", EmitDefaultValue=true)]
        public string SchemeName { get; set; }

        /// <summary>
        /// Gets or Sets SchemeNumber
        /// </summary>
        [DataMember(Name="schemeNumber", EmitDefaultValue=true)]
        public string SchemeNumber { get; set; }

        /// <summary>
        /// Gets or Sets Portion
        /// </summary>
        [DataMember(Name="portion", EmitDefaultValue=true)]
        public string Portion { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=true)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Street
        /// </summary>
        [DataMember(Name="street", EmitDefaultValue=true)]
        public string Street { get; set; }

        /// <summary>
        /// Gets or Sets Township
        /// </summary>
        [DataMember(Name="township", EmitDefaultValue=true)]
        public string Township { get; set; }

        /// <summary>
        /// Gets or Sets Province
        /// </summary>
        [DataMember(Name="province", EmitDefaultValue=true)]
        public string Province { get; set; }

        /// <summary>
        /// Gets or Sets DeedsOffice
        /// </summary>
        [DataMember(Name="deedsOffice", EmitDefaultValue=true)]
        public string DeedsOffice { get; set; }

        /// <summary>
        /// Gets or Sets RowID
        /// </summary>
        [DataMember(Name="rowID", EmitDefaultValue=true)]
        public string RowID { get; set; }

        /// <summary>
        /// Gets or Sets StreetNumber
        /// </summary>
        [DataMember(Name="streetNumber", EmitDefaultValue=true)]
        public string StreetNumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransunionCommercialBusinessDeedsComprehensivePW {\n");
            sb.Append("  MajorProduct: ").Append(MajorProduct).Append("\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  PurchasePrice: ").Append(PurchasePrice).Append("\n");
            sb.Append("  PurchaseDate: ").Append(PurchaseDate).Append("\n");
            sb.Append("  PropertySize: ").Append(PropertySize).Append("\n");
            sb.Append("  BondNumber: ").Append(BondNumber).Append("\n");
            sb.Append("  Mortgagee: ").Append(Mortgagee).Append("\n");
            sb.Append("  BondAmount: ").Append(BondAmount).Append("\n");
            sb.Append("  BondDate: ").Append(BondDate).Append("\n");
            sb.Append("  Multiple: ").Append(Multiple).Append("\n");
            sb.Append("  Share: ").Append(Share).Append("\n");
            sb.Append("  DateOfBirthID: ").Append(DateOfBirthID).Append("\n");
            sb.Append("  Erf: ").Append(Erf).Append("\n");
            sb.Append("  PropertyType: ").Append(PropertyType).Append("\n");
            sb.Append("  Farm: ").Append(Farm).Append("\n");
            sb.Append("  BuyerName: ").Append(BuyerName).Append("\n");
            sb.Append("  SchemeName: ").Append(SchemeName).Append("\n");
            sb.Append("  SchemeNumber: ").Append(SchemeNumber).Append("\n");
            sb.Append("  Portion: ").Append(Portion).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Street: ").Append(Street).Append("\n");
            sb.Append("  Township: ").Append(Township).Append("\n");
            sb.Append("  Province: ").Append(Province).Append("\n");
            sb.Append("  DeedsOffice: ").Append(DeedsOffice).Append("\n");
            sb.Append("  RowID: ").Append(RowID).Append("\n");
            sb.Append("  StreetNumber: ").Append(StreetNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransunionCommercialBusinessDeedsComprehensivePW);
        }

        /// <summary>
        /// Returns true if TransunionCommercialBusinessDeedsComprehensivePW instances are equal
        /// </summary>
        /// <param name="input">Instance of TransunionCommercialBusinessDeedsComprehensivePW to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransunionCommercialBusinessDeedsComprehensivePW input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MajorProduct == input.MajorProduct ||
                    (this.MajorProduct != null &&
                    this.MajorProduct.Equals(input.MajorProduct))
                ) && 
                (
                    this.Date == input.Date ||
                    (this.Date != null &&
                    this.Date.Equals(input.Date))
                ) && 
                (
                    this.Comment == input.Comment ||
                    (this.Comment != null &&
                    this.Comment.Equals(input.Comment))
                ) && 
                (
                    this.PurchasePrice == input.PurchasePrice ||
                    (this.PurchasePrice != null &&
                    this.PurchasePrice.Equals(input.PurchasePrice))
                ) && 
                (
                    this.PurchaseDate == input.PurchaseDate ||
                    (this.PurchaseDate != null &&
                    this.PurchaseDate.Equals(input.PurchaseDate))
                ) && 
                (
                    this.PropertySize == input.PropertySize ||
                    (this.PropertySize != null &&
                    this.PropertySize.Equals(input.PropertySize))
                ) && 
                (
                    this.BondNumber == input.BondNumber ||
                    (this.BondNumber != null &&
                    this.BondNumber.Equals(input.BondNumber))
                ) && 
                (
                    this.Mortgagee == input.Mortgagee ||
                    (this.Mortgagee != null &&
                    this.Mortgagee.Equals(input.Mortgagee))
                ) && 
                (
                    this.BondAmount == input.BondAmount ||
                    (this.BondAmount != null &&
                    this.BondAmount.Equals(input.BondAmount))
                ) && 
                (
                    this.BondDate == input.BondDate ||
                    (this.BondDate != null &&
                    this.BondDate.Equals(input.BondDate))
                ) && 
                (
                    this.Multiple == input.Multiple ||
                    (this.Multiple != null &&
                    this.Multiple.Equals(input.Multiple))
                ) && 
                (
                    this.Share == input.Share ||
                    (this.Share != null &&
                    this.Share.Equals(input.Share))
                ) && 
                (
                    this.DateOfBirthID == input.DateOfBirthID ||
                    (this.DateOfBirthID != null &&
                    this.DateOfBirthID.Equals(input.DateOfBirthID))
                ) && 
                (
                    this.Erf == input.Erf ||
                    (this.Erf != null &&
                    this.Erf.Equals(input.Erf))
                ) && 
                (
                    this.PropertyType == input.PropertyType ||
                    (this.PropertyType != null &&
                    this.PropertyType.Equals(input.PropertyType))
                ) && 
                (
                    this.Farm == input.Farm ||
                    (this.Farm != null &&
                    this.Farm.Equals(input.Farm))
                ) && 
                (
                    this.BuyerName == input.BuyerName ||
                    (this.BuyerName != null &&
                    this.BuyerName.Equals(input.BuyerName))
                ) && 
                (
                    this.SchemeName == input.SchemeName ||
                    (this.SchemeName != null &&
                    this.SchemeName.Equals(input.SchemeName))
                ) && 
                (
                    this.SchemeNumber == input.SchemeNumber ||
                    (this.SchemeNumber != null &&
                    this.SchemeNumber.Equals(input.SchemeNumber))
                ) && 
                (
                    this.Portion == input.Portion ||
                    (this.Portion != null &&
                    this.Portion.Equals(input.Portion))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.Street == input.Street ||
                    (this.Street != null &&
                    this.Street.Equals(input.Street))
                ) && 
                (
                    this.Township == input.Township ||
                    (this.Township != null &&
                    this.Township.Equals(input.Township))
                ) && 
                (
                    this.Province == input.Province ||
                    (this.Province != null &&
                    this.Province.Equals(input.Province))
                ) && 
                (
                    this.DeedsOffice == input.DeedsOffice ||
                    (this.DeedsOffice != null &&
                    this.DeedsOffice.Equals(input.DeedsOffice))
                ) && 
                (
                    this.RowID == input.RowID ||
                    (this.RowID != null &&
                    this.RowID.Equals(input.RowID))
                ) && 
                (
                    this.StreetNumber == input.StreetNumber ||
                    (this.StreetNumber != null &&
                    this.StreetNumber.Equals(input.StreetNumber))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MajorProduct != null)
                    hashCode = hashCode * 59 + this.MajorProduct.GetHashCode();
                if (this.Date != null)
                    hashCode = hashCode * 59 + this.Date.GetHashCode();
                if (this.Comment != null)
                    hashCode = hashCode * 59 + this.Comment.GetHashCode();
                if (this.PurchasePrice != null)
                    hashCode = hashCode * 59 + this.PurchasePrice.GetHashCode();
                if (this.PurchaseDate != null)
                    hashCode = hashCode * 59 + this.PurchaseDate.GetHashCode();
                if (this.PropertySize != null)
                    hashCode = hashCode * 59 + this.PropertySize.GetHashCode();
                if (this.BondNumber != null)
                    hashCode = hashCode * 59 + this.BondNumber.GetHashCode();
                if (this.Mortgagee != null)
                    hashCode = hashCode * 59 + this.Mortgagee.GetHashCode();
                if (this.BondAmount != null)
                    hashCode = hashCode * 59 + this.BondAmount.GetHashCode();
                if (this.BondDate != null)
                    hashCode = hashCode * 59 + this.BondDate.GetHashCode();
                if (this.Multiple != null)
                    hashCode = hashCode * 59 + this.Multiple.GetHashCode();
                if (this.Share != null)
                    hashCode = hashCode * 59 + this.Share.GetHashCode();
                if (this.DateOfBirthID != null)
                    hashCode = hashCode * 59 + this.DateOfBirthID.GetHashCode();
                if (this.Erf != null)
                    hashCode = hashCode * 59 + this.Erf.GetHashCode();
                if (this.PropertyType != null)
                    hashCode = hashCode * 59 + this.PropertyType.GetHashCode();
                if (this.Farm != null)
                    hashCode = hashCode * 59 + this.Farm.GetHashCode();
                if (this.BuyerName != null)
                    hashCode = hashCode * 59 + this.BuyerName.GetHashCode();
                if (this.SchemeName != null)
                    hashCode = hashCode * 59 + this.SchemeName.GetHashCode();
                if (this.SchemeNumber != null)
                    hashCode = hashCode * 59 + this.SchemeNumber.GetHashCode();
                if (this.Portion != null)
                    hashCode = hashCode * 59 + this.Portion.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.Street != null)
                    hashCode = hashCode * 59 + this.Street.GetHashCode();
                if (this.Township != null)
                    hashCode = hashCode * 59 + this.Township.GetHashCode();
                if (this.Province != null)
                    hashCode = hashCode * 59 + this.Province.GetHashCode();
                if (this.DeedsOffice != null)
                    hashCode = hashCode * 59 + this.DeedsOffice.GetHashCode();
                if (this.RowID != null)
                    hashCode = hashCode * 59 + this.RowID.GetHashCode();
                if (this.StreetNumber != null)
                    hashCode = hashCode * 59 + this.StreetNumber.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
