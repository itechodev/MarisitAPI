/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarisIT.Api.Client.OpenAPIDateConverter;

namespace MarisIT.Api.Model
{
    /// <summary>
    /// CompuscanCOMPCOMMCONTACTS
    /// </summary>
    [DataContract]
    public partial class CompuscanCOMPCOMMCONTACTS :  IEquatable<CompuscanCOMPCOMMCONTACTS>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompuscanCOMPCOMMCONTACTS" /> class.
        /// </summary>
        /// <param name="comments">comments.</param>
        /// <param name="contactperson">contactperson.</param>
        /// <param name="conresponsibility">conresponsibility.</param>
        /// <param name="createdby">createdby.</param>
        /// <param name="createddttm">createddttm.</param>
        /// <param name="emailaddress">emailaddress.</param>
        /// <param name="faxnumber">faxnumber.</param>
        /// <param name="modifiedby">modifiedby.</param>
        /// <param name="modifieddttm">modifieddttm.</param>
        /// <param name="telephonenumber">telephonenumber.</param>
        /// <param name="telephonenumbeR2">telephonenumbeR2.</param>
        /// <param name="website">website.</param>
        public CompuscanCOMPCOMMCONTACTS(string comments = default(string), string contactperson = default(string), string conresponsibility = default(string), string createdby = default(string), string createddttm = default(string), string emailaddress = default(string), string faxnumber = default(string), string modifiedby = default(string), string modifieddttm = default(string), string telephonenumber = default(string), string telephonenumbeR2 = default(string), string website = default(string))
        {
            this.Comments = comments;
            this.Contactperson = contactperson;
            this.Conresponsibility = conresponsibility;
            this.Createdby = createdby;
            this.Createddttm = createddttm;
            this.Emailaddress = emailaddress;
            this.Faxnumber = faxnumber;
            this.Modifiedby = modifiedby;
            this.Modifieddttm = modifieddttm;
            this.Telephonenumber = telephonenumber;
            this.TelephonenumbeR2 = telephonenumbeR2;
            this.Website = website;
            this.Comments = comments;
            this.Contactperson = contactperson;
            this.Conresponsibility = conresponsibility;
            this.Createdby = createdby;
            this.Createddttm = createddttm;
            this.Emailaddress = emailaddress;
            this.Faxnumber = faxnumber;
            this.Modifiedby = modifiedby;
            this.Modifieddttm = modifieddttm;
            this.Telephonenumber = telephonenumber;
            this.TelephonenumbeR2 = telephonenumbeR2;
            this.Website = website;
        }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name="comments", EmitDefaultValue=true)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets Contactperson
        /// </summary>
        [DataMember(Name="contactperson", EmitDefaultValue=true)]
        public string Contactperson { get; set; }

        /// <summary>
        /// Gets or Sets Conresponsibility
        /// </summary>
        [DataMember(Name="conresponsibility", EmitDefaultValue=true)]
        public string Conresponsibility { get; set; }

        /// <summary>
        /// Gets or Sets Createdby
        /// </summary>
        [DataMember(Name="createdby", EmitDefaultValue=true)]
        public string Createdby { get; set; }

        /// <summary>
        /// Gets or Sets Createddttm
        /// </summary>
        [DataMember(Name="createddttm", EmitDefaultValue=true)]
        public string Createddttm { get; set; }

        /// <summary>
        /// Gets or Sets Emailaddress
        /// </summary>
        [DataMember(Name="emailaddress", EmitDefaultValue=true)]
        public string Emailaddress { get; set; }

        /// <summary>
        /// Gets or Sets Faxnumber
        /// </summary>
        [DataMember(Name="faxnumber", EmitDefaultValue=true)]
        public string Faxnumber { get; set; }

        /// <summary>
        /// Gets or Sets Modifiedby
        /// </summary>
        [DataMember(Name="modifiedby", EmitDefaultValue=true)]
        public string Modifiedby { get; set; }

        /// <summary>
        /// Gets or Sets Modifieddttm
        /// </summary>
        [DataMember(Name="modifieddttm", EmitDefaultValue=true)]
        public string Modifieddttm { get; set; }

        /// <summary>
        /// Gets or Sets Telephonenumber
        /// </summary>
        [DataMember(Name="telephonenumber", EmitDefaultValue=true)]
        public string Telephonenumber { get; set; }

        /// <summary>
        /// Gets or Sets TelephonenumbeR2
        /// </summary>
        [DataMember(Name="telephonenumbeR2", EmitDefaultValue=true)]
        public string TelephonenumbeR2 { get; set; }

        /// <summary>
        /// Gets or Sets Website
        /// </summary>
        [DataMember(Name="website", EmitDefaultValue=true)]
        public string Website { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CompuscanCOMPCOMMCONTACTS {\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  Contactperson: ").Append(Contactperson).Append("\n");
            sb.Append("  Conresponsibility: ").Append(Conresponsibility).Append("\n");
            sb.Append("  Createdby: ").Append(Createdby).Append("\n");
            sb.Append("  Createddttm: ").Append(Createddttm).Append("\n");
            sb.Append("  Emailaddress: ").Append(Emailaddress).Append("\n");
            sb.Append("  Faxnumber: ").Append(Faxnumber).Append("\n");
            sb.Append("  Modifiedby: ").Append(Modifiedby).Append("\n");
            sb.Append("  Modifieddttm: ").Append(Modifieddttm).Append("\n");
            sb.Append("  Telephonenumber: ").Append(Telephonenumber).Append("\n");
            sb.Append("  TelephonenumbeR2: ").Append(TelephonenumbeR2).Append("\n");
            sb.Append("  Website: ").Append(Website).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CompuscanCOMPCOMMCONTACTS);
        }

        /// <summary>
        /// Returns true if CompuscanCOMPCOMMCONTACTS instances are equal
        /// </summary>
        /// <param name="input">Instance of CompuscanCOMPCOMMCONTACTS to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CompuscanCOMPCOMMCONTACTS input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.Contactperson == input.Contactperson ||
                    (this.Contactperson != null &&
                    this.Contactperson.Equals(input.Contactperson))
                ) && 
                (
                    this.Conresponsibility == input.Conresponsibility ||
                    (this.Conresponsibility != null &&
                    this.Conresponsibility.Equals(input.Conresponsibility))
                ) && 
                (
                    this.Createdby == input.Createdby ||
                    (this.Createdby != null &&
                    this.Createdby.Equals(input.Createdby))
                ) && 
                (
                    this.Createddttm == input.Createddttm ||
                    (this.Createddttm != null &&
                    this.Createddttm.Equals(input.Createddttm))
                ) && 
                (
                    this.Emailaddress == input.Emailaddress ||
                    (this.Emailaddress != null &&
                    this.Emailaddress.Equals(input.Emailaddress))
                ) && 
                (
                    this.Faxnumber == input.Faxnumber ||
                    (this.Faxnumber != null &&
                    this.Faxnumber.Equals(input.Faxnumber))
                ) && 
                (
                    this.Modifiedby == input.Modifiedby ||
                    (this.Modifiedby != null &&
                    this.Modifiedby.Equals(input.Modifiedby))
                ) && 
                (
                    this.Modifieddttm == input.Modifieddttm ||
                    (this.Modifieddttm != null &&
                    this.Modifieddttm.Equals(input.Modifieddttm))
                ) && 
                (
                    this.Telephonenumber == input.Telephonenumber ||
                    (this.Telephonenumber != null &&
                    this.Telephonenumber.Equals(input.Telephonenumber))
                ) && 
                (
                    this.TelephonenumbeR2 == input.TelephonenumbeR2 ||
                    (this.TelephonenumbeR2 != null &&
                    this.TelephonenumbeR2.Equals(input.TelephonenumbeR2))
                ) && 
                (
                    this.Website == input.Website ||
                    (this.Website != null &&
                    this.Website.Equals(input.Website))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.Contactperson != null)
                    hashCode = hashCode * 59 + this.Contactperson.GetHashCode();
                if (this.Conresponsibility != null)
                    hashCode = hashCode * 59 + this.Conresponsibility.GetHashCode();
                if (this.Createdby != null)
                    hashCode = hashCode * 59 + this.Createdby.GetHashCode();
                if (this.Createddttm != null)
                    hashCode = hashCode * 59 + this.Createddttm.GetHashCode();
                if (this.Emailaddress != null)
                    hashCode = hashCode * 59 + this.Emailaddress.GetHashCode();
                if (this.Faxnumber != null)
                    hashCode = hashCode * 59 + this.Faxnumber.GetHashCode();
                if (this.Modifiedby != null)
                    hashCode = hashCode * 59 + this.Modifiedby.GetHashCode();
                if (this.Modifieddttm != null)
                    hashCode = hashCode * 59 + this.Modifieddttm.GetHashCode();
                if (this.Telephonenumber != null)
                    hashCode = hashCode * 59 + this.Telephonenumber.GetHashCode();
                if (this.TelephonenumbeR2 != null)
                    hashCode = hashCode * 59 + this.TelephonenumbeR2.GetHashCode();
                if (this.Website != null)
                    hashCode = hashCode * 59 + this.Website.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
