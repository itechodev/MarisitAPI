/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using MarisIT.Api.Client;
using MarisIT.Api.Api;
using MarisIT.Api.Model;

namespace MarisIT.Api.Test
{
    /// <summary>
    ///  Class for testing WindeedCIPCApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class WindeedCIPCApiTests
    {
        private WindeedCIPCApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WindeedCIPCApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WindeedCIPCApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' WindeedCIPCApi
            //Assert.IsInstanceOf(typeof(WindeedCIPCApi), instance);
        }

        
        /// <summary>
        /// Test CipcCompanyResult
        /// </summary>
        [Test]
        public void CipcCompanyResultTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReferenceRequest referenceRequest = null;
            //var response = instance.CipcCompanyResult(referenceRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfWindeedCipcProxiesCompanyReportFlatten), response, "response is ApiReturnOfWindeedCipcProxiesCompanyReportFlatten");
        }
        
        /// <summary>
        /// Test CipcCompanySearch
        /// </summary>
        [Test]
        public void CipcCompanySearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WindeedCompanySearchByNameRequest windeedCompanySearchByNameRequest = null;
            //var response = instance.CipcCompanySearch(windeedCompanySearchByNameRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfCompanySearchArray), response, "response is ApiReturnOfCompanySearchArray");
        }
        
        /// <summary>
        /// Test CipcCompanySearchReg
        /// </summary>
        [Test]
        public void CipcCompanySearchRegTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WindeedCompanySearchByRegRequest windeedCompanySearchByRegRequest = null;
            //var response = instance.CipcCompanySearchReg(windeedCompanySearchByRegRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfCompanySearchArray), response, "response is ApiReturnOfCompanySearchArray");
        }
        
        /// <summary>
        /// Test CipcDirectorResult
        /// </summary>
        [Test]
        public void CipcDirectorResultTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReferenceRequest referenceRequest = null;
            //var response = instance.CipcDirectorResult(referenceRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfWindeedCipcProxiesJurisitcOrNaturalReportResponse), response, "response is ApiReturnOfWindeedCipcProxiesJurisitcOrNaturalReportResponse");
        }
        
        /// <summary>
        /// Test CipcDirectorSearch
        /// </summary>
        [Test]
        public void CipcDirectorSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WindeedDirectorSearchRequest windeedDirectorSearchRequest = null;
            //var response = instance.CipcDirectorSearch(windeedDirectorSearchRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfDirectorSearchArray), response, "response is ApiReturnOfDirectorSearchArray");
        }
        
    }

}
