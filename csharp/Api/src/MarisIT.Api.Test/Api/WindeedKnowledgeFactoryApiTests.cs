/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using MarisIT.Api.Client;
using MarisIT.Api.Api;
using MarisIT.Api.Model;

namespace MarisIT.Api.Test
{
    /// <summary>
    ///  Class for testing WindeedKnowledgeFactoryApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class WindeedKnowledgeFactoryApiTests
    {
        private WindeedKnowledgeFactoryApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WindeedKnowledgeFactoryApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WindeedKnowledgeFactoryApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' WindeedKnowledgeFactoryApi
            //Assert.IsInstanceOf(typeof(WindeedKnowledgeFactoryApi), instance);
        }

        
        /// <summary>
        /// Test ErfToStreet
        /// </summary>
        [Test]
        public void ErfToStreetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WindeedErfToStreetRequest windeedErfToStreetRequest = null;
            //var response = instance.ErfToStreet(windeedErfToStreetRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfErfOrStreetSearchArray), response, "response is ApiReturnOfErfOrStreetSearchArray");
        }
        
        /// <summary>
        /// Test ErfToStreetResult
        /// </summary>
        [Test]
        public void ErfToStreetResultTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReferenceRequest referenceRequest = null;
            //var response = instance.ErfToStreetResult(referenceRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfWindeedKnowledgeFactoryErfToStreetResponse), response, "response is ApiReturnOfWindeedKnowledgeFactoryErfToStreetResponse");
        }
        
        /// <summary>
        /// Test SchemeToStreet
        /// </summary>
        [Test]
        public void SchemeToStreetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WindeedSchemaToSteetRequest windeedSchemaToSteetRequest = null;
            //var response = instance.SchemeToStreet(windeedSchemaToSteetRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfSchemeSearchArray), response, "response is ApiReturnOfSchemeSearchArray");
        }
        
        /// <summary>
        /// Test SchemeToStreetResult
        /// </summary>
        [Test]
        public void SchemeToStreetResultTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReferenceRequest referenceRequest = null;
            //var response = instance.SchemeToStreetResult(referenceRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfWindeedKnowledgeFactorySectionalSchemeToStreetResponse), response, "response is ApiReturnOfWindeedKnowledgeFactorySectionalSchemeToStreetResponse");
        }
        
        /// <summary>
        /// Test StreetToErf
        /// </summary>
        [Test]
        public void StreetToErfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WindeedStreetToErfRequest windeedStreetToErfRequest = null;
            //var response = instance.StreetToErf(windeedStreetToErfRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfErfOrStreetSearchArray), response, "response is ApiReturnOfErfOrStreetSearchArray");
        }
        
        /// <summary>
        /// Test StreetToErfResult
        /// </summary>
        [Test]
        public void StreetToErfResultTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReferenceRequest referenceRequest = null;
            //var response = instance.StreetToErfResult(referenceRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfWindeedKnowledgeFactoryStreetToErfResponse), response, "response is ApiReturnOfWindeedKnowledgeFactoryStreetToErfResponse");
        }
        
    }

}
