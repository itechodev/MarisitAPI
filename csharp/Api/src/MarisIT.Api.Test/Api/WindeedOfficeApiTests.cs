/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using MarisIT.Api.Client;
using MarisIT.Api.Api;
using MarisIT.Api.Model;

namespace MarisIT.Api.Test
{
    /// <summary>
    ///  Class for testing WindeedOfficeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class WindeedOfficeApiTests
    {
        private WindeedOfficeApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WindeedOfficeApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WindeedOfficeApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' WindeedOfficeApi
            //Assert.IsInstanceOf(typeof(WindeedOfficeApi), instance);
        }

        
        /// <summary>
        /// Test AgriculturalResult
        /// </summary>
        [Test]
        public void AgriculturalResultTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReferenceRequest referenceRequest = null;
            //var response = instance.AgriculturalResult(referenceRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfWindeedOfficeDocumentResponse), response, "response is ApiReturnOfWindeedOfficeDocumentResponse");
        }
        
        /// <summary>
        /// Test AgriculturalSearch
        /// </summary>
        [Test]
        public void AgriculturalSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WindeedAgriculturalSearchRequest windeedAgriculturalSearchRequest = null;
            //var response = instance.AgriculturalSearch(windeedAgriculturalSearchRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfApiReturnOfWindeedOfficeDocumentResponseAndWindeedOfficeProxiesAgriculturalHoldingPortionItem), response, "response is ApiReturnOfApiReturnOfWindeedOfficeDocumentResponseAndWindeedOfficeProxiesAgriculturalHoldingPortionItem");
        }
        
        /// <summary>
        /// Test CompanyResult
        /// </summary>
        [Test]
        public void CompanyResultTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReferenceRequest referenceRequest = null;
            //var response = instance.CompanyResult(referenceRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfWindeedCompanySearchResponse), response, "response is ApiReturnOfWindeedCompanySearchResponse");
        }
        
        /// <summary>
        /// Test CompanySearch
        /// </summary>
        [Test]
        public void CompanySearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WindeedCompanySearchRequest windeedCompanySearchRequest = null;
            //var response = instance.CompanySearch(windeedCompanySearchRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfApiReturnOfWindeedOfficeBaseOwnerResponseAndWindeedOwnerReferencedItem), response, "response is ApiReturnOfApiReturnOfWindeedOfficeBaseOwnerResponseAndWindeedOwnerReferencedItem");
        }
        
        /// <summary>
        /// Test ErfResult
        /// </summary>
        [Test]
        public void ErfResultTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReferenceRequest referenceRequest = null;
            //var response = instance.ErfResult(referenceRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfWindeedOfficeDocumentResponse), response, "response is ApiReturnOfWindeedOfficeDocumentResponse");
        }
        
        /// <summary>
        /// Test ErfSearch
        /// </summary>
        [Test]
        public void ErfSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WindeedErfSearchRequest windeedErfSearchRequest = null;
            //var response = instance.ErfSearch(windeedErfSearchRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfApiReturnOfWindeedOfficeDocumentResponseAndWindeedOfficeProxiesErfPortionItem), response, "response is ApiReturnOfApiReturnOfWindeedOfficeDocumentResponseAndWindeedOfficeProxiesErfPortionItem");
        }
        
        /// <summary>
        /// Test FarmRemainingExtentSearch
        /// </summary>
        [Test]
        public void FarmRemainingExtentSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WindeedFarmSearchRemainingExtentRequest windeedFarmSearchRemainingExtentRequest = null;
            //var response = instance.FarmRemainingExtentSearch(windeedFarmSearchRemainingExtentRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfWindeedOfficev1ProxiesFarmSearchResult), response, "response is ApiReturnOfWindeedOfficev1ProxiesFarmSearchResult");
        }
        
        /// <summary>
        /// Test FarmResult
        /// </summary>
        [Test]
        public void FarmResultTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReferenceRequest referenceRequest = null;
            //var response = instance.FarmResult(referenceRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfWindeedOfficeDocumentResponse), response, "response is ApiReturnOfWindeedOfficeDocumentResponse");
        }
        
        /// <summary>
        /// Test FarmSearch
        /// </summary>
        [Test]
        public void FarmSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WindeedFarmSearchRequest windeedFarmSearchRequest = null;
            //var response = instance.FarmSearch(windeedFarmSearchRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfApiReturnOfWindeedOfficeDocumentResponseAndWindeedOfficeProxiesFarmPortionItem), response, "response is ApiReturnOfApiReturnOfWindeedOfficeDocumentResponseAndWindeedOfficeProxiesFarmPortionItem");
        }
        
        /// <summary>
        /// Test PersonResult
        /// </summary>
        [Test]
        public void PersonResultTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReferenceRequest referenceRequest = null;
            //var response = instance.PersonResult(referenceRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfWindeedSpiderSpiderResponse), response, "response is ApiReturnOfWindeedSpiderSpiderResponse");
        }
        
        /// <summary>
        /// Test PersonSearch
        /// </summary>
        [Test]
        public void PersonSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WindeedPersonSearchRequest windeedPersonSearchRequest = null;
            //var response = instance.PersonSearch(windeedPersonSearchRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfApiReturnOfWindeedOfficePersonResponseAndWindeedOwnerReferencedItem), response, "response is ApiReturnOfApiReturnOfWindeedOfficePersonResponseAndWindeedOwnerReferencedItem");
        }
        
        /// <summary>
        /// Test SectionalSchemeResult
        /// </summary>
        [Test]
        public void SectionalSchemeResultTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReferenceRequest referenceRequest = null;
            //var response = instance.SectionalSchemeResult(referenceRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfWindeedOfficeDocumentResponse), response, "response is ApiReturnOfWindeedOfficeDocumentResponse");
        }
        
        /// <summary>
        /// Test SectionalSchemeSearch
        /// </summary>
        [Test]
        public void SectionalSchemeSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WindeedUnitSearchRequest windeedUnitSearchRequest = null;
            //var response = instance.SectionalSchemeSearch(windeedUnitSearchRequest);
            //Assert.IsInstanceOf(typeof(ApiReturnOfApiReturnOfWindeedOfficeDocumentResponseAndWindeedOfficeProxiesSectionalSchemeUnit), response, "response is ApiReturnOfApiReturnOfWindeedOfficeDocumentResponseAndWindeedOfficeProxiesSectionalSchemeUnit");
        }
        
    }

}
