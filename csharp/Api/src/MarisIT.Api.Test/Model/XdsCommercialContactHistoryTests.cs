/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MarisIT.Api.Api;
using MarisIT.Api.Model;
using MarisIT.Api.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MarisIT.Api.Test
{
    /// <summary>
    ///  Class for testing XdsCommercialContactHistory
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class XdsCommercialContactHistoryTests
    {
        // TODO uncomment below to declare an instance variable for XdsCommercialContactHistory
        //private XdsCommercialContactHistory instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of XdsCommercialContactHistory
            //instance = new XdsCommercialContactHistory();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of XdsCommercialContactHistory
        /// </summary>
        [Test]
        public void XdsCommercialContactHistoryInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" XdsCommercialContactHistory
            //Assert.IsInstanceOf(typeof(XdsCommercialContactHistory), instance);
        }


        /// <summary>
        /// Test the property 'CommercialName'
        /// </summary>
        [Test]
        public void CommercialNameTest()
        {
            // TODO unit test for the property 'CommercialName'
        }
        /// <summary>
        /// Test the property 'ContactNumberType'
        /// </summary>
        [Test]
        public void ContactNumberTypeTest()
        {
            // TODO unit test for the property 'ContactNumberType'
        }
        /// <summary>
        /// Test the property 'ContactPerson'
        /// </summary>
        [Test]
        public void ContactPersonTest()
        {
            // TODO unit test for the property 'ContactPerson'
        }
        /// <summary>
        /// Test the property 'CreatedOnDate'
        /// </summary>
        [Test]
        public void CreatedOnDateTest()
        {
            // TODO unit test for the property 'CreatedOnDate'
        }
        /// <summary>
        /// Test the property 'Detail'
        /// </summary>
        [Test]
        public void DetailTest()
        {
            // TODO unit test for the property 'Detail'
        }
        /// <summary>
        /// Test the property 'DisplayText'
        /// </summary>
        [Test]
        public void DisplayTextTest()
        {
            // TODO unit test for the property 'DisplayText'
        }
        /// <summary>
        /// Test the property 'OccupiedDate'
        /// </summary>
        [Test]
        public void OccupiedDateTest()
        {
            // TODO unit test for the property 'OccupiedDate'
        }
        /// <summary>
        /// Test the property 'RegistrationNo'
        /// </summary>
        [Test]
        public void RegistrationNoTest()
        {
            // TODO unit test for the property 'RegistrationNo'
        }
        /// <summary>
        /// Test the property 'Source'
        /// </summary>
        [Test]
        public void SourceTest()
        {
            // TODO unit test for the property 'Source'
        }
        /// <summary>
        /// Test the property 'CommercialID'
        /// </summary>
        [Test]
        public void CommercialIDTest()
        {
            // TODO unit test for the property 'CommercialID'
        }

    }

}
