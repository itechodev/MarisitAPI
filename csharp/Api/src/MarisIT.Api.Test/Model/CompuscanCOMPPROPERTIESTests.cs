/*
 * MarisIT API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v6
 * Contact: development@marisit.co.za
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MarisIT.Api.Api;
using MarisIT.Api.Model;
using MarisIT.Api.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MarisIT.Api.Test
{
    /// <summary>
    ///  Class for testing CompuscanCOMPPROPERTIES
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CompuscanCOMPPROPERTIESTests
    {
        // TODO uncomment below to declare an instance variable for CompuscanCOMPPROPERTIES
        //private CompuscanCOMPPROPERTIES instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of CompuscanCOMPPROPERTIES
            //instance = new CompuscanCOMPPROPERTIES();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CompuscanCOMPPROPERTIES
        /// </summary>
        [Test]
        public void CompuscanCOMPPROPERTIESInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" CompuscanCOMPPROPERTIES
            //Assert.IsInstanceOf(typeof(CompuscanCOMPPROPERTIES), instance);
        }


        /// <summary>
        /// Test the property 'Activeindicator'
        /// </summary>
        [Test]
        public void ActiveindicatorTest()
        {
            // TODO unit test for the property 'Activeindicator'
        }
        /// <summary>
        /// Test the property 'Erfno'
        /// </summary>
        [Test]
        public void ErfnoTest()
        {
            // TODO unit test for the property 'Erfno'
        }
        /// <summary>
        /// Test the property 'Latitude'
        /// </summary>
        [Test]
        public void LatitudeTest()
        {
            // TODO unit test for the property 'Latitude'
        }
        /// <summary>
        /// Test the property 'Longitude'
        /// </summary>
        [Test]
        public void LongitudeTest()
        {
            // TODO unit test for the property 'Longitude'
        }
        /// <summary>
        /// Test the property 'Municipality'
        /// </summary>
        [Test]
        public void MunicipalityTest()
        {
            // TODO unit test for the property 'Municipality'
        }
        /// <summary>
        /// Test the property 'Portion'
        /// </summary>
        [Test]
        public void PortionTest()
        {
            // TODO unit test for the property 'Portion'
        }
        /// <summary>
        /// Test the property 'Propertyid'
        /// </summary>
        [Test]
        public void PropertyidTest()
        {
            // TODO unit test for the property 'Propertyid'
        }
        /// <summary>
        /// Test the property 'Propertytype'
        /// </summary>
        [Test]
        public void PropertytypeTest()
        {
            // TODO unit test for the property 'Propertytype'
        }
        /// <summary>
        /// Test the property 'Sectschemename'
        /// </summary>
        [Test]
        public void SectschemenameTest()
        {
            // TODO unit test for the property 'Sectschemename'
        }
        /// <summary>
        /// Test the property 'Unit'
        /// </summary>
        [Test]
        public void UnitTest()
        {
            // TODO unit test for the property 'Unit'
        }

    }

}
